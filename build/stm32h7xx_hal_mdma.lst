ARM GAS  /tmp/ccbSGc9b.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_mdma.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MDMA_SetConfig,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	MDMA_SetConfig:
  24              	.LFB160:
  25              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @file    stm32h7xx_hal_mdma.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  This file provides firmware functions to manage the following
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *         functionalities of the Master Direct Memory Access (MDMA) peripheral:
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *           + Initialization/de-initialization functions
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *           + I/O operation functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *           + Peripheral State and errors functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   @verbatim     
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   ==============================================================================      
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                         ##### How to use this driver #####
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   ============================================================================== 
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   [..]
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****    (#) Enable and configure the peripheral to be connected to the MDMA Channel
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        (except for internal SRAM/FLASH memories: no initialization is 
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        necessary) please refer to Reference manual for connection between peripherals
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        and MDMA requests. 
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****    (#) 
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        For a given Channel use HAL_MDMA_Init function to program the required configuration through
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        transfer request , channel priority, data endianness, Source increment, destination incremen
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        source data size, destination data size, data alignment, source Burst, destination Burst , 
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        buffer Transfer Length, Transfer Trigger Mode (buffer transfer, block transfer, repeated blo
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        or full transfer) source and destination block address offset, mask address and data.
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        If using the MDMA in linked list mode then use function HAL_MDMA_LinkedList_CreateNode to fi
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        Note that parameters given to the function HAL_MDMA_Init corresponds always to the node zero
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        Use function HAL_MDMA_LinkedList_AddNode to connect the created node to the linked list at a
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        User can make a linked list circular using function HAL_MDMA_LinkedList_EnableCircularMode ,
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        last node of the list to the first one in order to make the list circular.
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        In this case the linked list will loop on node 1 : first node connected after the initial tr
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        
ARM GAS  /tmp/ccbSGc9b.s 			page 2


  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       -@-   The initial transfer itself (node 0 corresponding to the Init).
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             User can disable the circular mode using function HAL_MDMA_LinkedList_DisableCircularMo
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             the connection between last node and first one.
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        Function HAL_MDMA_LinkedList_RemoveNode can be used to remove (disconnect) a node from the t
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        When a linked list is circular (last node connected to first one), if removing node1  (node 
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        the linked list remains circular and node 2 becomes the first one.
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        Note that if the linked list is made circular the transfer will loop infinitely (or until ab
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        (+) User can select the transfer trigger mode (parameter TransferTriggerMode) to define the 
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****            transfer upon a request :
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              (++) MDMA_BUFFER_TRANSFER : each request triggers a transfer of BufferTransferLength d
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                with BufferTransferLength defined within the HAL_MDMA_Init.
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              (++) MDMA_BLOCK_TRANSFER : each request triggers a transfer of a block 
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                with block size defined within the function HAL_MDMA_Start/HAL_MDMA_Start_IT 
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                or within the current linked list node parameters.
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              (++) MDMA_REPEAT_BLOCK_TRANSFER : each request triggers a transfer of a number of bloc
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                with block size and number of blocks defined within the function HAL_MDMA_Start/HAL_
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                or within the current linked list node parameters.
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              (++) MDMA_FULL_TRANSFER : each request triggers a full transfer 
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               all blocks and all nodes(if a linked list has been created using HAL_MDMA_LinkedList_
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      *** Polling mode IO operation ***
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      =================================   
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..] 
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_Start() to start MDMA transfer after the configuration of Source 
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               address and destination address and the Length of data to be transferred.
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_PollForTransfer() to poll for the end of current transfer or a transfer 
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              In this case a fixed Timeout can be configured by User depending from his application.
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_Abort() function to abort the current transfer : blocking method this AP
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               when the abort ends or timeout (should not be called from an interrupt service routin
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      *** Interrupt mode IO operation ***    
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      =================================== 
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]     
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Configure the MDMA interrupt priority using HAL_NVIC_SetPriority()
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Enable the MDMA IRQ handler using HAL_NVIC_EnableIRQ() 
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_Start_IT() to start MDMA transfer after the configuration of  
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               Source address and destination address and the Length of data to be transferred. In t
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               case the MDMA interrupt is configured. 
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_IRQHandler() called under MDMA_IRQHandler() Interrupt subroutine
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) At the end of data transfer HAL_MDMA_IRQHandler() function is executed and user can 
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               add his own function by customization of function pointer XferCpltCallback and 
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               XferErrorCallback (i.e a member of MDMA handle structure). 
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_Abort_IT() function to abort the current transfer : non-blocking method.
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               then the callback XferAbortCallback (if specified  by the user) is asserted once the 
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (could be called from an interrupt service routine).
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use functions HAL_MDMA_RegisterCallback and HAL_MDMA_UnRegisterCallback respectevely 
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               from the following list :
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferCpltCallback            : transfer complete callback.
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferBufferCpltCallback      : buffer transfer complete callback.
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferBlockCpltCallback       : block transfer complete callback.
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferRepeatBlockCpltCallback : repeated block transfer complete callback.        
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferErrorCallback           : transfer error callback.      
ARM GAS  /tmp/ccbSGc9b.s 			page 3


  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferAbortCallback           : transfer abort complete callback.    
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****          (+)  If the transfer Request corresponds to SW request (MDMA_REQUEST_SW) User can use func
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               trigger requests manually. Function HAL_MDMA_GenerateSWRequest must be used with the 
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) This function returns an error if used while the Transfer has ended or not start
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) If used while the current request has not been served yet (current request trans
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                 this function returns an error and the new request is ignored.
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               Generally this function should be used in conjunctions with the MDMA callbacks:      
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) example 1:  
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) Configure a transfer with request set to MDMA_REQUEST_SW and trigger mode se
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) Register a callback for buffer transfer complete (using callback ID set to H
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) After calling HAL_MDMA_Start_IT the MDMA will issue the transfer of a first 
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) When the buffer transfer complete callback is asserted first buffer has been
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                    request using HAL_MDMA_GenerateSWRequest. 
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) example 2:  
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) Configure a transfer with request set to MDMA_REQUEST_SW and trigger mode se
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) Register a callback for block transfer complete (using callback ID HAL_MDMA_
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) After calling HAL_MDMA_Start_IT the MDMA will issue the transfer of a first 
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) When the block transfer complete callback is asserted the first block has be
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                    for a new block transfer request using HAL_MDMA_GenerateSWRequest. 
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]  Use HAL_MDMA_GetState() function to return the MDMA state and HAL_MDMA_GetError() in case
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      *** MDMA HAL driver macros list ***
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      ============================================= 
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      [..]
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        Below the list of most used macros in MDMA HAL driver.
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_ENABLE: Enable the specified MDMA Channel.
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_DISABLE: Disable the specified MDMA Channel.
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_GET_FLAG: Get the MDMA Channel pending flags.
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_CLEAR_FLAG: Clear the MDMA Channel pending flags.
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_ENABLE_IT: Enable the specified MDMA Channel interrupts.
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_DISABLE_IT: Disable the specified MDMA Channel interrupts.
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_GET_IT_SOURCE: Check whether the specified MDMA Channel interrupt has occurred
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      [..] 
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (@) You can refer to the header file of the MDMA HAL driver for more useful macros.
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     @endverbatim
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   ******************************************************************************
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @attention
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics.
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * All rights reserved.</center></h2>
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * the "License"; You may not use this file except in compliance with the
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * License. You may obtain a copy of the License at:
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                        opensource.org/licenses/BSD-3-Clause
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   ******************************************************************************
ARM GAS  /tmp/ccbSGc9b.s 			page 4


 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Includes ------------------------------------------------------------------*/
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** #include "stm32h7xx_hal.h"
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup STM32H7xx_HAL_Driver
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @defgroup MDMA  MDMA
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief MDMA HAL module driver
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** #ifdef HAL_MDMA_MODULE_ENABLED
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Private typedef -----------------------------------------------------------*/
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Private constants ---------------------------------------------------------*/
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Private_Constants
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  * @{
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  */
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** #define HAL_TIMEOUT_MDMA_ABORT    5U    /* 5 ms */
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** #define HAL_MDMA_CHANNEL_SIZE     0x40U /* an MDMA instance channel size is 64 byte  */ 
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Private macro -------------------------------------------------------------*/
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Private variables ---------------------------------------------------------*/
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Private function prototypes -----------------------------------------------*/
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Private_Functions_Prototypes
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** static void MDMA_SetConfig(MDMA_HandleTypeDef *hmdma, uint32_t SrcAddress, uint32_t DstAddress, uin
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** static void MDMA_Init(MDMA_HandleTypeDef *hmdma);
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Exported_Functions MDMA Exported Functions
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Exported_Functions_Group1
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @verbatim   
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              ##### Initialization and de-initialization functions  #####
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================  
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     This section provides functions allowing to :
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       Initialize and de-initialize the MDMA channel.
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       Register and Unregister MDMA callbacks    
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     The HAL_MDMA_Init() function follows the MDMA channel configuration procedures as described in
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     reference manual. 
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     The HAL_MDMA_DeInit function allows to deinitialize the MDMA channel.
ARM GAS  /tmp/ccbSGc9b.s 			page 5


 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     HAL_MDMA_RegisterCallback and  HAL_MDMA_UnRegisterCallback functions allows 
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     respectevely to register/unregister an MDMA callback function.
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @endverbatim
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Initializes the MDMA according to the specified
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *         parameters in the MDMA_InitTypeDef and create the associated handle.
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *               the configuration information for the specified MDMA Channel.  
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t tickstart = HAL_GetTick();
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_STREAM_ALL_INSTANCE(hmdma->Instance));
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_PRIORITY(hmdma->Init.Priority));
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_ENDIANNESS_MODE(hmdma->Init.Endianness));
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_REQUEST(hmdma->Init.Request));
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_INC(hmdma->Init.SourceInc));
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_INC(hmdma->Init.DestinationInc));
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_DATASIZE(hmdma->Init.SourceDataSize));
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_DATASIZE(hmdma->Init.DestDataSize));
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DATA_ALIGNMENT(hmdma->Init.DataAlignment));
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_BURST(hmdma->Init.SourceBurst));
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_BURST(hmdma->Init.DestBurst));
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BUFFER_TRANSFER_LENGTH(hmdma->Init.BufferTransferLength));
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_TRANSFER_TRIGGER_MODE(hmdma->Init.TransferTriggerMode));
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.SourceBlockAddressOffset));
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.DestBlockAddressOffset)); 
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Allocate lock resource */
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma);
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Change MDMA peripheral state */
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->State = HAL_MDMA_STATE_BUSY;
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Disable the MDMA channel */
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_MDMA_DISABLE(hmdma);
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check if the MDMA channel is effectively disabled */
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Check for the Timeout */
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
ARM GAS  /tmp/ccbSGc9b.s 			page 6


 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Update error code */
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Change the MDMA state */
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->State = HAL_MDMA_STATE_ERROR;
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       return HAL_ERROR;
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Initialize the MDMA channel registers */
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MDMA_Init(hmdma);
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Reset the MDMA first/last linkedlist node addresses and node counter */
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->FirstLinkedListNodeAddress  = 0; 
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LastLinkedListNodeAddress   = 0; 
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LinkedListNodeCounter  = 0;  
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Initialize the error code */
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Initialize the MDMA state */
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->State = HAL_MDMA_STATE_READY;
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  DeInitializes the MDMA peripheral 
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma: pointer to a MDMA_HandleTypeDef structure that contains
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *               the configuration information for the specified MDMA Channel.  
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_DeInit(MDMA_HandleTypeDef *hmdma)
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {  
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral state */
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma->State == HAL_MDMA_STATE_BUSY)
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_BUSY;
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Disable the selected MDMA Channelx */
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_MDMA_DISABLE(hmdma);
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Reset MDMA Channel control register */
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CCR  = 0;
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CTCR = 0;
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CBNDTR = 0;
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CSAR = 0;
ARM GAS  /tmp/ccbSGc9b.s 			page 7


 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CDAR = 0;  
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CBRUR = 0;
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CLAR = 0;
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CTBR = 0;
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CMAR = 0;
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CMDR = 0;
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Clear all flags */
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_F
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Reset the  MDMA first/last linkedlist node addresses and node counter */
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->FirstLinkedListNodeAddress  = 0; 
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LastLinkedListNodeAddress   = 0; 
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LinkedListNodeCounter  = 0; 
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Initialize the error code */
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Initialize the MDMA state */
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->State = HAL_MDMA_STATE_RESET;
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Release Lock */
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma);
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Config the Post request Mask address and Mask data
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma      : pointer to a MDMA_HandleTypeDef structure that contains
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                               the configuration information for the specified MDMA Channel.
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  MaskAddress: specifies the address to be updated (written) with MaskData after a reques
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  MaskData:    specifies the value to be written to MaskAddress after a request is served
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                      MaskAddress and MaskData could be used to automatically clear a peripheral
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */  
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_ConfigPostRequestMask(MDMA_HandleTypeDef *hmdma, uint32_t MaskAddress, u
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef  status = HAL_OK;
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* if HW request set Post Request MaskAddress and MaskData,  */
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Set the HW request clear Mask and Data */
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->Instance->CMAR = MaskAddress;
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->Instance->CMDR = MaskData;
ARM GAS  /tmp/ccbSGc9b.s 			page 8


 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* 
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       -If the request is done by SW : BWM could be set to 1 or 0.
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       -If the request is done by a peripheral :
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****          If mask address not set (0) => BWM must be set to 0
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****          If mask address set (different than 0) => BWM could be set to 1 or 0
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       */
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(MaskAddress == 0U)
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       else
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Return error status */
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       status =  HAL_ERROR;      
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     status =  HAL_ERROR;
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Release Lock */
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma);
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return status;  
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Register callbacks
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:                pointer to a MDMA_HandleTypeDef structure that contains
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                               the configuration information for the specified MDMA Channel.
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  CallbackID:           User Callback identifier
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  pCallback:            pointer to callbacsk function.
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */                      
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_RegisterCallback(MDMA_HandleTypeDef *hmdma, HAL_MDMA_CallbackIDTypeDef C
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {  
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef status = HAL_OK;
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     switch (CallbackID)
ARM GAS  /tmp/ccbSGc9b.s 			page 9


 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_CPLT_CB_ID:
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferCpltCallback = pCallback;
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_BUFFERCPLT_CB_ID:
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBufferCpltCallback = pCallback;
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_BLOCKCPLT_CB_ID:
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBlockCpltCallback = pCallback;
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_REPBLOCKCPLT_CB_ID:
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferRepeatBlockCpltCallback = pCallback;
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_ERROR_CB_ID:
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferErrorCallback = pCallback;
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_ABORT_CB_ID:
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferAbortCallback = pCallback;
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     default:
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     status =  HAL_ERROR;
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Release Lock */
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma);
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return status;
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  UnRegister callbacks
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:                 pointer to a MDMA_HandleTypeDef structure that contains
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                               the configuration information for the specified MDMA Channel.
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  CallbackID:           User Callback identifier
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                               a HAL_MDMA_CallbackIDTypeDef ENUM as parameter.
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_UnRegisterCallback(MDMA_HandleTypeDef *hmdma, HAL_MDMA_CallbackIDTypeDef
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef status = HAL_OK;
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccbSGc9b.s 			page 10


 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     switch (CallbackID)
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_CPLT_CB_ID:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferCpltCallback = NULL;
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_BUFFERCPLT_CB_ID:
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBufferCpltCallback = NULL;
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_BLOCKCPLT_CB_ID:
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBlockCpltCallback = NULL;
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_REPBLOCKCPLT_CB_ID:
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferRepeatBlockCpltCallback = NULL;
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_ERROR_CB_ID:
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferErrorCallback = NULL;
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_ABORT_CB_ID:
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferAbortCallback = NULL;
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break; 
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case   HAL_MDMA_XFER_ALL_CB_ID:
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferCpltCallback = NULL;
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBufferCpltCallback = NULL;
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBlockCpltCallback = NULL;
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferRepeatBlockCpltCallback = NULL;
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferErrorCallback = NULL;
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferAbortCallback = NULL;
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break; 
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     default:
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       status = HAL_ERROR;
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     status = HAL_ERROR;
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Release Lock */
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma);
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return status;
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
ARM GAS  /tmp/ccbSGc9b.s 			page 11


 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Exported_Functions_Group2
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  *
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @verbatim   
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                       #####  Linked list operation functions  #####
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================  
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]  This section provides functions allowing to:
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Create a linked list node
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Add a node to the MDMA linked list
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Remove a node from the MDMA linked list
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Enable/Disable linked list circular mode 
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @endverbatim
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Initializes an MDMA Link Node according to the specified
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *         parameters in the pMDMA_LinkedListNodeConfig .
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  pNode: Pointer to a MDMA_LinkNodeTypeDef structure that contains Linked list node 
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *         registers configurations.  
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  pNodeConfig: Pointer to a MDMA_LinkNodeConfTypeDef structure that contains
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *               the configuration information for the specified MDMA Linked List Node. 
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_LinkedList_CreateNode(MDMA_LinkNodeTypeDef *pNode, MDMA_LinkNodeConfType
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t addressMask;
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t blockoffset;
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral state */
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((pNode == NULL) || (pNodeConfig == NULL))
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_PRIORITY(pNodeConfig->Init.Priority));
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_ENDIANNESS_MODE(pNodeConfig->Init.Endianness));
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_REQUEST(pNodeConfig->Init.Request));
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_INC(pNodeConfig->Init.SourceInc));
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_INC(pNodeConfig->Init.DestinationInc));
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_DATASIZE(pNodeConfig->Init.SourceDataSize));
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_DATASIZE(pNodeConfig->Init.DestDataSize));
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DATA_ALIGNMENT(pNodeConfig->Init.DataAlignment));
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_BURST(pNodeConfig->Init.SourceBurst));
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_BURST(pNodeConfig->Init.DestBurst));
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BUFFER_TRANSFER_LENGTH(pNodeConfig->Init.BufferTransferLength));
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_TRANSFER_TRIGGER_MODE(pNodeConfig->Init.TransferTriggerMode));
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(pNodeConfig->Init.SourceBlockAddressOffset));
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(pNodeConfig->Init.DestBlockAddressOffset));
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_TRANSFER_LENGTH(pNodeConfig->BlockDataLength));
ARM GAS  /tmp/ccbSGc9b.s 			page 12


 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_COUNT(pNodeConfig->BlockCount));  
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure next Link node Address Register to zero */
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CLAR =  0;
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure the Link Node registers*/
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CTBR   = 0;
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CMAR   = 0;  
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CMDR   = 0;
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->Reserved = 0;
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Write new CTCR Register value */
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CTCR =  pNodeConfig->Init.SourceInc | pNodeConfig->Init.DestinationInc | \
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNodeConfig->Init.SourceDataSize | pNodeConfig->Init.DestDataSize           | \
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       pNodeConfig->Init.DataAlignment| pNodeConfig->Init.SourceBurst            | \
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         pNodeConfig->Init.DestBurst                                             | \
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           ((pNodeConfig->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             pNodeConfig->Init.TransferTriggerMode;
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* If SW request set the CTCR register to SW Request Mode*/
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(pNodeConfig->Init.Request == MDMA_REQUEST_SW)
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CTCR |= MDMA_CTCR_SWRM;
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* 
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   -If the request is done by SW : BWM could be set to 1 or 0.
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   -If the request is done by a peripheral :
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      If mask address not set (0) => BWM must be set to 0
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      If mask address set (different than 0) => BWM could be set to 1 or 0
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((pNodeConfig->Init.Request == MDMA_REQUEST_SW) || (pNodeConfig->PostRequestMaskAddress != 0U))
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CTCR |=  MDMA_CTCR_BWM;
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Set the new CBNDTR Register value */ 
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CBNDTR = ((pNodeConfig->BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC;
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* if block source address offset is negative set the Block Repeat Source address Update Mode to 
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(pNodeConfig->Init.SourceBlockAddressOffset < 0)
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBNDTR |= MDMA_CBNDTR_BRSUM;
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : source repeat block offset */
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     blockoffset = (uint32_t)(- pNodeConfig->Init.SourceBlockAddressOffset);
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBRUR = blockoffset & 0x0000FFFFU;
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : source repeat block offset */     
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBRUR = (((uint32_t) pNodeConfig->Init.SourceBlockAddressOffset) & 0x0000FFFFU);    
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }    
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* if block destination address offset is negative set the Block Repeat destination address Updat
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(pNodeConfig->Init.DestBlockAddressOffset < 0)
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
ARM GAS  /tmp/ccbSGc9b.s 			page 13


 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBNDTR |= MDMA_CBNDTR_BRDUM;
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : destination repeat block offset */
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     blockoffset = (uint32_t)(- pNodeConfig->Init.DestBlockAddressOffset);
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : destination repeat block offset */     
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBRUR |= ((((uint32_t)pNodeConfig->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_C
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }    
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure MDMA Link Node data length */
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CBNDTR |=  pNodeConfig->BlockDataLength;
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure MDMA Link Node destination address */
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CDAR = pNodeConfig->DstAddress; 
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure MDMA Link Node Source address */
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CSAR = pNodeConfig->SrcAddress;
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* if HW request set the HW request and the requet CleraMask and ClearData MaskData,  */
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(pNodeConfig->Init.Request != MDMA_REQUEST_SW)
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Set the HW request in CTBR register  */
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CTBR = pNodeConfig->Init.Request & MDMA_CTBR_TSEL;
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Set the HW request clear Mask and Data */
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CMAR = pNodeConfig->PostRequestMaskAddress;
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CMDR = pNodeConfig->PostRequestMaskData;      
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   addressMask = pNodeConfig->SrcAddress & 0xFF000000U;
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AHBSbus is used as source (read operation) on channel x */
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CTBR |= MDMA_CTBR_SBUS;  
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   addressMask = pNodeConfig->DstAddress & 0xFF000000U;
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AHB bus is used as destination (write operation) on channel x */
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CTBR |= MDMA_CTBR_DBUS;
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Connect a node to the linked list.
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma    : Pointer to a MDMA_HandleTypeDef structure that contains
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                    the configuration information for the specified MDMA Channel.
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  pNewNode : Pointer to a MDMA_LinkNodeTypeDef structure that contains Linked list node 
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                    to be add to the list.
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param pPrevNode : Pointer to the new node position in the linked list or zero to insert the ne
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                    at the end of the list 
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
ARM GAS  /tmp/ccbSGc9b.s 			page 14


 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_LinkedList_AddNode(MDMA_HandleTypeDef *hmdma, MDMA_LinkNodeTypeDef *pNew
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MDMA_LinkNodeTypeDef *pNode;
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t counter = 0, nodeInserted = 0;
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;  
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((hmdma == NULL) || (pNewNode == NULL))
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY;
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Check if this is the first node (after the Inititlization node) */
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if((uint32_t)hmdma->FirstLinkedListNodeAddress == 0U)
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(pPrevNode == NULL)
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* if this is the first node after the initialization  
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         connect this node to the node 0 by updating
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         the MDMA channel CLAR register to this node address */
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->Instance->CLAR = (uint32_t)pNewNode;
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Set the MDMA handle First linked List node*/
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->FirstLinkedListNodeAddress = pNewNode;
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /*reset New node link */
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         pNewNode->CLAR = 0;
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update the Handle last node address */      
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LastLinkedListNodeAddress = pNewNode;
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LinkedListNodeCounter = 1;
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       else
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hal_status = HAL_ERROR;
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else if(hmdma->FirstLinkedListNodeAddress != pNewNode)  
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Check if the node to insert already exists*/        
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       pNode = hmdma->FirstLinkedListNodeAddress;
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       while((counter < hmdma->LinkedListNodeCounter) && (hal_status == HAL_OK))
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         if(pNode->CLAR == (uint32_t)pNewNode)
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hal_status = HAL_ERROR; /* error this node already exist in the linked list and it is not
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         pNode = (MDMA_LinkNodeTypeDef *)pNode->CLAR;
ARM GAS  /tmp/ccbSGc9b.s 			page 15


 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         counter++;
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hal_status == HAL_OK)
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Check if the previous node is the last one in the current list or zero */     
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         if((pPrevNode == hmdma->LastLinkedListNodeAddress) || (pPrevNode == NULL))
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* insert the new node at the end of the list */
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           pNewNode->CLAR = hmdma->LastLinkedListNodeAddress->CLAR;            
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->LastLinkedListNodeAddress->CLAR = (uint32_t)pNewNode;
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* Update the Handle last node address */
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->LastLinkedListNodeAddress = pNewNode;
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* Increment the linked list node counter */
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->LinkedListNodeCounter++;
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         else
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /*insert the new node after the pPreviousNode node */ 
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           pNode = hmdma->FirstLinkedListNodeAddress;
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           counter = 0;
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           while((counter < hmdma->LinkedListNodeCounter) && (nodeInserted == 0U))
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             counter++;
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             if(pNode == pPrevNode)
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             {
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               /*Insert the new node after the previous one */
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               pNewNode->CLAR = pNode->CLAR;
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               pNode->CLAR = (uint32_t)pNewNode; 
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               /* Increment the linked list node counter */
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               hmdma->LinkedListNodeCounter++;
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               nodeInserted = 1;
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             }
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             else
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             {
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               pNode = (MDMA_LinkNodeTypeDef *)pNode->CLAR;
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             }
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           }
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           if(nodeInserted == 0U)
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             hal_status = HAL_ERROR;
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           }
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }      
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hal_status = HAL_ERROR;     
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma); 
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_READY;
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return hal_status; 
ARM GAS  /tmp/ccbSGc9b.s 			page 16


 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_BUSY;
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   } 
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Disconnect/Remove a node from the transfer linked list.
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma : Pointer to a MDMA_HandleTypeDef structure that contains
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 the configuration information for the specified MDMA Channel.
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  pNode : Pointer to a MDMA_LinkNodeTypeDef structure that contains Linked list node 
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 to be removed from the list.
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_LinkedList_RemoveNode(MDMA_HandleTypeDef *hmdma, MDMA_LinkNodeTypeDef *p
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MDMA_LinkNodeTypeDef *ptmpNode;
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t counter = 0, nodeDeleted = 0;
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;  
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((hmdma == NULL) || (pNode == NULL))
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY;
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* If first and last node are null (no nodes in the list) : return error*/
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(((uint32_t)hmdma->FirstLinkedListNodeAddress == 0U) || ((uint32_t)hmdma->LastLinkedListNodeA
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hal_status = HAL_ERROR;
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else if(hmdma->FirstLinkedListNodeAddress == pNode) /* Deleting first node */
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Delete 1st node */
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hmdma->LastLinkedListNodeAddress == pNode)
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /*if the last node is at the same time the first one (1 single node after the init node 0)
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         then update the last node too */
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->FirstLinkedListNodeAddress = 0;
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LastLinkedListNodeAddress  = 0;
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LinkedListNodeCounter = 0;
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
ARM GAS  /tmp/ccbSGc9b.s 			page 17


 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->Instance->CLAR = 0;
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       else
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         if((uint32_t)hmdma->FirstLinkedListNodeAddress == hmdma->LastLinkedListNodeAddress->CLAR)
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* if last node is looping to first (circular list) one update the last node connection *
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->LastLinkedListNodeAddress->CLAR = pNode->CLAR;
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* if deleting the first node after the initialization  
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         connect the next node to the node 0 by updating
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         the MDMA channel CLAR register to this node address */        
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->Instance->CLAR = pNode->CLAR;
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->FirstLinkedListNodeAddress = (MDMA_LinkNodeTypeDef *)hmdma->Instance->CLAR;
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update the Handle node counter */
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LinkedListNodeCounter--;        
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }     
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else /* Deleting any other node */
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /*Deleted node is not the first one : find it  */      
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       ptmpNode = hmdma->FirstLinkedListNodeAddress;
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       while((counter < hmdma->LinkedListNodeCounter) && (nodeDeleted == 0U))
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         counter++;
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         if(ptmpNode->CLAR == ((uint32_t)pNode))
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* if deleting the last node */
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           if(pNode == hmdma->LastLinkedListNodeAddress)
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             /*Update the linked list last node address in the handle*/
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             hmdma->LastLinkedListNodeAddress = ptmpNode;
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           }
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* update the next node link after deleting pMDMA_LinkedListNode */
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           ptmpNode->CLAR = pNode->CLAR;
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           nodeDeleted = 1;
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* Update the Handle node counter */
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->LinkedListNodeCounter--;  
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         else
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           ptmpNode = (MDMA_LinkNodeTypeDef *)ptmpNode->CLAR;
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(nodeDeleted == 0U)
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* last node reashed without finding the node to delete : return error */
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hal_status = HAL_ERROR;
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma); 
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_READY;
ARM GAS  /tmp/ccbSGc9b.s 			page 18


 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return hal_status; 
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_BUSY;
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   } 
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Make the linked list circular by connecting the last node to the first.
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma : Pointer to a MDMA_HandleTypeDef structure that contains
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 the configuration information for the specified MDMA Channel.
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_LinkedList_EnableCircularMode(MDMA_HandleTypeDef *hmdma)
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;  
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY; 
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* If first and last node are null (no nodes in the list) : return error*/
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(((uint32_t)hmdma->FirstLinkedListNodeAddress == 0U) || ((uint32_t)hmdma->LastLinkedListNodeA
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hal_status = HAL_ERROR;
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* to enable circular mode Last Node should be connected to first node */
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->LastLinkedListNodeAddress->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process unlocked */
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma); 
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->State = HAL_MDMA_STATE_READY;
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return hal_status;  
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
ARM GAS  /tmp/ccbSGc9b.s 			page 19


1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Disable the linked list circular mode by setting the last node connection to null
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma : Pointer to a MDMA_HandleTypeDef structure that contains
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 the configuration information for the specified MDMA Channel.
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_LinkedList_DisableCircularMode(MDMA_HandleTypeDef *hmdma)
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;  
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY; 
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* If first and last node are null (no nodes in the list) : return error*/
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(((uint32_t)hmdma->FirstLinkedListNodeAddress == 0U) || ((uint32_t)hmdma->LastLinkedListNodeA
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hal_status = HAL_ERROR;
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* to disable circular mode Last Node should be connected to NULL */
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->LastLinkedListNodeAddress->CLAR = 0;
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process unlocked */
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma); 
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->State = HAL_MDMA_STATE_READY;
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return hal_status;  
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Exported_Functions_Group3
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  *
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @verbatim   
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                       #####  IO operation functions  #####
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================  
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]  This section provides functions allowing to:
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Configure the source, destination address and data length and Start MDMA transfer
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Configure the source, destination address and data length and 
ARM GAS  /tmp/ccbSGc9b.s 			page 20


1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           Start MDMA transfer with interrupt
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Abort MDMA transfer
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Poll for transfer complete
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Generate a SW request (when Request is set to MDMA_REQUEST_SW)
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Handle MDMA interrupt request  
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @endverbatim
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Starts the MDMA Transfer.
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma           : pointer to a MDMA_HandleTypeDef structure that contains
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                           the configuration information for the specified MDMA Channel.  
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  SrcAddress      : The source memory Buffer address
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  DstAddress      : The destination memory Buffer address
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockDataLength : The length of a block transfer in bytes
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockCount      : The number of a blocks to be transfer
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_Start(MDMA_HandleTypeDef *hmdma, uint32_t SrcAddress, uint32_t DstAddres
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_TRANSFER_LENGTH(BlockDataLength));
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_COUNT(BlockCount));  
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY;
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Initialize the error code */
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NONE; 
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable the peripheral */
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE(hmdma);
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Configure the source, destination address and the data length */
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     MDMA_SetConfig(hmdma, SrcAddress, DstAddress, BlockDataLength, BlockCount);
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Enable the Peripheral */
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_ENABLE(hmdma);
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(hmdma->Init.Request == MDMA_REQUEST_SW)
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* activate If SW request mode*/
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }  
ARM GAS  /tmp/ccbSGc9b.s 			page 21


1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_BUSY;
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK; 
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Starts the MDMA Transfer with interrupts enabled.
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma           : pointer to a MDMA_HandleTypeDef structure that contains
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                           the configuration information for the specified MDMA Channel.  
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  SrcAddress      : The source memory Buffer address
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  DstAddress      : The destination memory Buffer address
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockDataLength : The length of a block transfer in bytes
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockCount      : The number of a blocks to be transfer
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_Start_IT(MDMA_HandleTypeDef *hmdma, uint32_t SrcAddress, uint32_t DstAdd
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_TRANSFER_LENGTH(BlockDataLength));
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_COUNT(BlockCount)); 
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY;
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Initialize the error code */
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;     
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable the peripheral */
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE(hmdma);
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Configure the source, destination address and the data length */
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     MDMA_SetConfig(hmdma, SrcAddress, DstAddress, BlockDataLength, BlockCount);
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Enable Common interrupts i.e Transfer Error IT and Channel Transfer Complete IT*/
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(hmdma->XferBlockCpltCallback != NULL)
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
ARM GAS  /tmp/ccbSGc9b.s 			page 22


1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* if Block transfer complete Callback is set enable the corresponding IT*/
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);    
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(hmdma->XferRepeatBlockCpltCallback != NULL)
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* if Repeated Block transfer complete Callback is set enable the corresponding IT*/      
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);    
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }  
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(hmdma->XferBufferCpltCallback != NULL)
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* if buffer transfer complete Callback is set enable the corresponding IT*/
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Enable the Peripheral */
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_ENABLE(hmdma);
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(hmdma->Init.Request == MDMA_REQUEST_SW)
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* activate If SW request mode*/
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }  
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_BUSY;
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** } 
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Aborts the MDMA Transfer.
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma  : pointer to a MDMA_HandleTypeDef structure that contains
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 the configuration information for the specified MDMA Channel.
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                   
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @note  After disabling a MDMA Channel, a check for wait until the MDMA Channel is 
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *        effectively disabled is added. If a Channel is disabled 
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *        while a data transfer is ongoing, the current data will be transferred
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *        and the Channel will be effectively disabled only after the transfer of
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *        this single data is finished.  
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_Abort(MDMA_HandleTypeDef *hmdma)
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t tickstart =  HAL_GetTick();
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccbSGc9b.s 			page 23


1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_BUSY != hmdma->State)
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process Unlocked */
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable all the transfer interrupts */
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFT
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable the channel */
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE(hmdma);
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Check if the MDMA Channel is effectively disabled */
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Check for the Timeout */
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code */
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Process Unlocked */
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         __HAL_UNLOCK(hmdma);
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Change the MDMA state */
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->State = HAL_MDMA_STATE_ERROR;
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         return HAL_ERROR;
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Clear all interrupt flags */
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDM
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process Unlocked */
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change the MDMA state*/
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_READY; 
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK; 
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Aborts the MDMA Transfer in Interrupt mode.
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma  : pointer to a MDMA_HandleTypeDef structure that contains
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 the configuration information for the specified MDMA Channel.
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
ARM GAS  /tmp/ccbSGc9b.s 			page 24


1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_Abort_IT(MDMA_HandleTypeDef *hmdma)
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_BUSY != hmdma->State)
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* No transfer ongoing */
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 	
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Set Abort State  */
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_ABORT;
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable the stream */
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE(hmdma);
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Polling for transfer complete.
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:          pointer to a MDMA_HandleTypeDef structure that contains
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                        the configuration information for the specified MDMA Channel.
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  CompleteLevel: Specifies the MDMA level complete.  
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  Timeout:       Timeout duration.
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_PollForTransfer(MDMA_HandleTypeDef *hmdma, HAL_MDMA_LevelCompleteTypeDef
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t levelFlag, errorFlag;
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t tickstart;
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_LEVEL_COMPLETE(CompleteLevel));
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_BUSY != hmdma->State)
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* No transfer ongoing */
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
ARM GAS  /tmp/ccbSGc9b.s 			page 25


1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Get the level transfer complete flag */
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   levelFlag = ((CompleteLevel == HAL_MDMA_FULL_TRANSFER)  ? MDMA_FLAG_CTC  : \
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                (CompleteLevel == HAL_MDMA_BUFFER_TRANSFER)? MDMA_FLAG_BFTC : \
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                (CompleteLevel == HAL_MDMA_BLOCK_TRANSFER) ? MDMA_FLAG_BT   : \
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                MDMA_FLAG_BRT);
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Get timeout */
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   tickstart = HAL_GetTick();
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   while(__HAL_MDMA_GET_FLAG(hmdma, levelFlag) == 0U)
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {      
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Get the transfer error source flag */
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       errorFlag = hmdma->Instance->CESR;
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TED) == 0U)
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Read Transfer error  */
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       else
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Write Transfer error */
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;        
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TEMD) != 0U)
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Error Mask Data */
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TELD) != 0U)
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Error Linked list */
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_ASE) != 0U)
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Address/Size alignment error */
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_BSE) != 0U)
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Block Size error */
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }      
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (void) HAL_MDMA_Abort(hmdma); /* if error then abort the current transfer */
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /*
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         Note that the Abort function will 
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           - Clear all transfer flags
ARM GAS  /tmp/ccbSGc9b.s 			page 26


1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           - Unlock
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           - Set the State          
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       */       
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       return HAL_ERROR;
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Check for the Timeout */
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(Timeout != HAL_MAX_DELAY)
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(((HAL_GetTick() - tickstart ) > Timeout) || (Timeout == 0U))
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code */
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         (void) HAL_MDMA_Abort(hmdma); /* if timeout then abort the current transfer */
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /*
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           Note that the Abort function will 
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             - Clear all transfer flags
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             - Unlock
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             - Set the State          
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         */
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         return HAL_ERROR;
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Clear the transfer level flag */
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(CompleteLevel == HAL_MDMA_BUFFER_TRANSFER)
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else if(CompleteLevel == HAL_MDMA_BLOCK_TRANSFER)
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_BFTC | MDMA_FLAG_BT));
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else if(CompleteLevel == HAL_MDMA_REPEAT_BLOCK_TRANSFER)
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_BFTC | MDMA_FLAG_BT | MDMA_FLAG_BRT));    
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }    
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else if(CompleteLevel == HAL_MDMA_FULL_TRANSFER)
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC | MDMA_FLAG_CTC));
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma); 
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_READY;
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccbSGc9b.s 			page 27


1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Generate an MDMA SW request trigger to activate the request on the given Channel.
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:       pointer to a MDMA_HandleTypeDef structure that contains
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                     the configuration information for the specified MDMA Stream.  
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_GenerateSWRequest(MDMA_HandleTypeDef *hmdma)
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t request_mode;
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Get the softawre request mode */
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   request_mode = hmdma->Instance->CTCR & MDMA_CTCR_SWRM;
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((hmdma->Instance->CCR &  MDMA_CCR_EN) == 0U)
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* if no Transfer on going (MDMA enable bit not set) retrun error */
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;      
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else if(((hmdma->Instance->CISR &  MDMA_CISR_CRQA) != 0U) || (request_mode == 0U))
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* if an MDMA ongoing request has not yet end or if request mode is not SW request retrun error
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_BUSY;
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;      
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Set the SW request bit to activate the request on the Channel */
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CCR |= MDMA_CCR_SWRQ;
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_OK;
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** } 
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Handles MDMA interrupt request.
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma: pointer to a MDMA_HandleTypeDef structure that contains
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *               the configuration information for the specified MDMA Channel.  
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval None
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** void HAL_MDMA_IRQHandler(MDMA_HandleTypeDef *hmdma)
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __IO uint32_t count = 0;
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t timeout = SystemCoreClock / 9600U;
ARM GAS  /tmp/ccbSGc9b.s 			page 28


1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t generalIntFlag, errorFlag;
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* General Interrupt Flag management ****************************************/  
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANN
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((MDMA->GISR0 & generalIntFlag) == 0U)
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return; /* the  General interrupt flag for the current channel is down , nothing to do */
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }    
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Transfer Error Interrupt management ***************************************/
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {      
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Disable the transfer error interrupt */
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Get the transfer error source flag */
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       errorFlag = hmdma->Instance->CESR;
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TED) == 0U)
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Read Transfer error  */
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       else
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Write Transfer error */
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;        
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TEMD) != 0U)
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Error Mask Data */
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TELD) != 0U)
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Error Linked list */
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_ASE) != 0U)
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Address/Size alignment error */
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_BSE) != 0U)
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Block Size error error */
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }       
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Clear the transfer error flags */
ARM GAS  /tmp/ccbSGc9b.s 			page 29


1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);     
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Buffer Transfer Complete Interrupt management ******************************/
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Clear the buffer transfer complete flag */
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hmdma->XferBufferCpltCallback != NULL)
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Buffer transfer callback */
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->XferBufferCpltCallback(hmdma);
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }          
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Block Transfer Complete Interrupt management ******************************/
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Clear the block transfer complete flag */
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hmdma->XferBlockCpltCallback != NULL)
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Block transfer callback */
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->XferBlockCpltCallback(hmdma);
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }          
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Repeated Block Transfer Complete Interrupt management ******************************/
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Clear the repeat block transfer complete flag */
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hmdma->XferRepeatBlockCpltCallback != NULL)
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Repeated Block transfer callback */
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->XferRepeatBlockCpltCallback(hmdma);
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }          
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }   
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Channel Transfer Complete Interrupt management ***********************************/
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
ARM GAS  /tmp/ccbSGc9b.s 			page 30


1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Disable all the transfer interrupts */
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_B
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(HAL_MDMA_STATE_ABORT == hmdma->State)
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Process Unlocked */
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         __HAL_UNLOCK(hmdma);
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Change the DMA state */
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->State = HAL_MDMA_STATE_READY;
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         if(hmdma->XferAbortCallback != NULL)
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->XferAbortCallback(hmdma);
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         return;
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 	  
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Clear the Channel Transfer Complete flag */
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Process Unlocked */
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_UNLOCK(hmdma); 
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Change MDMA peripheral state */
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->State = HAL_MDMA_STATE_READY;
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hmdma->XferCpltCallback != NULL)
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Channel Transfer Complete callback */
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->XferCpltCallback(hmdma);
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }          
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* manage error case */
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_ABORT;
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable the channel */
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE(hmdma);
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     do
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if (++count > timeout)
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         break;
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process Unlocked */
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
ARM GAS  /tmp/ccbSGc9b.s 			page 31


1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Change the MDMA state to error if MDMA disable fails */
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->State = HAL_MDMA_STATE_ERROR;
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Change the MDMA state to Ready if MDMA disable success */
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->State = HAL_MDMA_STATE_READY;      
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if (hmdma->XferErrorCallback != NULL)
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Transfer error callback */
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferErrorCallback(hmdma);
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Exported_Functions_Group4
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  *
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @verbatim
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                     ##### State and Errors functions #####
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     This subsection provides functions allowing to
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Check the MDMA state
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Get error code
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @endverbatim
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Returns the MDMA state.
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma: pointer to a MDMA_HandleTypeDef structure that contains
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *               the configuration information for the specified MDMA Channel.
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL state
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_MDMA_StateTypeDef HAL_MDMA_GetState(MDMA_HandleTypeDef *hmdma)
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return hmdma->State;
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Return the MDMA error code
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma : pointer to a MDMA_HandleTypeDef structure that contains
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *              the configuration information for the specified MDMA Channel.
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval MDMA Error Code
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** uint32_t HAL_MDMA_GetError(MDMA_HandleTypeDef *hmdma)
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return hmdma->ErrorCode;
ARM GAS  /tmp/ccbSGc9b.s 			page 32


1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Private_Functions
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Sets the MDMA Transfer parameter.
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:       pointer to a MDMA_HandleTypeDef structure that contains
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                     the configuration information for the specified MDMA Channel.
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  SrcAddress: The source memory Buffer address
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  DstAddress: The destination memory Buffer address
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockDataLength : The length of a block transfer in bytes
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockCount: The number of blocks to be transfered
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** static void MDMA_SetConfig(MDMA_HandleTypeDef *hmdma, uint32_t SrcAddress, uint32_t DstAddress, uin
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
  26              		.loc 1 1769 0
  27              		.cfi_startproc
  28              		@ args = 4, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32 0000 70B4     		push	{r4, r5, r6}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 6, -4
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t addressMask;
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure the MDMA Channel data length */
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
  38              		.loc 1 1773 0
  39 0002 0568     		ldr	r5, [r0]
  40 0004 6E69     		ldr	r6, [r5, #20]
  41 0006 1F4C     		ldr	r4, .L8
  42 0008 3440     		ands	r4, r4, r6
  43 000a C3F31003 		ubfx	r3, r3, #0, #17
  44              	.LVL1:
  45 000e 1C43     		orrs	r4, r4, r3
  46 0010 6C61     		str	r4, [r5, #20]
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure the MDMA block repeat count */
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos)
  47              		.loc 1 1776 0
  48 0012 0568     		ldr	r5, [r0]
  49 0014 6B69     		ldr	r3, [r5, #20]
ARM GAS  /tmp/ccbSGc9b.s 			page 33


  50 0016 C3F31303 		ubfx	r3, r3, #0, #20
  51 001a 039C     		ldr	r4, [sp, #12]
  52 001c 013C     		subs	r4, r4, #1
  53 001e 43EA0453 		orr	r3, r3, r4, lsl #20
  54 0022 6B61     		str	r3, [r5, #20]
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Clear all interrupt flags */
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MD
  55              		.loc 1 1779 0
  56 0024 0368     		ldr	r3, [r0]
  57 0026 1F24     		movs	r4, #31
  58 0028 5C60     		str	r4, [r3, #4]
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure MDMA Channel destination address */
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CDAR = DstAddress; 
  59              		.loc 1 1782 0
  60 002a 0368     		ldr	r3, [r0]
  61 002c DA61     		str	r2, [r3, #28]
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure MDMA Channel Source address */
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CSAR = SrcAddress;
  62              		.loc 1 1785 0
  63 002e 0368     		ldr	r3, [r0]
  64 0030 9961     		str	r1, [r3, #24]
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   addressMask = SrcAddress & 0xFF000000U;
  65              		.loc 1 1787 0
  66 0032 01F07F41 		and	r1, r1, #-16777216
  67              	.LVL2:
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
  68              		.loc 1 1788 0
  69 0036 0029     		cmp	r1, #0
  70 0038 18BF     		it	ne
  71 003a B1F1005F 		cmpne	r1, #536870912
  72 003e 15D1     		bne	.L2
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AHBSbus is used as source (read operation) on channel x */
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;  
  73              		.loc 1 1791 0
  74 0040 0168     		ldr	r1, [r0]
  75              	.LVL3:
  76 0042 8B6A     		ldr	r3, [r1, #40]
  77              	.LVL4:
  78 0044 43F48033 		orr	r3, r3, #65536
  79 0048 8B62     		str	r3, [r1, #40]
  80              	.L3:
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AXI bus is used as source (read operation) on channel x */
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);  
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   addressMask = DstAddress & 0xFF000000U;
  81              		.loc 1 1799 0
  82 004a 02F07F42 		and	r2, r2, #-16777216
  83              	.LVL5:
ARM GAS  /tmp/ccbSGc9b.s 			page 34


1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
  84              		.loc 1 1800 0
  85 004e 002A     		cmp	r2, #0
  86 0050 18BF     		it	ne
  87 0052 B2F1005F 		cmpne	r2, #536870912
  88 0056 0FD0     		beq	.L7
1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AHB bus is used as destination (write operation) on channel x */
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AXI bus is used as destination (write operation) on channel x */
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);  
  89              		.loc 1 1808 0
  90 0058 0268     		ldr	r2, [r0]
  91              	.LVL6:
  92 005a 936A     		ldr	r3, [r2, #40]
  93 005c 23F40033 		bic	r3, r3, #131072
  94 0060 9362     		str	r3, [r2, #40]
  95              	.L5:
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Set the linked list register to the first node of the list */
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;  
  96              		.loc 1 1812 0
  97 0062 0368     		ldr	r3, [r0]
  98 0064 C26D     		ldr	r2, [r0, #92]
  99 0066 5A62     		str	r2, [r3, #36]
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 100              		.loc 1 1813 0
 101 0068 70BC     		pop	{r4, r5, r6}
 102              	.LCFI1:
 103              		.cfi_remember_state
 104              		.cfi_restore 6
 105              		.cfi_restore 5
 106              		.cfi_restore 4
 107              		.cfi_def_cfa_offset 0
 108              	.LVL7:
 109 006a 7047     		bx	lr
 110              	.LVL8:
 111              	.L2:
 112              	.LCFI2:
 113              		.cfi_restore_state
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 114              		.loc 1 1796 0
 115 006c 0168     		ldr	r1, [r0]
 116              	.LVL9:
 117 006e 8B6A     		ldr	r3, [r1, #40]
 118              	.LVL10:
 119 0070 23F48033 		bic	r3, r3, #65536
 120 0074 8B62     		str	r3, [r1, #40]
 121 0076 E8E7     		b	.L3
 122              	.LVL11:
 123              	.L7:
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 124              		.loc 1 1803 0
ARM GAS  /tmp/ccbSGc9b.s 			page 35


 125 0078 0268     		ldr	r2, [r0]
 126              	.LVL12:
 127 007a 936A     		ldr	r3, [r2, #40]
 128 007c 43F40033 		orr	r3, r3, #131072
 129 0080 9362     		str	r3, [r2, #40]
 130 0082 EEE7     		b	.L5
 131              	.L9:
 132              		.align	2
 133              	.L8:
 134 0084 0000FEFF 		.word	-131072
 135              		.cfi_endproc
 136              	.LFE160:
 138              		.section	.text.MDMA_Init,"ax",%progbits
 139              		.align	1
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv5-d16
 145              	MDMA_Init:
 146              	.LFB161:
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Initializes the MDMA handle according to the specified
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *         parameters in the MDMA_InitTypeDef
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:       pointer to a MDMA_HandleTypeDef structure that contains
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                     the configuration information for the specified MDMA Channel.
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval None
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** static void MDMA_Init(MDMA_HandleTypeDef *hmdma)
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 147              		.loc 1 1823 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152              	.LVL13:
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t blockoffset;
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Prepare the MDMA Channel configuration */
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
 153              		.loc 1 1827 0
 154 0000 0268     		ldr	r2, [r0]
 155 0002 C368     		ldr	r3, [r0, #12]
 156 0004 0169     		ldr	r1, [r0, #16]
 157 0006 0B43     		orrs	r3, r3, r1
 158 0008 D360     		str	r3, [r2, #12]
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Write new CTCR Register value */
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
 159              		.loc 1 1830 0
 160 000a 0268     		ldr	r2, [r0]
 161 000c 4369     		ldr	r3, [r0, #20]
 162 000e 8169     		ldr	r1, [r0, #24]
 163 0010 0B43     		orrs	r3, r3, r1
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
 164              		.loc 1 1831 0
 165 0012 C169     		ldr	r1, [r0, #28]
ARM GAS  /tmp/ccbSGc9b.s 			page 36


1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
 166              		.loc 1 1830 0
 167 0014 0B43     		orrs	r3, r3, r1
 168              		.loc 1 1831 0
 169 0016 016A     		ldr	r1, [r0, #32]
 170 0018 0B43     		orrs	r3, r3, r1
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
 171              		.loc 1 1832 0
 172 001a 416A     		ldr	r1, [r0, #36]
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
 173              		.loc 1 1831 0
 174 001c 0B43     		orrs	r3, r3, r1
 175              		.loc 1 1832 0
 176 001e C16A     		ldr	r1, [r0, #44]
 177 0020 0B43     		orrs	r3, r3, r1
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.DestBurst                                   | \
 178              		.loc 1 1833 0
 179 0022 016B     		ldr	r1, [r0, #48]
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
 180              		.loc 1 1832 0
 181 0024 0B43     		orrs	r3, r3, r1
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 182              		.loc 1 1834 0
 183 0026 816A     		ldr	r1, [r0, #40]
 184 0028 0139     		subs	r1, r1, #1
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.DestBurst                                   | \
 185              		.loc 1 1833 0
 186 002a 43EA8143 		orr	r3, r3, r1, lsl #18
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.TransferTriggerMode;
 187              		.loc 1 1835 0
 188 002e 8168     		ldr	r1, [r0, #8]
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 189              		.loc 1 1834 0
 190 0030 0B43     		orrs	r3, r3, r1
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
 191              		.loc 1 1830 0
 192 0032 1361     		str	r3, [r2, #16]
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* If SW request set the CTCR register to SW Request Mode */
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma->Init.Request == MDMA_REQUEST_SW)
 193              		.loc 1 1838 0
 194 0034 4368     		ldr	r3, [r0, #4]
 195 0036 B3F1804F 		cmp	r3, #1073741824
 196 003a 1BD0     		beq	.L18
 197              	.L11:
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* 
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     -If the request is done by SW : BWM could be set to 1 or 0.
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     -If the request is done by a peripheral :
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     If mask address not set (0) => BWM must be set to 0
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     If mask address set (different than 0) => BWM could be set to 1 or 0
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     */   
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   } 
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****    
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Reset CBNDTR Register */ 
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CBNDTR = 0;
ARM GAS  /tmp/ccbSGc9b.s 			page 37


 198              		.loc 1 1850 0
 199 003c 0368     		ldr	r3, [r0]
 200 003e 0022     		movs	r2, #0
 201 0040 5A61     		str	r2, [r3, #20]
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* if block source address offset is negative set the Block Repeat Source address Update Mode to 
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma->Init.SourceBlockAddressOffset < 0)
 202              		.loc 1 1853 0
 203 0042 436B     		ldr	r3, [r0, #52]
 204 0044 9342     		cmp	r3, r2
 205 0046 1BDB     		blt	.L19
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Write new CBRUR Register value : source repeat block offset */
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Write new CBRUR Register value : source repeat block offset */     
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);    
 206              		.loc 1 1863 0
 207 0048 0268     		ldr	r2, [r0]
 208 004a 9BB2     		uxth	r3, r3
 209 004c 1362     		str	r3, [r2, #32]
 210              	.L13:
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* If block destination address offset is negative set the Block Repeat destination address Updat
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma->Init.DestBlockAddressOffset < 0)
 211              		.loc 1 1867 0
 212 004e 826B     		ldr	r2, [r0, #56]
 213 0050 002A     		cmp	r2, #0
 214 0052 20DB     		blt	.L20
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Write new CBRUR Register value : destination repeat block offset */
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);    
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : destination repeat block offset */     
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MD
 215              		.loc 1 1877 0
 216 0054 0168     		ldr	r1, [r0]
 217 0056 0B6A     		ldr	r3, [r1, #32]
 218 0058 43EA0243 		orr	r3, r3, r2, lsl #16
 219 005c 0B62     		str	r3, [r1, #32]
 220              	.L15:
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }   
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma->Init.Request != MDMA_REQUEST_SW)
 221              		.loc 1 1881 0
 222 005e 4368     		ldr	r3, [r0, #4]
 223 0060 B3F1804F 		cmp	r3, #1073741824
ARM GAS  /tmp/ccbSGc9b.s 			page 38


 224 0064 24D0     		beq	.L16
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Set the HW request in CTRB register  */
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;      
 225              		.loc 1 1884 0
 226 0066 0268     		ldr	r2, [r0]
 227 0068 DBB2     		uxtb	r3, r3
 228 006a 9362     		str	r3, [r2, #40]
 229              	.L17:
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else /* SW request : reset the CTBR register */
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR = 0;
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Write Link Address Register */
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CLAR =  0;
 230              		.loc 1 1892 0
 231 006c 0368     		ldr	r3, [r0]
 232 006e 0022     		movs	r2, #0
 233 0070 5A62     		str	r2, [r3, #36]
 234 0072 7047     		bx	lr
 235              	.L18:
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   } 
 236              		.loc 1 1846 0
 237 0074 0268     		ldr	r2, [r0]
 238 0076 1369     		ldr	r3, [r2, #16]
 239 0078 43F04043 		orr	r3, r3, #-1073741824
 240 007c 1361     		str	r3, [r2, #16]
 241 007e DDE7     		b	.L11
 242              	.L19:
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Write new CBRUR Register value : source repeat block offset */
 243              		.loc 1 1855 0
 244 0080 0268     		ldr	r2, [r0]
 245 0082 5369     		ldr	r3, [r2, #20]
 246 0084 43F48023 		orr	r3, r3, #262144
 247 0088 5361     		str	r3, [r2, #20]
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
 248              		.loc 1 1857 0
 249 008a 436B     		ldr	r3, [r0, #52]
 250 008c 5B42     		negs	r3, r3
 251              	.LVL14:
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 252              		.loc 1 1858 0
 253 008e 0268     		ldr	r2, [r0]
 254 0090 9BB2     		uxth	r3, r3
 255              	.LVL15:
 256 0092 1362     		str	r3, [r2, #32]
 257              	.LVL16:
 258 0094 DBE7     		b	.L13
 259              	.L20:
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Write new CBRUR Register value : destination repeat block offset */
 260              		.loc 1 1869 0
 261 0096 0268     		ldr	r2, [r0]
 262 0098 5369     		ldr	r3, [r2, #20]
 263 009a 43F40023 		orr	r3, r3, #524288
 264 009e 5361     		str	r3, [r2, #20]
ARM GAS  /tmp/ccbSGc9b.s 			page 39


1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);    
 265              		.loc 1 1871 0
 266 00a0 836B     		ldr	r3, [r0, #56]
 267 00a2 5A42     		negs	r2, r3
 268              	.LVL17:
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 269              		.loc 1 1872 0
 270 00a4 0168     		ldr	r1, [r0]
 271 00a6 0B6A     		ldr	r3, [r1, #32]
 272 00a8 43EA0243 		orr	r3, r3, r2, lsl #16
 273 00ac 0B62     		str	r3, [r1, #32]
 274 00ae D6E7     		b	.L15
 275              	.LVL18:
 276              	.L16:
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 277              		.loc 1 1888 0
 278 00b0 0368     		ldr	r3, [r0]
 279 00b2 0022     		movs	r2, #0
 280 00b4 9A62     		str	r2, [r3, #40]
 281 00b6 D9E7     		b	.L17
 282              		.cfi_endproc
 283              	.LFE161:
 285              		.section	.text.HAL_MDMA_Init,"ax",%progbits
 286              		.align	1
 287              		.global	HAL_MDMA_Init
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu fpv5-d16
 293              	HAL_MDMA_Init:
 294              	.LFB141:
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t tickstart = HAL_GetTick();
 295              		.loc 1 220 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              	.LVL19:
 300 0000 38B5     		push	{r3, r4, r5, lr}
 301              	.LCFI3:
 302              		.cfi_def_cfa_offset 16
 303              		.cfi_offset 3, -16
 304              		.cfi_offset 4, -12
 305              		.cfi_offset 5, -8
 306              		.cfi_offset 14, -4
 307 0002 0446     		mov	r4, r0
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 308              		.loc 1 221 0
 309 0004 FFF7FEFF 		bl	HAL_GetTick
 310              	.LVL20:
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 311              		.loc 1 224 0
 312 0008 44B3     		cbz	r4, .L25
 313 000a 0546     		mov	r5, r0
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 314              		.loc 1 248 0
 315 000c 0023     		movs	r3, #0
 316 000e 84F83C30 		strb	r3, [r4, #60]
ARM GAS  /tmp/ccbSGc9b.s 			page 40


 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 317              		.loc 1 251 0
 318 0012 0223     		movs	r3, #2
 319 0014 84F83D30 		strb	r3, [r4, #61]
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 320              		.loc 1 254 0
 321 0018 2268     		ldr	r2, [r4]
 322 001a D368     		ldr	r3, [r2, #12]
 323 001c 23F00103 		bic	r3, r3, #1
 324 0020 D360     		str	r3, [r2, #12]
 325              	.LVL21:
 326              	.L23:
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 327              		.loc 1 257 0
 328 0022 2368     		ldr	r3, [r4]
 329 0024 DB68     		ldr	r3, [r3, #12]
 330 0026 13F0010F 		tst	r3, #1
 331 002a 0BD0     		beq	.L27
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 332              		.loc 1 260 0
 333 002c FFF7FEFF 		bl	HAL_GetTick
 334              	.LVL22:
 335 0030 401B     		subs	r0, r0, r5
 336 0032 0528     		cmp	r0, #5
 337 0034 F5D9     		bls	.L23
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 338              		.loc 1 263 0
 339 0036 4023     		movs	r3, #64
 340 0038 A366     		str	r3, [r4, #104]
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 341              		.loc 1 266 0
 342 003a 0323     		movs	r3, #3
 343 003c 84F83D30 		strb	r3, [r4, #61]
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 344              		.loc 1 268 0
 345 0040 0120     		movs	r0, #1
 346 0042 38BD     		pop	{r3, r4, r5, pc}
 347              	.LVL23:
 348              	.L27:
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 349              		.loc 1 273 0
 350 0044 2046     		mov	r0, r4
 351 0046 FFF7FEFF 		bl	MDMA_Init
 352              	.LVL24:
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LastLinkedListNodeAddress   = 0; 
 353              		.loc 1 276 0
 354 004a 0020     		movs	r0, #0
 355 004c E065     		str	r0, [r4, #92]
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LinkedListNodeCounter  = 0;  
 356              		.loc 1 277 0
 357 004e 2066     		str	r0, [r4, #96]
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 358              		.loc 1 278 0
 359 0050 6066     		str	r0, [r4, #100]
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 360              		.loc 1 281 0
 361 0052 A066     		str	r0, [r4, #104]
ARM GAS  /tmp/ccbSGc9b.s 			page 41


 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 362              		.loc 1 284 0
 363 0054 0123     		movs	r3, #1
 364 0056 84F83D30 		strb	r3, [r4, #61]
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 365              		.loc 1 286 0
 366 005a 38BD     		pop	{r3, r4, r5, pc}
 367              	.LVL25:
 368              	.L25:
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 369              		.loc 1 226 0
 370 005c 0120     		movs	r0, #1
 371              	.LVL26:
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 372              		.loc 1 287 0
 373 005e 38BD     		pop	{r3, r4, r5, pc}
 374              		.cfi_endproc
 375              	.LFE141:
 377              		.section	.text.HAL_MDMA_DeInit,"ax",%progbits
 378              		.align	1
 379              		.global	HAL_MDMA_DeInit
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv5-d16
 385              	HAL_MDMA_DeInit:
 386              	.LFB142:
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 387              		.loc 1 296 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 392              	.LVL27:
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 393              		.loc 1 299 0
 394 0000 0346     		mov	r3, r0
 395 0002 0028     		cmp	r0, #0
 396 0004 2FD0     		beq	.L31
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 397              		.loc 1 305 0
 398 0006 90F83D20 		ldrb	r2, [r0, #61]	@ zero_extendqisi2
 399 000a D2B2     		uxtb	r2, r2
 400 000c 022A     		cmp	r2, #2
 401 000e 25D0     		beq	.L32
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 402              		.loc 1 312 0
 403 0010 0168     		ldr	r1, [r0]
 404 0012 CA68     		ldr	r2, [r1, #12]
 405 0014 22F00102 		bic	r2, r2, #1
 406 0018 CA60     		str	r2, [r1, #12]
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CTCR = 0;
 407              		.loc 1 315 0
 408 001a 0268     		ldr	r2, [r0]
 409 001c 0020     		movs	r0, #0
 410              	.LVL28:
 411 001e D060     		str	r0, [r2, #12]
ARM GAS  /tmp/ccbSGc9b.s 			page 42


 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CBNDTR = 0;
 412              		.loc 1 316 0
 413 0020 1A68     		ldr	r2, [r3]
 414 0022 1061     		str	r0, [r2, #16]
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CSAR = 0;
 415              		.loc 1 317 0
 416 0024 1A68     		ldr	r2, [r3]
 417 0026 5061     		str	r0, [r2, #20]
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CDAR = 0;  
 418              		.loc 1 318 0
 419 0028 1A68     		ldr	r2, [r3]
 420 002a 9061     		str	r0, [r2, #24]
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CBRUR = 0;
 421              		.loc 1 319 0
 422 002c 1A68     		ldr	r2, [r3]
 423 002e D061     		str	r0, [r2, #28]
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CLAR = 0;
 424              		.loc 1 320 0
 425 0030 1A68     		ldr	r2, [r3]
 426 0032 1062     		str	r0, [r2, #32]
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CTBR = 0;
 427              		.loc 1 321 0
 428 0034 1A68     		ldr	r2, [r3]
 429 0036 5062     		str	r0, [r2, #36]
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CMAR = 0;
 430              		.loc 1 322 0
 431 0038 1A68     		ldr	r2, [r3]
 432 003a 9062     		str	r0, [r2, #40]
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CMDR = 0;
 433              		.loc 1 323 0
 434 003c 1A68     		ldr	r2, [r3]
 435 003e 1063     		str	r0, [r2, #48]
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 436              		.loc 1 324 0
 437 0040 1A68     		ldr	r2, [r3]
 438 0042 5063     		str	r0, [r2, #52]
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 439              		.loc 1 327 0
 440 0044 1A68     		ldr	r2, [r3]
 441 0046 1F21     		movs	r1, #31
 442 0048 5160     		str	r1, [r2, #4]
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LastLinkedListNodeAddress   = 0; 
 443              		.loc 1 330 0
 444 004a D865     		str	r0, [r3, #92]
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LinkedListNodeCounter  = 0; 
 445              		.loc 1 331 0
 446 004c 1866     		str	r0, [r3, #96]
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 447              		.loc 1 332 0
 448 004e 5866     		str	r0, [r3, #100]
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 449              		.loc 1 335 0
 450 0050 9866     		str	r0, [r3, #104]
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 451              		.loc 1 338 0
 452 0052 83F83D00 		strb	r0, [r3, #61]
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
ARM GAS  /tmp/ccbSGc9b.s 			page 43


 453              		.loc 1 341 0
 454 0056 83F83C00 		strb	r0, [r3, #60]
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 455              		.loc 1 343 0
 456 005a 7047     		bx	lr
 457              	.LVL29:
 458              	.L32:
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 459              		.loc 1 307 0
 460 005c 4FF48072 		mov	r2, #256
 461 0060 8266     		str	r2, [r0, #104]
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 462              		.loc 1 308 0
 463 0062 0120     		movs	r0, #1
 464              	.LVL30:
 465 0064 7047     		bx	lr
 466              	.LVL31:
 467              	.L31:
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 468              		.loc 1 301 0
 469 0066 0120     		movs	r0, #1
 470              	.LVL32:
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 471              		.loc 1 344 0
 472 0068 7047     		bx	lr
 473              		.cfi_endproc
 474              	.LFE142:
 476              		.section	.text.HAL_MDMA_ConfigPostRequestMask,"ax",%progbits
 477              		.align	1
 478              		.global	HAL_MDMA_ConfigPostRequestMask
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 482              		.fpu fpv5-d16
 484              	HAL_MDMA_ConfigPostRequestMask:
 485              	.LFB143:
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef  status = HAL_OK;
 486              		.loc 1 356 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              		@ link register save eliminated.
 491              	.LVL33:
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 492              		.loc 1 360 0
 493 0000 80B3     		cbz	r0, .L37
 494 0002 0346     		mov	r3, r0
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 495              		.loc 1 366 0
 496 0004 90F83C00 		ldrb	r0, [r0, #60]	@ zero_extendqisi2
 497              	.LVL34:
 498 0008 0128     		cmp	r0, #1
 499 000a 2DD0     		beq	.L38
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 500              		.loc 1 366 0 is_stmt 0 discriminator 2
 501 000c 0120     		movs	r0, #1
 502 000e 83F83C00 		strb	r0, [r3, #60]
ARM GAS  /tmp/ccbSGc9b.s 			page 44


 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 503              		.loc 1 368 0 is_stmt 1 discriminator 2
 504 0012 93F83D00 		ldrb	r0, [r3, #61]	@ zero_extendqisi2
 505 0016 C0B2     		uxtb	r0, r0
 506 0018 0128     		cmp	r0, #1
 507 001a 04D0     		beq	.L46
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 508              		.loc 1 401 0
 509 001c 0120     		movs	r0, #1
 510              	.LVL35:
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 511              		.loc 1 404 0
 512 001e 0022     		movs	r2, #0
 513              	.LVL36:
 514 0020 83F83C20 		strb	r2, [r3, #60]
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 515              		.loc 1 407 0
 516 0024 7047     		bx	lr
 517              	.LVL37:
 518              	.L46:
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef  status = HAL_OK;
 519              		.loc 1 356 0
 520 0026 10B4     		push	{r4}
 521              	.LCFI4:
 522              		.cfi_def_cfa_offset 4
 523              		.cfi_offset 4, -4
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 524              		.loc 1 371 0
 525 0028 1868     		ldr	r0, [r3]
 526 002a 0469     		ldr	r4, [r0, #16]
 527 002c 14F0804F 		tst	r4, #1073741824
 528 0030 11D1     		bne	.L40
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->Instance->CMDR = MaskData;
 529              		.loc 1 374 0
 530 0032 0163     		str	r1, [r0, #48]
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 531              		.loc 1 375 0
 532 0034 1868     		ldr	r0, [r3]
 533 0036 4263     		str	r2, [r0, #52]
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 534              		.loc 1 383 0
 535 0038 31B9     		cbnz	r1, .L36
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 536              		.loc 1 385 0
 537 003a 1968     		ldr	r1, [r3]
 538              	.LVL38:
 539 003c 0A69     		ldr	r2, [r1, #16]
 540              	.LVL39:
 541 003e 22F00042 		bic	r2, r2, #-2147483648
 542 0042 0A61     		str	r2, [r1, #16]
 543              	.LVL40:
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 544              		.loc 1 357 0
 545 0044 0020     		movs	r0, #0
 546 0046 07E0     		b	.L35
 547              	.LVL41:
 548              	.L36:
ARM GAS  /tmp/ccbSGc9b.s 			page 45


 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 549              		.loc 1 389 0
 550 0048 1968     		ldr	r1, [r3]
 551              	.LVL42:
 552 004a 0A69     		ldr	r2, [r1, #16]
 553              	.LVL43:
 554 004c 42F00042 		orr	r2, r2, #-2147483648
 555 0050 0A61     		str	r2, [r1, #16]
 556              	.LVL44:
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 557              		.loc 1 357 0
 558 0052 0020     		movs	r0, #0
 559 0054 00E0     		b	.L35
 560              	.LVL45:
 561              	.L40:
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 562              		.loc 1 395 0
 563 0056 0120     		movs	r0, #1
 564              	.LVL46:
 565              	.L35:
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 566              		.loc 1 404 0
 567 0058 0022     		movs	r2, #0
 568 005a 83F83C20 		strb	r2, [r3, #60]
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 569              		.loc 1 407 0
 570 005e 5DF8044B 		ldr	r4, [sp], #4
 571              	.LCFI5:
 572              		.cfi_restore 4
 573              		.cfi_def_cfa_offset 0
 574 0062 7047     		bx	lr
 575              	.LVL47:
 576              	.L37:
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 577              		.loc 1 362 0
 578 0064 0120     		movs	r0, #1
 579              	.LVL48:
 580 0066 7047     		bx	lr
 581              	.LVL49:
 582              	.L38:
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 583              		.loc 1 366 0
 584 0068 0220     		movs	r0, #2
 585 006a 7047     		bx	lr
 586              		.cfi_endproc
 587              	.LFE143:
 589              		.section	.text.HAL_MDMA_RegisterCallback,"ax",%progbits
 590              		.align	1
 591              		.global	HAL_MDMA_RegisterCallback
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
 595              		.fpu fpv5-d16
 597              	HAL_MDMA_RegisterCallback:
 598              	.LFB144:
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef status = HAL_OK;
 599              		.loc 1 418 0
ARM GAS  /tmp/ccbSGc9b.s 			page 46


 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603              		@ link register save eliminated.
 604              	.LVL50:
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 605              		.loc 1 422 0
 606 0000 0346     		mov	r3, r0
 607 0002 58B3     		cbz	r0, .L57
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 608              		.loc 1 428 0
 609 0004 90F83C00 		ldrb	r0, [r0, #60]	@ zero_extendqisi2
 610              	.LVL51:
 611 0008 0128     		cmp	r0, #1
 612 000a 29D0     		beq	.L58
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 613              		.loc 1 428 0 is_stmt 0 discriminator 2
 614 000c 0120     		movs	r0, #1
 615 000e 83F83C00 		strb	r0, [r3, #60]
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 616              		.loc 1 430 0 is_stmt 1 discriminator 2
 617 0012 93F83D00 		ldrb	r0, [r3, #61]	@ zero_extendqisi2
 618 0016 C0B2     		uxtb	r0, r0
 619 0018 0128     		cmp	r0, #1
 620 001a 04D0     		beq	.L61
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 621              		.loc 1 465 0
 622 001c 0120     		movs	r0, #1
 623              	.L49:
 624              	.LVL52:
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 625              		.loc 1 469 0
 626 001e 0022     		movs	r2, #0
 627              	.LVL53:
 628 0020 83F83C20 		strb	r2, [r3, #60]
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 629              		.loc 1 471 0
 630 0024 7047     		bx	lr
 631              	.LVL54:
 632              	.L61:
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 633              		.loc 1 432 0
 634 0026 0529     		cmp	r1, #5
 635 0028 16D8     		bhi	.L60
 636 002a DFE801F0 		tbb	[pc, r1]
 637              	.L51:
 638 002e 03       		.byte	(.L50-.L51)/2
 639 002f 06       		.byte	(.L52-.L51)/2
 640 0030 09       		.byte	(.L53-.L51)/2
 641 0031 0C       		.byte	(.L54-.L51)/2
 642 0032 0F       		.byte	(.L55-.L51)/2
 643 0033 12       		.byte	(.L56-.L51)/2
 644              		.p2align 1
 645              	.L50:
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 646              		.loc 1 435 0
 647 0034 5A64     		str	r2, [r3, #68]
ARM GAS  /tmp/ccbSGc9b.s 			page 47


 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 648              		.loc 1 419 0
 649 0036 0020     		movs	r0, #0
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 650              		.loc 1 436 0
 651 0038 F1E7     		b	.L49
 652              	.L52:
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 653              		.loc 1 439 0
 654 003a 9A64     		str	r2, [r3, #72]
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 655              		.loc 1 419 0
 656 003c 0020     		movs	r0, #0
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 657              		.loc 1 440 0
 658 003e EEE7     		b	.L49
 659              	.L53:
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 660              		.loc 1 443 0
 661 0040 DA64     		str	r2, [r3, #76]
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 662              		.loc 1 419 0
 663 0042 0020     		movs	r0, #0
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 664              		.loc 1 444 0
 665 0044 EBE7     		b	.L49
 666              	.L54:
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 667              		.loc 1 447 0
 668 0046 1A65     		str	r2, [r3, #80]
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 669              		.loc 1 419 0
 670 0048 0020     		movs	r0, #0
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 671              		.loc 1 448 0
 672 004a E8E7     		b	.L49
 673              	.L55:
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 674              		.loc 1 451 0
 675 004c 5A65     		str	r2, [r3, #84]
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 676              		.loc 1 419 0
 677 004e 0020     		movs	r0, #0
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 678              		.loc 1 452 0
 679 0050 E5E7     		b	.L49
 680              	.L56:
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 681              		.loc 1 455 0
 682 0052 9A65     		str	r2, [r3, #88]
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 683              		.loc 1 419 0
 684 0054 0020     		movs	r0, #0
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 685              		.loc 1 456 0
 686 0056 E2E7     		b	.L49
 687              	.L60:
ARM GAS  /tmp/ccbSGc9b.s 			page 48


 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 688              		.loc 1 419 0
 689 0058 0020     		movs	r0, #0
 690 005a E0E7     		b	.L49
 691              	.LVL55:
 692              	.L57:
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 693              		.loc 1 424 0
 694 005c 0120     		movs	r0, #1
 695              	.LVL56:
 696 005e 7047     		bx	lr
 697              	.L58:
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 698              		.loc 1 428 0
 699 0060 0220     		movs	r0, #2
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 700              		.loc 1 472 0
 701 0062 7047     		bx	lr
 702              		.cfi_endproc
 703              	.LFE144:
 705              		.section	.text.HAL_MDMA_UnRegisterCallback,"ax",%progbits
 706              		.align	1
 707              		.global	HAL_MDMA_UnRegisterCallback
 708              		.syntax unified
 709              		.thumb
 710              		.thumb_func
 711              		.fpu fpv5-d16
 713              	HAL_MDMA_UnRegisterCallback:
 714              	.LFB145:
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef status = HAL_OK;
 715              		.loc 1 483 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720              	.LVL57:
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 721              		.loc 1 487 0
 722 0000 0346     		mov	r3, r0
 723 0002 0028     		cmp	r0, #0
 724 0004 34D0     		beq	.L73
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 725              		.loc 1 493 0
 726 0006 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 727 000a 012A     		cmp	r2, #1
 728 000c 32D0     		beq	.L74
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 729              		.loc 1 493 0 is_stmt 0 discriminator 2
 730 000e 0122     		movs	r2, #1
 731 0010 80F83C20 		strb	r2, [r0, #60]
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 732              		.loc 1 495 0 is_stmt 1 discriminator 2
 733 0014 90F83D20 		ldrb	r2, [r0, #61]	@ zero_extendqisi2
 734 0018 D2B2     		uxtb	r2, r2
 735 001a 012A     		cmp	r2, #1
 736 001c 04D0     		beq	.L77
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
ARM GAS  /tmp/ccbSGc9b.s 			page 49


 737              		.loc 1 539 0
 738 001e 0120     		movs	r0, #1
 739              	.LVL58:
 740              	.L64:
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 741              		.loc 1 543 0
 742 0020 0022     		movs	r2, #0
 743 0022 83F83C20 		strb	r2, [r3, #60]
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 744              		.loc 1 545 0
 745 0026 7047     		bx	lr
 746              	.LVL59:
 747              	.L77:
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 748              		.loc 1 497 0
 749 0028 0629     		cmp	r1, #6
 750 002a 1FD8     		bhi	.L76
 751 002c DFE801F0 		tbb	[pc, r1]
 752              	.L66:
 753 0030 04       		.byte	(.L65-.L66)/2
 754 0031 07       		.byte	(.L67-.L66)/2
 755 0032 0A       		.byte	(.L68-.L66)/2
 756 0033 0D       		.byte	(.L69-.L66)/2
 757 0034 10       		.byte	(.L70-.L66)/2
 758 0035 13       		.byte	(.L71-.L66)/2
 759 0036 16       		.byte	(.L72-.L66)/2
 760 0037 00       		.p2align 1
 761              	.L65:
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 762              		.loc 1 500 0
 763 0038 0020     		movs	r0, #0
 764              	.LVL60:
 765 003a 5864     		str	r0, [r3, #68]
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 766              		.loc 1 501 0
 767 003c F0E7     		b	.L64
 768              	.LVL61:
 769              	.L67:
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 770              		.loc 1 504 0
 771 003e 0020     		movs	r0, #0
 772              	.LVL62:
 773 0040 9864     		str	r0, [r3, #72]
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 774              		.loc 1 505 0
 775 0042 EDE7     		b	.L64
 776              	.LVL63:
 777              	.L68:
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 778              		.loc 1 508 0
 779 0044 0020     		movs	r0, #0
 780              	.LVL64:
 781 0046 D864     		str	r0, [r3, #76]
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 782              		.loc 1 509 0
 783 0048 EAE7     		b	.L64
 784              	.LVL65:
ARM GAS  /tmp/ccbSGc9b.s 			page 50


 785              	.L69:
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 786              		.loc 1 512 0
 787 004a 0020     		movs	r0, #0
 788              	.LVL66:
 789 004c 1865     		str	r0, [r3, #80]
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 790              		.loc 1 513 0
 791 004e E7E7     		b	.L64
 792              	.LVL67:
 793              	.L70:
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 794              		.loc 1 516 0
 795 0050 0020     		movs	r0, #0
 796              	.LVL68:
 797 0052 5865     		str	r0, [r3, #84]
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 798              		.loc 1 517 0
 799 0054 E4E7     		b	.L64
 800              	.LVL69:
 801              	.L71:
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break; 
 802              		.loc 1 520 0
 803 0056 0020     		movs	r0, #0
 804              	.LVL70:
 805 0058 9865     		str	r0, [r3, #88]
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 806              		.loc 1 521 0
 807 005a E1E7     		b	.L64
 808              	.LVL71:
 809              	.L72:
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBufferCpltCallback = NULL;
 810              		.loc 1 524 0
 811 005c 0020     		movs	r0, #0
 812              	.LVL72:
 813 005e 5864     		str	r0, [r3, #68]
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBlockCpltCallback = NULL;
 814              		.loc 1 525 0
 815 0060 9864     		str	r0, [r3, #72]
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferRepeatBlockCpltCallback = NULL;
 816              		.loc 1 526 0
 817 0062 D864     		str	r0, [r3, #76]
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferErrorCallback = NULL;
 818              		.loc 1 527 0
 819 0064 1865     		str	r0, [r3, #80]
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferAbortCallback = NULL;
 820              		.loc 1 528 0
 821 0066 5865     		str	r0, [r3, #84]
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break; 
 822              		.loc 1 529 0
 823 0068 9865     		str	r0, [r3, #88]
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 824              		.loc 1 530 0
 825 006a D9E7     		b	.L64
 826              	.LVL73:
 827              	.L76:
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
ARM GAS  /tmp/ccbSGc9b.s 			page 51


 828              		.loc 1 533 0
 829 006c 0120     		movs	r0, #1
 830              	.LVL74:
 831 006e D7E7     		b	.L64
 832              	.LVL75:
 833              	.L73:
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 834              		.loc 1 489 0
 835 0070 0120     		movs	r0, #1
 836              	.LVL76:
 837 0072 7047     		bx	lr
 838              	.LVL77:
 839              	.L74:
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 840              		.loc 1 493 0
 841 0074 0220     		movs	r0, #2
 842              	.LVL78:
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 843              		.loc 1 546 0
 844 0076 7047     		bx	lr
 845              		.cfi_endproc
 846              	.LFE145:
 848              		.section	.text.HAL_MDMA_LinkedList_CreateNode,"ax",%progbits
 849              		.align	1
 850              		.global	HAL_MDMA_LinkedList_CreateNode
 851              		.syntax unified
 852              		.thumb
 853              		.thumb_func
 854              		.fpu fpv5-d16
 856              	HAL_MDMA_LinkedList_CreateNode:
 857              	.LFB146:
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t addressMask;
 858              		.loc 1 577 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 0, uses_anonymous_args = 0
 862              		@ link register save eliminated.
 863              	.LVL79:
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 864              		.loc 1 582 0
 865 0000 0246     		mov	r2, r0
 866 0002 0B46     		mov	r3, r1
 867 0004 0029     		cmp	r1, #0
 868 0006 18BF     		it	ne
 869 0008 0028     		cmpne	r0, #0
 870 000a 7CD0     		beq	.L89
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 871              		.loc 1 608 0
 872 000c 0021     		movs	r1, #0
 873              	.LVL80:
 874 000e 4161     		str	r1, [r0, #20]
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CMAR   = 0;  
 875              		.loc 1 611 0
 876 0010 8161     		str	r1, [r0, #24]
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CMDR   = 0;
 877              		.loc 1 612 0
 878 0012 0162     		str	r1, [r0, #32]
ARM GAS  /tmp/ccbSGc9b.s 			page 52


 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->Reserved = 0;
 879              		.loc 1 613 0
 880 0014 4162     		str	r1, [r0, #36]
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 881              		.loc 1 614 0
 882 0016 C161     		str	r1, [r0, #28]
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNodeConfig->Init.SourceDataSize | pNodeConfig->Init.DestDataSize           | \
 883              		.loc 1 617 0
 884 0018 1969     		ldr	r1, [r3, #16]
 885 001a 5869     		ldr	r0, [r3, #20]
 886              	.LVL81:
 887 001c 0143     		orrs	r1, r1, r0
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       pNodeConfig->Init.DataAlignment| pNodeConfig->Init.SourceBurst            | \
 888              		.loc 1 618 0
 889 001e 9869     		ldr	r0, [r3, #24]
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNodeConfig->Init.SourceDataSize | pNodeConfig->Init.DestDataSize           | \
 890              		.loc 1 617 0
 891 0020 0143     		orrs	r1, r1, r0
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       pNodeConfig->Init.DataAlignment| pNodeConfig->Init.SourceBurst            | \
 892              		.loc 1 618 0
 893 0022 D869     		ldr	r0, [r3, #28]
 894 0024 0143     		orrs	r1, r1, r0
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         pNodeConfig->Init.DestBurst                                             | \
 895              		.loc 1 619 0
 896 0026 186A     		ldr	r0, [r3, #32]
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       pNodeConfig->Init.DataAlignment| pNodeConfig->Init.SourceBurst            | \
 897              		.loc 1 618 0
 898 0028 0143     		orrs	r1, r1, r0
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         pNodeConfig->Init.DestBurst                                             | \
 899              		.loc 1 619 0
 900 002a 986A     		ldr	r0, [r3, #40]
 901 002c 0143     		orrs	r1, r1, r0
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           ((pNodeConfig->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 902              		.loc 1 620 0
 903 002e D86A     		ldr	r0, [r3, #44]
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         pNodeConfig->Init.DestBurst                                             | \
 904              		.loc 1 619 0
 905 0030 0143     		orrs	r1, r1, r0
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             pNodeConfig->Init.TransferTriggerMode;
 906              		.loc 1 621 0
 907 0032 586A     		ldr	r0, [r3, #36]
 908 0034 0138     		subs	r0, r0, #1
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           ((pNodeConfig->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 909              		.loc 1 620 0
 910 0036 41EA8041 		orr	r1, r1, r0, lsl #18
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 911              		.loc 1 622 0
 912 003a 5868     		ldr	r0, [r3, #4]
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             pNodeConfig->Init.TransferTriggerMode;
 913              		.loc 1 621 0
 914 003c 0143     		orrs	r1, r1, r0
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNodeConfig->Init.SourceDataSize | pNodeConfig->Init.DestDataSize           | \
 915              		.loc 1 617 0
 916 003e 1160     		str	r1, [r2]
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 917              		.loc 1 625 0
 918 0040 1968     		ldr	r1, [r3]
ARM GAS  /tmp/ccbSGc9b.s 			page 53


 919 0042 B1F1804F 		cmp	r1, #1073741824
 920 0046 45D0     		beq	.L91
 921              	.L80:
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 922              		.loc 1 636 0
 923 0048 1968     		ldr	r1, [r3]
 924 004a B1F1804F 		cmp	r1, #1073741824
 925 004e 01D0     		beq	.L81
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 926              		.loc 1 636 0 is_stmt 0 discriminator 1
 927 0050 996C     		ldr	r1, [r3, #72]
 928 0052 19B1     		cbz	r1, .L82
 929              	.L81:
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 930              		.loc 1 638 0 is_stmt 1
 931 0054 1168     		ldr	r1, [r2]
 932 0056 41F00041 		orr	r1, r1, #-2147483648
 933 005a 1160     		str	r1, [r2]
 934              	.L82:
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 935              		.loc 1 642 0
 936 005c 596C     		ldr	r1, [r3, #68]
 937 005e 0139     		subs	r1, r1, #1
 938 0060 0905     		lsls	r1, r1, #20
 939 0062 5160     		str	r1, [r2, #4]
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 940              		.loc 1 645 0
 941 0064 196B     		ldr	r1, [r3, #48]
 942 0066 0029     		cmp	r1, #0
 943 0068 39DB     		blt	.L92
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }    
 944              		.loc 1 655 0
 945 006a 89B2     		uxth	r1, r1
 946 006c 1161     		str	r1, [r2, #16]
 947              	.L84:
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 948              		.loc 1 659 0
 949 006e 586B     		ldr	r0, [r3, #52]
 950 0070 0028     		cmp	r0, #0
 951 0072 3DDB     		blt	.L93
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }    
 952              		.loc 1 669 0
 953 0074 1169     		ldr	r1, [r2, #16]
 954 0076 41EA0041 		orr	r1, r1, r0, lsl #16
 955 007a 1161     		str	r1, [r2, #16]
 956              	.L86:
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 957              		.loc 1 673 0
 958 007c 5168     		ldr	r1, [r2, #4]
 959 007e 186C     		ldr	r0, [r3, #64]
 960 0080 0143     		orrs	r1, r1, r0
 961 0082 5160     		str	r1, [r2, #4]
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 962              		.loc 1 676 0
 963 0084 D96B     		ldr	r1, [r3, #60]
 964 0086 D160     		str	r1, [r2, #12]
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
ARM GAS  /tmp/ccbSGc9b.s 			page 54


 965              		.loc 1 679 0
 966 0088 996B     		ldr	r1, [r3, #56]
 967 008a 9160     		str	r1, [r2, #8]
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 968              		.loc 1 682 0
 969 008c 1968     		ldr	r1, [r3]
 970 008e B1F1804F 		cmp	r1, #1073741824
 971 0092 05D0     		beq	.L87
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Set the HW request clear Mask and Data */
 972              		.loc 1 685 0
 973 0094 C9B2     		uxtb	r1, r1
 974 0096 9161     		str	r1, [r2, #24]
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CMDR = pNodeConfig->PostRequestMaskData;      
 975              		.loc 1 687 0
 976 0098 996C     		ldr	r1, [r3, #72]
 977 009a 1162     		str	r1, [r2, #32]
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 978              		.loc 1 688 0
 979 009c D96C     		ldr	r1, [r3, #76]
 980 009e 5162     		str	r1, [r2, #36]
 981              	.L87:
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
 982              		.loc 1 691 0
 983 00a0 996B     		ldr	r1, [r3, #56]
 984 00a2 01F07F41 		and	r1, r1, #-16777216
 985              	.LVL82:
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 986              		.loc 1 692 0
 987 00a6 0029     		cmp	r1, #0
 988 00a8 18BF     		it	ne
 989 00aa B1F1005F 		cmpne	r1, #536870912
 990 00ae 03D1     		bne	.L88
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 991              		.loc 1 695 0
 992 00b0 9169     		ldr	r1, [r2, #24]
 993              	.LVL83:
 994 00b2 41F48031 		orr	r1, r1, #65536
 995 00b6 9161     		str	r1, [r2, #24]
 996              	.LVL84:
 997              	.L88:
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
 998              		.loc 1 698 0
 999 00b8 DB6B     		ldr	r3, [r3, #60]
 1000              	.LVL85:
 1001 00ba 03F07F43 		and	r3, r3, #-16777216
 1002              	.LVL86:
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1003              		.loc 1 699 0
 1004 00be 002B     		cmp	r3, #0
 1005 00c0 18BF     		it	ne
 1006 00c2 B3F1005F 		cmpne	r3, #536870912
 1007 00c6 20D1     		bne	.L90
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1008              		.loc 1 702 0
 1009 00c8 9369     		ldr	r3, [r2, #24]
 1010              	.LVL87:
 1011 00ca 43F40033 		orr	r3, r3, #131072
ARM GAS  /tmp/ccbSGc9b.s 			page 55


 1012 00ce 9361     		str	r3, [r2, #24]
 1013              	.LVL88:
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1014              		.loc 1 705 0
 1015 00d0 0020     		movs	r0, #0
 1016 00d2 7047     		bx	lr
 1017              	.LVL89:
 1018              	.L91:
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1019              		.loc 1 627 0
 1020 00d4 1168     		ldr	r1, [r2]
 1021 00d6 41F08041 		orr	r1, r1, #1073741824
 1022 00da 1160     		str	r1, [r2]
 1023 00dc B4E7     		b	.L80
 1024              	.L92:
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : source repeat block offset */
 1025              		.loc 1 647 0
 1026 00de 5168     		ldr	r1, [r2, #4]
 1027 00e0 41F48021 		orr	r1, r1, #262144
 1028 00e4 5160     		str	r1, [r2, #4]
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBRUR = blockoffset & 0x0000FFFFU;
 1029              		.loc 1 649 0
 1030 00e6 196B     		ldr	r1, [r3, #48]
 1031 00e8 4942     		negs	r1, r1
 1032              	.LVL90:
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1033              		.loc 1 650 0
 1034 00ea 89B2     		uxth	r1, r1
 1035              	.LVL91:
 1036 00ec 1161     		str	r1, [r2, #16]
 1037              	.LVL92:
 1038 00ee BEE7     		b	.L84
 1039              	.L93:
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : destination repeat block offset */
 1040              		.loc 1 661 0
 1041 00f0 5168     		ldr	r1, [r2, #4]
 1042 00f2 41F40021 		orr	r1, r1, #524288
 1043 00f6 5160     		str	r1, [r2, #4]
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 1044              		.loc 1 663 0
 1045 00f8 596B     		ldr	r1, [r3, #52]
 1046 00fa 4842     		negs	r0, r1
 1047              	.LVL93:
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1048              		.loc 1 664 0
 1049 00fc 1169     		ldr	r1, [r2, #16]
 1050 00fe 41EA0041 		orr	r1, r1, r0, lsl #16
 1051 0102 1161     		str	r1, [r2, #16]
 1052 0104 BAE7     		b	.L86
 1053              	.LVL94:
 1054              	.L89:
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 1055              		.loc 1 584 0
 1056 0106 0120     		movs	r0, #1
 1057              	.LVL95:
 1058 0108 7047     		bx	lr
 1059              	.LVL96:
ARM GAS  /tmp/ccbSGc9b.s 			page 56


 1060              	.L90:
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1061              		.loc 1 705 0
 1062 010a 0020     		movs	r0, #0
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1063              		.loc 1 706 0
 1064 010c 7047     		bx	lr
 1065              		.cfi_endproc
 1066              	.LFE146:
 1068              		.section	.text.HAL_MDMA_LinkedList_AddNode,"ax",%progbits
 1069              		.align	1
 1070              		.global	HAL_MDMA_LinkedList_AddNode
 1071              		.syntax unified
 1072              		.thumb
 1073              		.thumb_func
 1074              		.fpu fpv5-d16
 1076              	HAL_MDMA_LinkedList_AddNode:
 1077              	.LFB147:
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MDMA_LinkNodeTypeDef *pNode;
 1078              		.loc 1 720 0
 1079              		.cfi_startproc
 1080              		@ args = 0, pretend = 0, frame = 0
 1081              		@ frame_needed = 0, uses_anonymous_args = 0
 1082              		@ link register save eliminated.
 1083              	.LVL97:
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1084              		.loc 1 726 0
 1085 0000 0029     		cmp	r1, #0
 1086 0002 18BF     		it	ne
 1087 0004 0028     		cmpne	r0, #0
 1088 0006 64D0     		beq	.L109
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MDMA_LinkNodeTypeDef *pNode;
 1089              		.loc 1 720 0
 1090 0008 F0B4     		push	{r4, r5, r6, r7}
 1091              	.LCFI6:
 1092              		.cfi_def_cfa_offset 16
 1093              		.cfi_offset 4, -16
 1094              		.cfi_offset 5, -12
 1095              		.cfi_offset 6, -8
 1096              		.cfi_offset 7, -4
 1097 000a 0346     		mov	r3, r0
 1098 000c 0C46     		mov	r4, r1
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1099              		.loc 1 732 0
 1100 000e 90F83C10 		ldrb	r1, [r0, #60]	@ zero_extendqisi2
 1101              	.LVL98:
 1102 0012 0129     		cmp	r1, #1
 1103 0014 5FD0     		beq	.L110
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1104              		.loc 1 732 0 is_stmt 0 discriminator 2
 1105 0016 0121     		movs	r1, #1
 1106 0018 80F83C10 		strb	r1, [r0, #60]
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1107              		.loc 1 734 0 is_stmt 1 discriminator 2
 1108 001c 90F83D10 		ldrb	r1, [r0, #61]	@ zero_extendqisi2
 1109 0020 C9B2     		uxtb	r1, r1
 1110 0022 0129     		cmp	r1, #1
ARM GAS  /tmp/ccbSGc9b.s 			page 57


 1111 0024 05D0     		beq	.L120
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1112              		.loc 1 836 0
 1113 0026 0022     		movs	r2, #0
 1114              	.LVL99:
 1115 0028 80F83C20 		strb	r2, [r0, #60]
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   } 
 1116              		.loc 1 839 0
 1117 002c 0220     		movs	r0, #2
 1118              	.LVL100:
 1119              	.L95:
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1120              		.loc 1 841 0
 1121 002e F0BC     		pop	{r4, r5, r6, r7}
 1122              	.LCFI7:
 1123              		.cfi_remember_state
 1124              		.cfi_restore 7
 1125              		.cfi_restore 6
 1126              		.cfi_restore 5
 1127              		.cfi_restore 4
 1128              		.cfi_def_cfa_offset 0
 1129              	.LVL101:
 1130 0030 7047     		bx	lr
 1131              	.LVL102:
 1132              	.L120:
 1133              	.LCFI8:
 1134              		.cfi_restore_state
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1135              		.loc 1 737 0
 1136 0032 0221     		movs	r1, #2
 1137 0034 80F83D10 		strb	r1, [r0, #61]
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1138              		.loc 1 740 0
 1139 0038 C76D     		ldr	r7, [r0, #92]
 1140 003a 8FB9     		cbnz	r7, .L97
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1141              		.loc 1 742 0
 1142 003c 3AB1     		cbz	r2, .L121
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 1143              		.loc 1 761 0
 1144 003e 0120     		movs	r0, #1
 1145              	.LVL103:
 1146              	.L98:
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1147              		.loc 1 827 0
 1148 0040 0022     		movs	r2, #0
 1149 0042 83F83C20 		strb	r2, [r3, #60]
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1150              		.loc 1 829 0
 1151 0046 0122     		movs	r2, #1
 1152 0048 83F83D20 		strb	r2, [r3, #61]
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1153              		.loc 1 831 0
 1154 004c EFE7     		b	.L95
 1155              	.LVL104:
 1156              	.L121:
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Set the MDMA handle First linked List node*/
ARM GAS  /tmp/ccbSGc9b.s 			page 58


 1157              		.loc 1 747 0
 1158 004e 0268     		ldr	r2, [r0]
 1159              	.LVL105:
 1160 0050 5462     		str	r4, [r2, #36]
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 1161              		.loc 1 749 0
 1162 0052 C465     		str	r4, [r0, #92]
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 1163              		.loc 1 752 0
 1164 0054 0020     		movs	r0, #0
 1165              	.LVL106:
 1166 0056 6061     		str	r0, [r4, #20]
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 1167              		.loc 1 755 0
 1168 0058 1C66     		str	r4, [r3, #96]
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 1169              		.loc 1 757 0
 1170 005a 0122     		movs	r2, #1
 1171 005c 5A66     		str	r2, [r3, #100]
 1172 005e EFE7     		b	.L98
 1173              	.LVL107:
 1174              	.L97:
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1175              		.loc 1 764 0
 1176 0060 BC42     		cmp	r4, r7
 1177 0062 03D0     		beq	.L122
 1178 0064 3D46     		mov	r5, r7
 1179 0066 0020     		movs	r0, #0
 1180              	.LVL108:
 1181 0068 0146     		mov	r1, r0
 1182 006a 03E0     		b	.L99
 1183              	.LVL109:
 1184              	.L122:
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1185              		.loc 1 823 0
 1186 006c 0120     		movs	r0, #1
 1187              	.LVL110:
 1188 006e E7E7     		b	.L98
 1189              	.LVL111:
 1190              	.L100:
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         counter++;
 1191              		.loc 1 774 0
 1192 0070 6D69     		ldr	r5, [r5, #20]
 1193              	.LVL112:
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 1194              		.loc 1 775 0
 1195 0072 0131     		adds	r1, r1, #1
 1196              	.LVL113:
 1197              	.L99:
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1198              		.loc 1 768 0
 1199 0074 5E6E     		ldr	r6, [r3, #100]
 1200 0076 B142     		cmp	r1, r6
 1201 0078 05D2     		bcs	.L101
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1202              		.loc 1 768 0 is_stmt 0 discriminator 1
 1203 007a 20B9     		cbnz	r0, .L101
ARM GAS  /tmp/ccbSGc9b.s 			page 59


 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 1204              		.loc 1 770 0 is_stmt 1
 1205 007c 6E69     		ldr	r6, [r5, #20]
 1206 007e A642     		cmp	r6, r4
 1207 0080 F6D1     		bne	.L100
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 1208              		.loc 1 772 0
 1209 0082 0120     		movs	r0, #1
 1210              	.LVL114:
 1211 0084 F4E7     		b	.L100
 1212              	.LVL115:
 1213              	.L101:
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1214              		.loc 1 778 0
 1215 0086 0028     		cmp	r0, #0
 1216 0088 DAD1     		bne	.L98
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 1217              		.loc 1 781 0
 1218 008a 196E     		ldr	r1, [r3, #96]
 1219              	.LVL116:
 1220 008c 8A42     		cmp	r2, r1
 1221 008e 03D0     		beq	.L103
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 1222              		.loc 1 781 0 is_stmt 0 discriminator 1
 1223 0090 12B1     		cbz	r2, .L103
 1224 0092 0026     		movs	r6, #0
 1225 0094 3146     		mov	r1, r6
 1226 0096 0FE0     		b	.L104
 1227              	.L103:
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->LastLinkedListNodeAddress->CLAR = (uint32_t)pNewNode;
 1228              		.loc 1 784 0 is_stmt 1
 1229 0098 4A69     		ldr	r2, [r1, #20]
 1230              	.LVL117:
 1231 009a 6261     		str	r2, [r4, #20]
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* Update the Handle last node address */
 1232              		.loc 1 785 0
 1233 009c 1A6E     		ldr	r2, [r3, #96]
 1234 009e 5461     		str	r4, [r2, #20]
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* Increment the linked list node counter */
 1235              		.loc 1 787 0
 1236 00a0 1C66     		str	r4, [r3, #96]
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 1237              		.loc 1 789 0
 1238 00a2 5A6E     		ldr	r2, [r3, #100]
 1239 00a4 0132     		adds	r2, r2, #1
 1240 00a6 5A66     		str	r2, [r3, #100]
 1241 00a8 CAE7     		b	.L98
 1242              	.LVL118:
 1243              	.L123:
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               pNode->CLAR = (uint32_t)pNewNode; 
 1244              		.loc 1 802 0
 1245 00aa 7D69     		ldr	r5, [r7, #20]
 1246 00ac 6561     		str	r5, [r4, #20]
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               /* Increment the linked list node counter */
 1247              		.loc 1 803 0
 1248 00ae 7C61     		str	r4, [r7, #20]
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               nodeInserted = 1;
ARM GAS  /tmp/ccbSGc9b.s 			page 60


 1249              		.loc 1 805 0
 1250 00b0 5D6E     		ldr	r5, [r3, #100]
 1251 00b2 0135     		adds	r5, r5, #1
 1252 00b4 5D66     		str	r5, [r3, #100]
 1253              	.LVL119:
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             }
 1254              		.loc 1 806 0
 1255 00b6 0126     		movs	r6, #1
 1256              	.LVL120:
 1257              	.L104:
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 1258              		.loc 1 796 0
 1259 00b8 5D6E     		ldr	r5, [r3, #100]
 1260 00ba A942     		cmp	r1, r5
 1261 00bc 05D2     		bcs	.L107
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 1262              		.loc 1 796 0 is_stmt 0 discriminator 1
 1263 00be 26B9     		cbnz	r6, .L107
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             if(pNode == pPrevNode)
 1264              		.loc 1 798 0 is_stmt 1
 1265 00c0 0131     		adds	r1, r1, #1
 1266              	.LVL121:
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             {
 1267              		.loc 1 799 0
 1268 00c2 9742     		cmp	r7, r2
 1269 00c4 F1D0     		beq	.L123
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             }
 1270              		.loc 1 810 0
 1271 00c6 7F69     		ldr	r7, [r7, #20]
 1272              	.LVL122:
 1273 00c8 F6E7     		b	.L104
 1274              	.L107:
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 1275              		.loc 1 814 0
 1276 00ca 002E     		cmp	r6, #0
 1277 00cc B8D1     		bne	.L98
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           }
 1278              		.loc 1 816 0
 1279 00ce 0120     		movs	r0, #1
 1280              	.LVL123:
 1281 00d0 B6E7     		b	.L98
 1282              	.LVL124:
 1283              	.L109:
 1284              	.LCFI9:
 1285              		.cfi_def_cfa_offset 0
 1286              		.cfi_restore 4
 1287              		.cfi_restore 5
 1288              		.cfi_restore 6
 1289              		.cfi_restore 7
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 1290              		.loc 1 728 0
 1291 00d2 0120     		movs	r0, #1
 1292              	.LVL125:
 1293 00d4 7047     		bx	lr
 1294              	.LVL126:
 1295              	.L110:
 1296              	.LCFI10:
ARM GAS  /tmp/ccbSGc9b.s 			page 61


 1297              		.cfi_def_cfa_offset 16
 1298              		.cfi_offset 4, -16
 1299              		.cfi_offset 5, -12
 1300              		.cfi_offset 6, -8
 1301              		.cfi_offset 7, -4
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1302              		.loc 1 732 0
 1303 00d6 0220     		movs	r0, #2
 1304              	.LVL127:
 1305 00d8 A9E7     		b	.L95
 1306              		.cfi_endproc
 1307              	.LFE147:
 1309              		.section	.text.HAL_MDMA_LinkedList_RemoveNode,"ax",%progbits
 1310              		.align	1
 1311              		.global	HAL_MDMA_LinkedList_RemoveNode
 1312              		.syntax unified
 1313              		.thumb
 1314              		.thumb_func
 1315              		.fpu fpv5-d16
 1317              	HAL_MDMA_LinkedList_RemoveNode:
 1318              	.LFB148:
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MDMA_LinkNodeTypeDef *ptmpNode;
 1319              		.loc 1 853 0
 1320              		.cfi_startproc
 1321              		@ args = 0, pretend = 0, frame = 0
 1322              		@ frame_needed = 0, uses_anonymous_args = 0
 1323              		@ link register save eliminated.
 1324              	.LVL128:
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1325              		.loc 1 859 0
 1326 0000 0029     		cmp	r1, #0
 1327 0002 18BF     		it	ne
 1328 0004 0028     		cmpne	r0, #0
 1329 0006 66D0     		beq	.L136
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MDMA_LinkNodeTypeDef *ptmpNode;
 1330              		.loc 1 853 0
 1331 0008 30B4     		push	{r4, r5}
 1332              	.LCFI11:
 1333              		.cfi_def_cfa_offset 8
 1334              		.cfi_offset 4, -8
 1335              		.cfi_offset 5, -4
 1336 000a 0346     		mov	r3, r0
 1337 000c 0C46     		mov	r4, r1
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1338              		.loc 1 865 0
 1339 000e 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1340 0012 012A     		cmp	r2, #1
 1341 0014 61D0     		beq	.L137
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1342              		.loc 1 865 0 is_stmt 0 discriminator 2
 1343 0016 0122     		movs	r2, #1
 1344 0018 80F83C20 		strb	r2, [r0, #60]
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1345              		.loc 1 867 0 is_stmt 1 discriminator 2
 1346 001c 90F83D20 		ldrb	r2, [r0, #61]	@ zero_extendqisi2
 1347 0020 D2B2     		uxtb	r2, r2
 1348 0022 012A     		cmp	r2, #1
ARM GAS  /tmp/ccbSGc9b.s 			page 62


 1349 0024 05D0     		beq	.L147
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1350              		.loc 1 952 0
 1351 0026 0022     		movs	r2, #0
 1352 0028 80F83C20 		strb	r2, [r0, #60]
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   } 
 1353              		.loc 1 955 0
 1354 002c 0220     		movs	r0, #2
 1355              	.LVL129:
 1356              	.L125:
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1357              		.loc 1 957 0
 1358 002e 30BC     		pop	{r4, r5}
 1359              	.LCFI12:
 1360              		.cfi_remember_state
 1361              		.cfi_restore 5
 1362              		.cfi_restore 4
 1363              		.cfi_def_cfa_offset 0
 1364              	.LVL130:
 1365 0030 7047     		bx	lr
 1366              	.LVL131:
 1367              	.L147:
 1368              	.LCFI13:
 1369              		.cfi_restore_state
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1370              		.loc 1 870 0
 1371 0032 0222     		movs	r2, #2
 1372 0034 80F83D20 		strb	r2, [r0, #61]
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1373              		.loc 1 873 0
 1374 0038 C26D     		ldr	r2, [r0, #92]
 1375 003a 1046     		mov	r0, r2
 1376              	.LVL132:
 1377 003c 002A     		cmp	r2, #0
 1378 003e 3ED0     		beq	.L138
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1379              		.loc 1 873 0 is_stmt 0 discriminator 1
 1380 0040 196E     		ldr	r1, [r3, #96]
 1381              	.LVL133:
 1382 0042 0029     		cmp	r1, #0
 1383 0044 43D0     		beq	.L139
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1384              		.loc 1 873 0 discriminator 2
 1385 0046 5D6E     		ldr	r5, [r3, #100]
 1386 0048 002D     		cmp	r5, #0
 1387 004a 42D0     		beq	.L140
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1388              		.loc 1 877 0 is_stmt 1
 1389 004c 9442     		cmp	r4, r2
 1390 004e 02D0     		beq	.L148
 1391 0050 0025     		movs	r5, #0
 1392 0052 2946     		mov	r1, r5
 1393 0054 22E0     		b	.L128
 1394              	.L148:
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1395              		.loc 1 880 0
 1396 0056 8C42     		cmp	r4, r1
ARM GAS  /tmp/ccbSGc9b.s 			page 63


 1397 0058 0DD0     		beq	.L149
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 1398              		.loc 1 893 0
 1399 005a 4A69     		ldr	r2, [r1, #20]
 1400 005c 9042     		cmp	r0, r2
 1401 005e 11D0     		beq	.L150
 1402              	.L130:
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->FirstLinkedListNodeAddress = (MDMA_LinkNodeTypeDef *)hmdma->Instance->CLAR;
 1403              		.loc 1 902 0
 1404 0060 1A68     		ldr	r2, [r3]
 1405 0062 6169     		ldr	r1, [r4, #20]
 1406 0064 5162     		str	r1, [r2, #36]
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update the Handle node counter */
 1407              		.loc 1 903 0
 1408 0066 1A68     		ldr	r2, [r3]
 1409 0068 526A     		ldr	r2, [r2, #36]
 1410 006a DA65     		str	r2, [r3, #92]
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }     
 1411              		.loc 1 905 0
 1412 006c 5A6E     		ldr	r2, [r3, #100]
 1413 006e 013A     		subs	r2, r2, #1
 1414 0070 5A66     		str	r2, [r3, #100]
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1415              		.loc 1 856 0
 1416 0072 0020     		movs	r0, #0
 1417 0074 24E0     		b	.L127
 1418              	.L149:
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LastLinkedListNodeAddress  = 0;
 1419              		.loc 1 885 0
 1420 0076 0020     		movs	r0, #0
 1421 0078 D865     		str	r0, [r3, #92]
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LinkedListNodeCounter = 0;
 1422              		.loc 1 886 0
 1423 007a 1866     		str	r0, [r3, #96]
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 1424              		.loc 1 887 0
 1425 007c 5866     		str	r0, [r3, #100]
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 1426              		.loc 1 889 0
 1427 007e 1A68     		ldr	r2, [r3]
 1428 0080 5062     		str	r0, [r2, #36]
 1429 0082 1DE0     		b	.L127
 1430              	.L150:
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 1431              		.loc 1 896 0
 1432 0084 6269     		ldr	r2, [r4, #20]
 1433 0086 4A61     		str	r2, [r1, #20]
 1434 0088 EAE7     		b	.L130
 1435              	.LVL134:
 1436              	.L152:
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 1437              		.loc 1 918 0
 1438 008a 186E     		ldr	r0, [r3, #96]
 1439 008c 8442     		cmp	r4, r0
 1440 008e 0FD0     		beq	.L151
 1441              	.L132:
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           nodeDeleted = 1;
ARM GAS  /tmp/ccbSGc9b.s 			page 64


 1442              		.loc 1 924 0
 1443 0090 6069     		ldr	r0, [r4, #20]
 1444 0092 5061     		str	r0, [r2, #20]
 1445              	.LVL135:
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 1446              		.loc 1 927 0
 1447 0094 586E     		ldr	r0, [r3, #100]
 1448 0096 0138     		subs	r0, r0, #1
 1449 0098 5866     		str	r0, [r3, #100]
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* Update the Handle node counter */
 1450              		.loc 1 925 0
 1451 009a 0125     		movs	r5, #1
 1452              	.LVL136:
 1453              	.L128:
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1454              		.loc 1 912 0
 1455 009c 586E     		ldr	r0, [r3, #100]
 1456 009e 8142     		cmp	r1, r0
 1457 00a0 08D2     		bcs	.L134
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1458              		.loc 1 912 0 is_stmt 0 discriminator 1
 1459 00a2 3DB9     		cbnz	r5, .L134
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         if(ptmpNode->CLAR == ((uint32_t)pNode))
 1460              		.loc 1 914 0 is_stmt 1
 1461 00a4 0131     		adds	r1, r1, #1
 1462              	.LVL137:
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 1463              		.loc 1 915 0
 1464 00a6 5069     		ldr	r0, [r2, #20]
 1465 00a8 A042     		cmp	r0, r4
 1466 00aa EED0     		beq	.L152
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 1467              		.loc 1 931 0
 1468 00ac 5269     		ldr	r2, [r2, #20]
 1469              	.LVL138:
 1470 00ae F5E7     		b	.L128
 1471              	.L151:
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           }
 1472              		.loc 1 921 0
 1473 00b0 1A66     		str	r2, [r3, #96]
 1474 00b2 EDE7     		b	.L132
 1475              	.L134:
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1476              		.loc 1 935 0
 1477 00b4 0DB9     		cbnz	r5, .L153
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 1478              		.loc 1 938 0
 1479 00b6 0120     		movs	r0, #1
 1480 00b8 02E0     		b	.L127
 1481              	.L153:
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1482              		.loc 1 856 0
 1483 00ba 0020     		movs	r0, #0
 1484 00bc 00E0     		b	.L127
 1485              	.LVL139:
 1486              	.L138:
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
ARM GAS  /tmp/ccbSGc9b.s 			page 65


 1487              		.loc 1 875 0
 1488 00be 0120     		movs	r0, #1
 1489              	.LVL140:
 1490              	.L127:
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1491              		.loc 1 943 0
 1492 00c0 0022     		movs	r2, #0
 1493 00c2 83F83C20 		strb	r2, [r3, #60]
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1494              		.loc 1 945 0
 1495 00c6 0122     		movs	r2, #1
 1496 00c8 83F83D20 		strb	r2, [r3, #61]
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1497              		.loc 1 947 0
 1498 00cc AFE7     		b	.L125
 1499              	.LVL141:
 1500              	.L139:
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1501              		.loc 1 875 0
 1502 00ce 0120     		movs	r0, #1
 1503 00d0 F6E7     		b	.L127
 1504              	.L140:
 1505 00d2 0120     		movs	r0, #1
 1506 00d4 F4E7     		b	.L127
 1507              	.LVL142:
 1508              	.L136:
 1509              	.LCFI14:
 1510              		.cfi_def_cfa_offset 0
 1511              		.cfi_restore 4
 1512              		.cfi_restore 5
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 1513              		.loc 1 861 0
 1514 00d6 0120     		movs	r0, #1
 1515              	.LVL143:
 1516 00d8 7047     		bx	lr
 1517              	.LVL144:
 1518              	.L137:
 1519              	.LCFI15:
 1520              		.cfi_def_cfa_offset 8
 1521              		.cfi_offset 4, -8
 1522              		.cfi_offset 5, -4
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1523              		.loc 1 865 0
 1524 00da 0220     		movs	r0, #2
 1525              	.LVL145:
 1526 00dc A7E7     		b	.L125
 1527              		.cfi_endproc
 1528              	.LFE148:
 1530              		.section	.text.HAL_MDMA_LinkedList_EnableCircularMode,"ax",%progbits
 1531              		.align	1
 1532              		.global	HAL_MDMA_LinkedList_EnableCircularMode
 1533              		.syntax unified
 1534              		.thumb
 1535              		.thumb_func
 1536              		.fpu fpv5-d16
 1538              	HAL_MDMA_LinkedList_EnableCircularMode:
 1539              	.LFB149:
ARM GAS  /tmp/ccbSGc9b.s 			page 66


 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;  
 1540              		.loc 1 966 0
 1541              		.cfi_startproc
 1542              		@ args = 0, pretend = 0, frame = 0
 1543              		@ frame_needed = 0, uses_anonymous_args = 0
 1544              		@ link register save eliminated.
 1545              	.LVL146:
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1546              		.loc 1 970 0
 1547 0000 0346     		mov	r3, r0
 1548 0002 28B3     		cbz	r0, .L157
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1549              		.loc 1 976 0
 1550 0004 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1551 0008 012A     		cmp	r2, #1
 1552 000a 23D0     		beq	.L158
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1553              		.loc 1 976 0 is_stmt 0 discriminator 2
 1554 000c 0122     		movs	r2, #1
 1555 000e 80F83C20 		strb	r2, [r0, #60]
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1556              		.loc 1 978 0 is_stmt 1 discriminator 2
 1557 0012 90F83D20 		ldrb	r2, [r0, #61]	@ zero_extendqisi2
 1558 0016 D2B2     		uxtb	r2, r2
 1559 0018 012A     		cmp	r2, #1
 1560 001a 07D0     		beq	.L163
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1561              		.loc 1 967 0
 1562 001c 0020     		movs	r0, #0
 1563              	.LVL147:
 1564              	.L156:
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1565              		.loc 1 996 0
 1566 001e 0022     		movs	r2, #0
 1567 0020 83F83C20 		strb	r2, [r3, #60]
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1568              		.loc 1 998 0
 1569 0024 0122     		movs	r2, #1
 1570 0026 83F83D20 		strb	r2, [r3, #61]
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1571              		.loc 1 1000 0
 1572 002a 7047     		bx	lr
 1573              	.LVL148:
 1574              	.L163:
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  
 1575              		.loc 1 981 0
 1576 002c 0222     		movs	r2, #2
 1577 002e 80F83D20 		strb	r2, [r0, #61]
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1578              		.loc 1 984 0
 1579 0032 C26D     		ldr	r2, [r0, #92]
 1580 0034 32B1     		cbz	r2, .L160
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1581              		.loc 1 984 0 is_stmt 0 discriminator 1
 1582 0036 016E     		ldr	r1, [r0, #96]
 1583 0038 31B1     		cbz	r1, .L161
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
ARM GAS  /tmp/ccbSGc9b.s 			page 67


 1584              		.loc 1 984 0 discriminator 2
 1585 003a 406E     		ldr	r0, [r0, #100]
 1586              	.LVL149:
 1587 003c 30B1     		cbz	r0, .L162
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1588              		.loc 1 991 0 is_stmt 1
 1589 003e 4A61     		str	r2, [r1, #20]
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1590              		.loc 1 967 0
 1591 0040 0020     		movs	r0, #0
 1592 0042 ECE7     		b	.L156
 1593              	.LVL150:
 1594              	.L160:
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1595              		.loc 1 986 0
 1596 0044 0120     		movs	r0, #1
 1597              	.LVL151:
 1598 0046 EAE7     		b	.L156
 1599              	.LVL152:
 1600              	.L161:
 1601 0048 0120     		movs	r0, #1
 1602              	.LVL153:
 1603 004a E8E7     		b	.L156
 1604              	.L162:
 1605 004c 0120     		movs	r0, #1
 1606 004e E6E7     		b	.L156
 1607              	.LVL154:
 1608              	.L157:
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 1609              		.loc 1 972 0
 1610 0050 0120     		movs	r0, #1
 1611              	.LVL155:
 1612 0052 7047     		bx	lr
 1613              	.LVL156:
 1614              	.L158:
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1615              		.loc 1 976 0
 1616 0054 0220     		movs	r0, #2
 1617              	.LVL157:
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1618              		.loc 1 1001 0
 1619 0056 7047     		bx	lr
 1620              		.cfi_endproc
 1621              	.LFE149:
 1623              		.section	.text.HAL_MDMA_LinkedList_DisableCircularMode,"ax",%progbits
 1624              		.align	1
 1625              		.global	HAL_MDMA_LinkedList_DisableCircularMode
 1626              		.syntax unified
 1627              		.thumb
 1628              		.thumb_func
 1629              		.fpu fpv5-d16
 1631              	HAL_MDMA_LinkedList_DisableCircularMode:
 1632              	.LFB150:
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;  
 1633              		.loc 1 1010 0
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccbSGc9b.s 			page 68


 1636              		@ frame_needed = 0, uses_anonymous_args = 0
 1637              		@ link register save eliminated.
 1638              	.LVL158:
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1639              		.loc 1 1014 0
 1640 0000 0346     		mov	r3, r0
 1641 0002 28B3     		cbz	r0, .L167
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1642              		.loc 1 1020 0
 1643 0004 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 1644 0008 012A     		cmp	r2, #1
 1645 000a 23D0     		beq	.L168
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1646              		.loc 1 1020 0 is_stmt 0 discriminator 2
 1647 000c 0122     		movs	r2, #1
 1648 000e 80F83C20 		strb	r2, [r0, #60]
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1649              		.loc 1 1022 0 is_stmt 1 discriminator 2
 1650 0012 90F83D20 		ldrb	r2, [r0, #61]	@ zero_extendqisi2
 1651 0016 D2B2     		uxtb	r2, r2
 1652 0018 012A     		cmp	r2, #1
 1653 001a 07D0     		beq	.L173
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1654              		.loc 1 1011 0
 1655 001c 0020     		movs	r0, #0
 1656              	.LVL159:
 1657              	.L166:
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1658              		.loc 1 1040 0
 1659 001e 0022     		movs	r2, #0
 1660 0020 83F83C20 		strb	r2, [r3, #60]
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1661              		.loc 1 1042 0
 1662 0024 0122     		movs	r2, #1
 1663 0026 83F83D20 		strb	r2, [r3, #61]
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1664              		.loc 1 1044 0
 1665 002a 7047     		bx	lr
 1666              	.LVL160:
 1667              	.L173:
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  
 1668              		.loc 1 1025 0
 1669 002c 0222     		movs	r2, #2
 1670 002e 80F83D20 		strb	r2, [r0, #61]
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1671              		.loc 1 1028 0
 1672 0032 C26D     		ldr	r2, [r0, #92]
 1673 0034 32B1     		cbz	r2, .L170
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1674              		.loc 1 1028 0 is_stmt 0 discriminator 1
 1675 0036 026E     		ldr	r2, [r0, #96]
 1676 0038 32B1     		cbz	r2, .L171
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1677              		.loc 1 1028 0 discriminator 2
 1678 003a 416E     		ldr	r1, [r0, #100]
 1679 003c 31B1     		cbz	r1, .L172
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
ARM GAS  /tmp/ccbSGc9b.s 			page 69


 1680              		.loc 1 1035 0 is_stmt 1
 1681 003e 0020     		movs	r0, #0
 1682              	.LVL161:
 1683 0040 5061     		str	r0, [r2, #20]
 1684 0042 ECE7     		b	.L166
 1685              	.LVL162:
 1686              	.L170:
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1687              		.loc 1 1030 0
 1688 0044 0120     		movs	r0, #1
 1689              	.LVL163:
 1690 0046 EAE7     		b	.L166
 1691              	.LVL164:
 1692              	.L171:
 1693 0048 0120     		movs	r0, #1
 1694              	.LVL165:
 1695 004a E8E7     		b	.L166
 1696              	.LVL166:
 1697              	.L172:
 1698 004c 0120     		movs	r0, #1
 1699              	.LVL167:
 1700 004e E6E7     		b	.L166
 1701              	.LVL168:
 1702              	.L167:
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 1703              		.loc 1 1016 0
 1704 0050 0120     		movs	r0, #1
 1705              	.LVL169:
 1706 0052 7047     		bx	lr
 1707              	.LVL170:
 1708              	.L168:
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1709              		.loc 1 1020 0
 1710 0054 0220     		movs	r0, #2
 1711              	.LVL171:
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1712              		.loc 1 1045 0
 1713 0056 7047     		bx	lr
 1714              		.cfi_endproc
 1715              	.LFE150:
 1717              		.section	.text.HAL_MDMA_Start,"ax",%progbits
 1718              		.align	1
 1719              		.global	HAL_MDMA_Start
 1720              		.syntax unified
 1721              		.thumb
 1722              		.thumb_func
 1723              		.fpu fpv5-d16
 1725              	HAL_MDMA_Start:
 1726              	.LFB151:
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
 1727              		.loc 1 1081 0
 1728              		.cfi_startproc
 1729              		@ args = 4, pretend = 0, frame = 0
 1730              		@ frame_needed = 0, uses_anonymous_args = 0
 1731              	.LVL172:
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1732              		.loc 1 1087 0
ARM GAS  /tmp/ccbSGc9b.s 			page 70


 1733 0000 0028     		cmp	r0, #0
 1734 0002 35D0     		beq	.L177
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
 1735              		.loc 1 1081 0
 1736 0004 30B5     		push	{r4, r5, lr}
 1737              	.LCFI16:
 1738              		.cfi_def_cfa_offset 12
 1739              		.cfi_offset 4, -12
 1740              		.cfi_offset 5, -8
 1741              		.cfi_offset 14, -4
 1742 0006 83B0     		sub	sp, sp, #12
 1743              	.LCFI17:
 1744              		.cfi_def_cfa_offset 24
 1745 0008 0446     		mov	r4, r0
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1746              		.loc 1 1093 0
 1747 000a 90F83C00 		ldrb	r0, [r0, #60]	@ zero_extendqisi2
 1748              	.LVL173:
 1749 000e 0128     		cmp	r0, #1
 1750 0010 30D0     		beq	.L178
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1751              		.loc 1 1093 0 is_stmt 0 discriminator 2
 1752 0012 0120     		movs	r0, #1
 1753 0014 84F83C00 		strb	r0, [r4, #60]
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1754              		.loc 1 1095 0 is_stmt 1 discriminator 2
 1755 0018 94F83D00 		ldrb	r0, [r4, #61]	@ zero_extendqisi2
 1756 001c C0B2     		uxtb	r0, r0
 1757 001e 0128     		cmp	r0, #1
 1758 0020 05D0     		beq	.L184
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1759              		.loc 1 1121 0
 1760 0022 0023     		movs	r3, #0
 1761              	.LVL174:
 1762 0024 84F83C30 		strb	r3, [r4, #60]
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1763              		.loc 1 1124 0
 1764 0028 0220     		movs	r0, #2
 1765              	.LVL175:
 1766              	.L175:
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1767              		.loc 1 1128 0
 1768 002a 03B0     		add	sp, sp, #12
 1769              	.LCFI18:
 1770              		.cfi_remember_state
 1771              		.cfi_def_cfa_offset 12
 1772              		@ sp needed
 1773 002c 30BD     		pop	{r4, r5, pc}
 1774              	.LVL176:
 1775              	.L184:
 1776              	.LCFI19:
 1777              		.cfi_restore_state
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1778              		.loc 1 1098 0
 1779 002e 0220     		movs	r0, #2
 1780 0030 84F83D00 		strb	r0, [r4, #61]
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
ARM GAS  /tmp/ccbSGc9b.s 			page 71


 1781              		.loc 1 1101 0
 1782 0034 0020     		movs	r0, #0
 1783 0036 A066     		str	r0, [r4, #104]
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1784              		.loc 1 1104 0
 1785 0038 2568     		ldr	r5, [r4]
 1786 003a E868     		ldr	r0, [r5, #12]
 1787 003c 20F00100 		bic	r0, r0, #1
 1788 0040 E860     		str	r0, [r5, #12]
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1789              		.loc 1 1107 0
 1790 0042 0698     		ldr	r0, [sp, #24]
 1791 0044 0090     		str	r0, [sp]
 1792 0046 2046     		mov	r0, r4
 1793 0048 FFF7FEFF 		bl	MDMA_SetConfig
 1794              	.LVL177:
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1795              		.loc 1 1110 0
 1796 004c 2268     		ldr	r2, [r4]
 1797 004e D368     		ldr	r3, [r2, #12]
 1798 0050 43F00103 		orr	r3, r3, #1
 1799 0054 D360     		str	r3, [r2, #12]
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1800              		.loc 1 1112 0
 1801 0056 6368     		ldr	r3, [r4, #4]
 1802 0058 B3F1804F 		cmp	r3, #1073741824
 1803 005c 01D0     		beq	.L185
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1804              		.loc 1 1127 0
 1805 005e 0020     		movs	r0, #0
 1806 0060 E3E7     		b	.L175
 1807              	.L185:
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }  
 1808              		.loc 1 1115 0
 1809 0062 2268     		ldr	r2, [r4]
 1810 0064 D368     		ldr	r3, [r2, #12]
 1811 0066 43F48033 		orr	r3, r3, #65536
 1812 006a D360     		str	r3, [r2, #12]
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1813              		.loc 1 1127 0
 1814 006c 0020     		movs	r0, #0
 1815 006e DCE7     		b	.L175
 1816              	.LVL178:
 1817              	.L177:
 1818              	.LCFI20:
 1819              		.cfi_def_cfa_offset 0
 1820              		.cfi_restore 4
 1821              		.cfi_restore 5
 1822              		.cfi_restore 14
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1823              		.loc 1 1089 0
 1824 0070 0120     		movs	r0, #1
 1825              	.LVL179:
 1826 0072 7047     		bx	lr
 1827              	.LVL180:
 1828              	.L178:
 1829              	.LCFI21:
ARM GAS  /tmp/ccbSGc9b.s 			page 72


 1830              		.cfi_def_cfa_offset 24
 1831              		.cfi_offset 4, -12
 1832              		.cfi_offset 5, -8
 1833              		.cfi_offset 14, -4
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1834              		.loc 1 1093 0
 1835 0074 0220     		movs	r0, #2
 1836 0076 D8E7     		b	.L175
 1837              		.cfi_endproc
 1838              	.LFE151:
 1840              		.section	.text.HAL_MDMA_Start_IT,"ax",%progbits
 1841              		.align	1
 1842              		.global	HAL_MDMA_Start_IT
 1843              		.syntax unified
 1844              		.thumb
 1845              		.thumb_func
 1846              		.fpu fpv5-d16
 1848              	HAL_MDMA_Start_IT:
 1849              	.LFB152:
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
 1850              		.loc 1 1141 0
 1851              		.cfi_startproc
 1852              		@ args = 4, pretend = 0, frame = 0
 1853              		@ frame_needed = 0, uses_anonymous_args = 0
 1854              	.LVL181:
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1855              		.loc 1 1147 0
 1856 0000 0028     		cmp	r0, #0
 1857 0002 4FD0     		beq	.L192
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
 1858              		.loc 1 1141 0
 1859 0004 30B5     		push	{r4, r5, lr}
 1860              	.LCFI22:
 1861              		.cfi_def_cfa_offset 12
 1862              		.cfi_offset 4, -12
 1863              		.cfi_offset 5, -8
 1864              		.cfi_offset 14, -4
 1865 0006 83B0     		sub	sp, sp, #12
 1866              	.LCFI23:
 1867              		.cfi_def_cfa_offset 24
 1868 0008 0446     		mov	r4, r0
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1869              		.loc 1 1153 0
 1870 000a 90F83C00 		ldrb	r0, [r0, #60]	@ zero_extendqisi2
 1871              	.LVL182:
 1872 000e 0128     		cmp	r0, #1
 1873 0010 4AD0     		beq	.L193
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1874              		.loc 1 1153 0 is_stmt 0 discriminator 2
 1875 0012 0120     		movs	r0, #1
 1876 0014 84F83C00 		strb	r0, [r4, #60]
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 1877              		.loc 1 1155 0 is_stmt 1 discriminator 2
 1878 0018 94F83D00 		ldrb	r0, [r4, #61]	@ zero_extendqisi2
 1879 001c C0B2     		uxtb	r0, r0
 1880 001e 0128     		cmp	r0, #1
 1881 0020 05D0     		beq	.L199
ARM GAS  /tmp/ccbSGc9b.s 			page 73


1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1882              		.loc 1 1202 0
 1883 0022 0023     		movs	r3, #0
 1884              	.LVL183:
 1885 0024 84F83C30 		strb	r3, [r4, #60]
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1886              		.loc 1 1205 0
 1887 0028 0220     		movs	r0, #2
 1888              	.LVL184:
 1889              	.L187:
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 1890              		.loc 1 1209 0
 1891 002a 03B0     		add	sp, sp, #12
 1892              	.LCFI24:
 1893              		.cfi_remember_state
 1894              		.cfi_def_cfa_offset 12
 1895              		@ sp needed
 1896 002c 30BD     		pop	{r4, r5, pc}
 1897              	.LVL185:
 1898              	.L199:
 1899              	.LCFI25:
 1900              		.cfi_restore_state
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1901              		.loc 1 1158 0
 1902 002e 0220     		movs	r0, #2
 1903 0030 84F83D00 		strb	r0, [r4, #61]
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1904              		.loc 1 1161 0
 1905 0034 0020     		movs	r0, #0
 1906 0036 A066     		str	r0, [r4, #104]
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1907              		.loc 1 1164 0
 1908 0038 2568     		ldr	r5, [r4]
 1909 003a E868     		ldr	r0, [r5, #12]
 1910 003c 20F00100 		bic	r0, r0, #1
 1911 0040 E860     		str	r0, [r5, #12]
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1912              		.loc 1 1167 0
 1913 0042 0698     		ldr	r0, [sp, #24]
 1914 0044 0090     		str	r0, [sp]
 1915 0046 2046     		mov	r0, r4
 1916 0048 FFF7FEFF 		bl	MDMA_SetConfig
 1917              	.LVL186:
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1918              		.loc 1 1170 0
 1919 004c 2268     		ldr	r2, [r4]
 1920 004e D368     		ldr	r3, [r2, #12]
 1921 0050 43F00603 		orr	r3, r3, #6
 1922 0054 D360     		str	r3, [r2, #12]
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1923              		.loc 1 1172 0
 1924 0056 E36C     		ldr	r3, [r4, #76]
 1925 0058 23B1     		cbz	r3, .L189
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1926              		.loc 1 1175 0
 1927 005a 2268     		ldr	r2, [r4]
 1928 005c D368     		ldr	r3, [r2, #12]
ARM GAS  /tmp/ccbSGc9b.s 			page 74


 1929 005e 43F01003 		orr	r3, r3, #16
 1930 0062 D360     		str	r3, [r2, #12]
 1931              	.L189:
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1932              		.loc 1 1178 0
 1933 0064 236D     		ldr	r3, [r4, #80]
 1934 0066 23B1     		cbz	r3, .L190
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }  
 1935              		.loc 1 1181 0
 1936 0068 2268     		ldr	r2, [r4]
 1937 006a D368     		ldr	r3, [r2, #12]
 1938 006c 43F00803 		orr	r3, r3, #8
 1939 0070 D360     		str	r3, [r2, #12]
 1940              	.L190:
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1941              		.loc 1 1184 0
 1942 0072 A36C     		ldr	r3, [r4, #72]
 1943 0074 23B1     		cbz	r3, .L191
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 1944              		.loc 1 1187 0
 1945 0076 2268     		ldr	r2, [r4]
 1946 0078 D368     		ldr	r3, [r2, #12]
 1947 007a 43F02003 		orr	r3, r3, #32
 1948 007e D360     		str	r3, [r2, #12]
 1949              	.L191:
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 1950              		.loc 1 1191 0
 1951 0080 2268     		ldr	r2, [r4]
 1952 0082 D368     		ldr	r3, [r2, #12]
 1953 0084 43F00103 		orr	r3, r3, #1
 1954 0088 D360     		str	r3, [r2, #12]
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 1955              		.loc 1 1193 0
 1956 008a 6368     		ldr	r3, [r4, #4]
 1957 008c B3F1804F 		cmp	r3, #1073741824
 1958 0090 01D0     		beq	.L200
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** } 
 1959              		.loc 1 1208 0
 1960 0092 0020     		movs	r0, #0
 1961 0094 C9E7     		b	.L187
 1962              	.L200:
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }  
 1963              		.loc 1 1196 0
 1964 0096 2268     		ldr	r2, [r4]
 1965 0098 D368     		ldr	r3, [r2, #12]
 1966 009a 43F48033 		orr	r3, r3, #65536
 1967 009e D360     		str	r3, [r2, #12]
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** } 
 1968              		.loc 1 1208 0
 1969 00a0 0020     		movs	r0, #0
 1970 00a2 C2E7     		b	.L187
 1971              	.LVL187:
 1972              	.L192:
 1973              	.LCFI26:
 1974              		.cfi_def_cfa_offset 0
 1975              		.cfi_restore 4
 1976              		.cfi_restore 5
ARM GAS  /tmp/ccbSGc9b.s 			page 75


 1977              		.cfi_restore 14
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 1978              		.loc 1 1149 0
 1979 00a4 0120     		movs	r0, #1
 1980              	.LVL188:
 1981 00a6 7047     		bx	lr
 1982              	.LVL189:
 1983              	.L193:
 1984              	.LCFI27:
 1985              		.cfi_def_cfa_offset 24
 1986              		.cfi_offset 4, -12
 1987              		.cfi_offset 5, -8
 1988              		.cfi_offset 14, -4
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 1989              		.loc 1 1153 0
 1990 00a8 0220     		movs	r0, #2
 1991 00aa BEE7     		b	.L187
 1992              		.cfi_endproc
 1993              	.LFE152:
 1995              		.section	.text.HAL_MDMA_Abort,"ax",%progbits
 1996              		.align	1
 1997              		.global	HAL_MDMA_Abort
 1998              		.syntax unified
 1999              		.thumb
 2000              		.thumb_func
 2001              		.fpu fpv5-d16
 2003              	HAL_MDMA_Abort:
 2004              	.LFB153:
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t tickstart =  HAL_GetTick();
 2005              		.loc 1 1224 0
 2006              		.cfi_startproc
 2007              		@ args = 0, pretend = 0, frame = 0
 2008              		@ frame_needed = 0, uses_anonymous_args = 0
 2009              	.LVL190:
 2010 0000 38B5     		push	{r3, r4, r5, lr}
 2011              	.LCFI28:
 2012              		.cfi_def_cfa_offset 16
 2013              		.cfi_offset 3, -16
 2014              		.cfi_offset 4, -12
 2015              		.cfi_offset 5, -8
 2016              		.cfi_offset 14, -4
 2017 0002 0446     		mov	r4, r0
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2018              		.loc 1 1225 0
 2019 0004 FFF7FEFF 		bl	HAL_GetTick
 2020              	.LVL191:
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2021              		.loc 1 1228 0
 2022 0008 002C     		cmp	r4, #0
 2023 000a 35D0     		beq	.L206
 2024 000c 0546     		mov	r5, r0
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2025              		.loc 1 1233 0
 2026 000e 94F83D30 		ldrb	r3, [r4, #61]	@ zero_extendqisi2
 2027 0012 DBB2     		uxtb	r3, r3
 2028 0014 022B     		cmp	r3, #2
 2029 0016 06D0     		beq	.L203
ARM GAS  /tmp/ccbSGc9b.s 			page 76


1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2030              		.loc 1 1235 0
 2031 0018 8023     		movs	r3, #128
 2032 001a A366     		str	r3, [r4, #104]
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2033              		.loc 1 1238 0
 2034 001c 0023     		movs	r3, #0
 2035 001e 84F83C30 		strb	r3, [r4, #60]
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2036              		.loc 1 1240 0
 2037 0022 0120     		movs	r0, #1
 2038              	.LVL192:
 2039 0024 38BD     		pop	{r3, r4, r5, pc}
 2040              	.LVL193:
 2041              	.L203:
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2042              		.loc 1 1245 0
 2043 0026 2268     		ldr	r2, [r4]
 2044 0028 D368     		ldr	r3, [r2, #12]
 2045 002a 23F03E03 		bic	r3, r3, #62
 2046 002e D360     		str	r3, [r2, #12]
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2047              		.loc 1 1248 0
 2048 0030 2268     		ldr	r2, [r4]
 2049 0032 D368     		ldr	r3, [r2, #12]
 2050 0034 23F00103 		bic	r3, r3, #1
 2051 0038 D360     		str	r3, [r2, #12]
 2052              	.LVL194:
 2053              	.L204:
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2054              		.loc 1 1251 0
 2055 003a 2368     		ldr	r3, [r4]
 2056 003c DA68     		ldr	r2, [r3, #12]
 2057 003e 12F0010F 		tst	r2, #1
 2058 0042 10D0     		beq	.L208
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2059              		.loc 1 1254 0
 2060 0044 FFF7FEFF 		bl	HAL_GetTick
 2061              	.LVL195:
 2062 0048 401B     		subs	r0, r0, r5
 2063 004a 0528     		cmp	r0, #5
 2064 004c F5D9     		bls	.L204
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 2065              		.loc 1 1257 0
 2066 004e A36E     		ldr	r3, [r4, #104]
 2067 0050 43F04003 		orr	r3, r3, #64
 2068 0054 A366     		str	r3, [r4, #104]
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 2069              		.loc 1 1260 0
 2070 0056 0023     		movs	r3, #0
 2071 0058 84F83C30 		strb	r3, [r4, #60]
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 2072              		.loc 1 1263 0
 2073 005c 0323     		movs	r3, #3
 2074 005e 84F83D30 		strb	r3, [r4, #61]
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2075              		.loc 1 1265 0
ARM GAS  /tmp/ccbSGc9b.s 			page 77


 2076 0062 0120     		movs	r0, #1
 2077 0064 38BD     		pop	{r3, r4, r5, pc}
 2078              	.LVL196:
 2079              	.L208:
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2080              		.loc 1 1270 0
 2081 0066 1F22     		movs	r2, #31
 2082 0068 5A60     		str	r2, [r3, #4]
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2083              		.loc 1 1273 0
 2084 006a 0020     		movs	r0, #0
 2085 006c 84F83C00 		strb	r0, [r4, #60]
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2086              		.loc 1 1276 0
 2087 0070 0123     		movs	r3, #1
 2088 0072 84F83D30 		strb	r3, [r4, #61]
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 2089              		.loc 1 1279 0
 2090 0076 38BD     		pop	{r3, r4, r5, pc}
 2091              	.LVL197:
 2092              	.L206:
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 2093              		.loc 1 1230 0
 2094 0078 0120     		movs	r0, #1
 2095              	.LVL198:
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2096              		.loc 1 1280 0
 2097 007a 38BD     		pop	{r3, r4, r5, pc}
 2098              		.cfi_endproc
 2099              	.LFE153:
 2101              		.section	.text.HAL_MDMA_Abort_IT,"ax",%progbits
 2102              		.align	1
 2103              		.global	HAL_MDMA_Abort_IT
 2104              		.syntax unified
 2105              		.thumb
 2106              		.thumb_func
 2107              		.fpu fpv5-d16
 2109              	HAL_MDMA_Abort_IT:
 2110              	.LFB154:
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 2111              		.loc 1 1289 0
 2112              		.cfi_startproc
 2113              		@ args = 0, pretend = 0, frame = 0
 2114              		@ frame_needed = 0, uses_anonymous_args = 0
 2115              		@ link register save eliminated.
 2116              	.LVL199:
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2117              		.loc 1 1291 0
 2118 0000 90B1     		cbz	r0, .L212
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2119              		.loc 1 1296 0
 2120 0002 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 2121 0006 DBB2     		uxtb	r3, r3
 2122 0008 022B     		cmp	r3, #2
 2123 000a 03D0     		beq	.L211
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 	
 2124              		.loc 1 1299 0
ARM GAS  /tmp/ccbSGc9b.s 			page 78


 2125 000c 8023     		movs	r3, #128
 2126 000e 8366     		str	r3, [r0, #104]
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2127              		.loc 1 1301 0
 2128 0010 0120     		movs	r0, #1
 2129              	.LVL200:
 2130 0012 7047     		bx	lr
 2131              	.LVL201:
 2132              	.L211:
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2133              		.loc 1 1306 0
 2134 0014 0423     		movs	r3, #4
 2135 0016 80F83D30 		strb	r3, [r0, #61]
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2136              		.loc 1 1309 0
 2137 001a 0268     		ldr	r2, [r0]
 2138 001c D368     		ldr	r3, [r2, #12]
 2139 001e 23F00103 		bic	r3, r3, #1
 2140 0022 D360     		str	r3, [r2, #12]
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 2141              		.loc 1 1312 0
 2142 0024 0020     		movs	r0, #0
 2143              	.LVL202:
 2144 0026 7047     		bx	lr
 2145              	.LVL203:
 2146              	.L212:
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2147              		.loc 1 1293 0
 2148 0028 0120     		movs	r0, #1
 2149              	.LVL204:
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2150              		.loc 1 1313 0
 2151 002a 7047     		bx	lr
 2152              		.cfi_endproc
 2153              	.LFE154:
 2155              		.section	.text.HAL_MDMA_PollForTransfer,"ax",%progbits
 2156              		.align	1
 2157              		.global	HAL_MDMA_PollForTransfer
 2158              		.syntax unified
 2159              		.thumb
 2160              		.thumb_func
 2161              		.fpu fpv5-d16
 2163              	HAL_MDMA_PollForTransfer:
 2164              	.LFB155:
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t levelFlag, errorFlag;
 2165              		.loc 1 1324 0
 2166              		.cfi_startproc
 2167              		@ args = 0, pretend = 0, frame = 0
 2168              		@ frame_needed = 0, uses_anonymous_args = 0
 2169              	.LVL205:
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2170              		.loc 1 1332 0
 2171 0000 0028     		cmp	r0, #0
 2172 0002 00F08F80 		beq	.L231
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t levelFlag, errorFlag;
 2173              		.loc 1 1324 0
 2174 0006 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
ARM GAS  /tmp/ccbSGc9b.s 			page 79


 2175              	.LCFI29:
 2176              		.cfi_def_cfa_offset 32
 2177              		.cfi_offset 3, -32
 2178              		.cfi_offset 4, -28
 2179              		.cfi_offset 5, -24
 2180              		.cfi_offset 6, -20
 2181              		.cfi_offset 7, -16
 2182              		.cfi_offset 8, -12
 2183              		.cfi_offset 9, -8
 2184              		.cfi_offset 14, -4
 2185 000a 0546     		mov	r5, r0
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2186              		.loc 1 1337 0
 2187 000c 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 2188 0010 DBB2     		uxtb	r3, r3
 2189 0012 022B     		cmp	r3, #2
 2190 0014 04D0     		beq	.L215
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2191              		.loc 1 1340 0
 2192 0016 8023     		movs	r3, #128
 2193 0018 8366     		str	r3, [r0, #104]
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 2194              		.loc 1 1342 0
 2195 001a 0120     		movs	r0, #1
 2196              	.LVL206:
 2197 001c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2198              	.LVL207:
 2199              	.L215:
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                (CompleteLevel == HAL_MDMA_BUFFER_TRANSFER)? MDMA_FLAG_BFTC : \
 2200              		.loc 1 1346 0
 2201 0020 39B1     		cbz	r1, .L232
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                (CompleteLevel == HAL_MDMA_BLOCK_TRANSFER) ? MDMA_FLAG_BT   : \
 2202              		.loc 1 1347 0
 2203 0022 0129     		cmp	r1, #1
 2204 0024 28D0     		beq	.L233
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                MDMA_FLAG_BRT);
 2205              		.loc 1 1348 0
 2206 0026 0229     		cmp	r1, #2
 2207 0028 01D0     		beq	.L240
 2208 002a 0427     		movs	r7, #4
 2209 002c 02E0     		b	.L216
 2210              	.L240:
 2211 002e 0827     		movs	r7, #8
 2212 0030 00E0     		b	.L216
 2213              	.L232:
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                (CompleteLevel == HAL_MDMA_BUFFER_TRANSFER)? MDMA_FLAG_BFTC : \
 2214              		.loc 1 1346 0
 2215 0032 0227     		movs	r7, #2
 2216              	.L216:
 2217 0034 1646     		mov	r6, r2
 2218 0036 8846     		mov	r8, r1
 2219              	.LVL208:
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 2220              		.loc 1 1353 0 discriminator 3
 2221 0038 FFF7FEFF 		bl	HAL_GetTick
 2222              	.LVL209:
 2223 003c 8146     		mov	r9, r0
ARM GAS  /tmp/ccbSGc9b.s 			page 80


 2224              	.LVL210:
 2225              	.L225:
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2226              		.loc 1 1355 0
 2227 003e 2B68     		ldr	r3, [r5]
 2228 0040 1C68     		ldr	r4, [r3]
 2229 0042 2742     		tst	r7, r4
 2230 0044 49D1     		bne	.L241
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {      
 2231              		.loc 1 1357 0
 2232 0046 1C68     		ldr	r4, [r3]
 2233 0048 14F0010F 		tst	r4, #1
 2234 004c 16D1     		bne	.L242
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2235              		.loc 1 1411 0
 2236 004e B6F1FF3F 		cmp	r6, #-1
 2237 0052 F4D0     		beq	.L225
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2238              		.loc 1 1413 0
 2239 0054 FFF7FEFF 		bl	HAL_GetTick
 2240              	.LVL211:
 2241 0058 A0EB0900 		sub	r0, r0, r9
 2242 005c 8642     		cmp	r6, r0
 2243 005e 01D3     		bcc	.L226
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2244              		.loc 1 1413 0 is_stmt 0 discriminator 1
 2245 0060 002E     		cmp	r6, #0
 2246 0062 ECD1     		bne	.L225
 2247              	.L226:
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2248              		.loc 1 1416 0 is_stmt 1
 2249 0064 AB6E     		ldr	r3, [r5, #104]
 2250 0066 43F04003 		orr	r3, r3, #64
 2251 006a AB66     		str	r3, [r5, #104]
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2252              		.loc 1 1418 0
 2253 006c 2846     		mov	r0, r5
 2254 006e FFF7FEFF 		bl	HAL_MDMA_Abort
 2255              	.LVL212:
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2256              		.loc 1 1427 0
 2257 0072 0120     		movs	r0, #1
 2258 0074 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2259              	.LVL213:
 2260              	.L233:
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                (CompleteLevel == HAL_MDMA_BLOCK_TRANSFER) ? MDMA_FLAG_BT   : \
 2261              		.loc 1 1347 0
 2262 0078 1027     		movs	r7, #16
 2263 007a DBE7     		b	.L216
 2264              	.LVL214:
 2265              	.L242:
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 2266              		.loc 1 1360 0
 2267 007c 9B68     		ldr	r3, [r3, #8]
 2268              	.LVL215:
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2269              		.loc 1 1362 0
ARM GAS  /tmp/ccbSGc9b.s 			page 81


 2270 007e 13F0800F 		tst	r3, #128
 2271 0082 25D1     		bne	.L219
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2272              		.loc 1 1365 0
 2273 0084 AA6E     		ldr	r2, [r5, #104]
 2274 0086 42F00102 		orr	r2, r2, #1
 2275 008a AA66     		str	r2, [r5, #104]
 2276              	.L220:
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2277              		.loc 1 1373 0
 2278 008c 13F4007F 		tst	r3, #512
 2279 0090 03D0     		beq	.L221
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2280              		.loc 1 1376 0
 2281 0092 AA6E     		ldr	r2, [r5, #104]
 2282 0094 42F00402 		orr	r2, r2, #4
 2283 0098 AA66     		str	r2, [r5, #104]
 2284              	.L221:
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2285              		.loc 1 1379 0
 2286 009a 13F4807F 		tst	r3, #256
 2287 009e 03D0     		beq	.L222
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2288              		.loc 1 1382 0
 2289 00a0 AA6E     		ldr	r2, [r5, #104]
 2290 00a2 42F00802 		orr	r2, r2, #8
 2291 00a6 AA66     		str	r2, [r5, #104]
 2292              	.L222:
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2293              		.loc 1 1385 0
 2294 00a8 13F4806F 		tst	r3, #1024
 2295 00ac 03D0     		beq	.L223
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2296              		.loc 1 1388 0
 2297 00ae AA6E     		ldr	r2, [r5, #104]
 2298 00b0 42F01002 		orr	r2, r2, #16
 2299 00b4 AA66     		str	r2, [r5, #104]
 2300              	.L223:
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2301              		.loc 1 1391 0
 2302 00b6 13F4006F 		tst	r3, #2048
 2303 00ba 03D0     		beq	.L224
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }      
 2304              		.loc 1 1394 0
 2305 00bc AB6E     		ldr	r3, [r5, #104]
 2306              	.LVL216:
 2307 00be 43F02003 		orr	r3, r3, #32
 2308 00c2 AB66     		str	r3, [r5, #104]
 2309              	.L224:
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 2310              		.loc 1 1397 0
 2311 00c4 2846     		mov	r0, r5
 2312 00c6 FFF7FEFF 		bl	HAL_MDMA_Abort
 2313              	.LVL217:
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 2314              		.loc 1 1406 0
 2315 00ca 0120     		movs	r0, #1
ARM GAS  /tmp/ccbSGc9b.s 			page 82


 2316 00cc BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2317              	.LVL218:
 2318              	.L219:
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2319              		.loc 1 1370 0
 2320 00d0 AA6E     		ldr	r2, [r5, #104]
 2321 00d2 42F00202 		orr	r2, r2, #2
 2322 00d6 AA66     		str	r2, [r5, #104]
 2323 00d8 D8E7     		b	.L220
 2324              	.LVL219:
 2325              	.L241:
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2326              		.loc 1 1433 0
 2327 00da B8F1010F 		cmp	r8, #1
 2328 00de 12D0     		beq	.L243
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2329              		.loc 1 1438 0
 2330 00e0 B8F1020F 		cmp	r8, #2
 2331 00e4 14D0     		beq	.L244
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2332              		.loc 1 1443 0
 2333 00e6 B8F1030F 		cmp	r8, #3
 2334 00ea 16D0     		beq	.L245
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2335              		.loc 1 1447 0
 2336 00ec B8F1000F 		cmp	r8, #0
 2337 00f0 1AD1     		bne	.L235
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2338              		.loc 1 1449 0
 2339 00f2 1E22     		movs	r2, #30
 2340 00f4 5A60     		str	r2, [r3, #4]
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2341              		.loc 1 1452 0
 2342 00f6 0020     		movs	r0, #0
 2343 00f8 85F83C00 		strb	r0, [r5, #60]
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2344              		.loc 1 1454 0
 2345 00fc 0123     		movs	r3, #1
 2346 00fe 85F83D30 		strb	r3, [r5, #61]
 2347 0102 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2348              	.LVL220:
 2349              	.L243:
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2350              		.loc 1 1435 0
 2351 0106 1022     		movs	r2, #16
 2352 0108 5A60     		str	r2, [r3, #4]
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 2353              		.loc 1 1461 0
 2354 010a 0020     		movs	r0, #0
 2355 010c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2356              	.LVL221:
 2357              	.L244:
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2358              		.loc 1 1440 0
 2359 0110 1822     		movs	r2, #24
 2360 0112 5A60     		str	r2, [r3, #4]
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
ARM GAS  /tmp/ccbSGc9b.s 			page 83


 2361              		.loc 1 1461 0
 2362 0114 0020     		movs	r0, #0
 2363 0116 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2364              	.LVL222:
 2365              	.L245:
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }    
 2366              		.loc 1 1445 0
 2367 011a 1C22     		movs	r2, #28
 2368 011c 5A60     		str	r2, [r3, #4]
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 2369              		.loc 1 1461 0
 2370 011e 0020     		movs	r0, #0
 2371 0120 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2372              	.LVL223:
 2373              	.L231:
 2374              	.LCFI30:
 2375              		.cfi_def_cfa_offset 0
 2376              		.cfi_restore 3
 2377              		.cfi_restore 4
 2378              		.cfi_restore 5
 2379              		.cfi_restore 6
 2380              		.cfi_restore 7
 2381              		.cfi_restore 8
 2382              		.cfi_restore 9
 2383              		.cfi_restore 14
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 2384              		.loc 1 1334 0
 2385 0124 0120     		movs	r0, #1
 2386              	.LVL224:
 2387 0126 7047     		bx	lr
 2388              	.LVL225:
 2389              	.L235:
 2390              	.LCFI31:
 2391              		.cfi_def_cfa_offset 32
 2392              		.cfi_offset 3, -32
 2393              		.cfi_offset 4, -28
 2394              		.cfi_offset 5, -24
 2395              		.cfi_offset 6, -20
 2396              		.cfi_offset 7, -16
 2397              		.cfi_offset 8, -12
 2398              		.cfi_offset 9, -8
 2399              		.cfi_offset 14, -4
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2400              		.loc 1 1458 0
 2401 0128 0120     		movs	r0, #1
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2402              		.loc 1 1462 0
 2403 012a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2404              		.cfi_endproc
 2405              	.LFE155:
 2407              		.section	.text.HAL_MDMA_GenerateSWRequest,"ax",%progbits
 2408              		.align	1
 2409              		.global	HAL_MDMA_GenerateSWRequest
 2410              		.syntax unified
 2411              		.thumb
 2412              		.thumb_func
 2413              		.fpu fpv5-d16
ARM GAS  /tmp/ccbSGc9b.s 			page 84


 2415              	HAL_MDMA_GenerateSWRequest:
 2416              	.LFB156:
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t request_mode;
 2417              		.loc 1 1471 0
 2418              		.cfi_startproc
 2419              		@ args = 0, pretend = 0, frame = 0
 2420              		@ frame_needed = 0, uses_anonymous_args = 0
 2421              		@ link register save eliminated.
 2422              	.LVL226:
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2423              		.loc 1 1475 0
 2424 0000 0146     		mov	r1, r0
 2425 0002 D8B1     		cbz	r0, .L251
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 2426              		.loc 1 1481 0
 2427 0004 0368     		ldr	r3, [r0]
 2428 0006 1A69     		ldr	r2, [r3, #16]
 2429 0008 02F08042 		and	r2, r2, #1073741824
 2430              	.LVL227:
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2431              		.loc 1 1483 0
 2432 000c D868     		ldr	r0, [r3, #12]
 2433              	.LVL228:
 2434 000e 10F0010F 		tst	r0, #1
 2435 0012 0AD0     		beq	.L252
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2436              		.loc 1 1490 0
 2437 0014 1868     		ldr	r0, [r3]
 2438 0016 10F4803F 		tst	r0, #65536
 2439 001a 0AD1     		bne	.L249
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2440              		.loc 1 1490 0 is_stmt 0 discriminator 1
 2441 001c 4AB1     		cbz	r2, .L249
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2442              		.loc 1 1500 0 is_stmt 1
 2443 001e DA68     		ldr	r2, [r3, #12]
 2444              	.LVL229:
 2445 0020 42F48032 		orr	r2, r2, #65536
 2446 0024 DA60     		str	r2, [r3, #12]
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2447              		.loc 1 1502 0
 2448 0026 0020     		movs	r0, #0
 2449 0028 7047     		bx	lr
 2450              	.LVL230:
 2451              	.L252:
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2452              		.loc 1 1486 0
 2453 002a 8023     		movs	r3, #128
 2454 002c 8B66     		str	r3, [r1, #104]
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2455              		.loc 1 1488 0
 2456 002e 0120     		movs	r0, #1
 2457 0030 7047     		bx	lr
 2458              	.L249:
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2459              		.loc 1 1493 0
 2460 0032 4FF48073 		mov	r3, #256
ARM GAS  /tmp/ccbSGc9b.s 			page 85


 2461 0036 8B66     		str	r3, [r1, #104]
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2462              		.loc 1 1495 0
 2463 0038 0120     		movs	r0, #1
 2464 003a 7047     		bx	lr
 2465              	.LVL231:
 2466              	.L251:
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 2467              		.loc 1 1477 0
 2468 003c 0120     		movs	r0, #1
 2469              	.LVL232:
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2470              		.loc 1 1504 0
 2471 003e 7047     		bx	lr
 2472              		.cfi_endproc
 2473              	.LFE156:
 2475              		.section	.text.HAL_MDMA_IRQHandler,"ax",%progbits
 2476              		.align	1
 2477              		.global	HAL_MDMA_IRQHandler
 2478              		.syntax unified
 2479              		.thumb
 2480              		.thumb_func
 2481              		.fpu fpv5-d16
 2483              	HAL_MDMA_IRQHandler:
 2484              	.LFB157:
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __IO uint32_t count = 0;
 2485              		.loc 1 1513 0
 2486              		.cfi_startproc
 2487              		@ args = 0, pretend = 0, frame = 8
 2488              		@ frame_needed = 0, uses_anonymous_args = 0
 2489              	.LVL233:
 2490 0000 30B5     		push	{r4, r5, lr}
 2491              	.LCFI32:
 2492              		.cfi_def_cfa_offset 12
 2493              		.cfi_offset 4, -12
 2494              		.cfi_offset 5, -8
 2495              		.cfi_offset 14, -4
 2496 0002 83B0     		sub	sp, sp, #12
 2497              	.LCFI33:
 2498              		.cfi_def_cfa_offset 24
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t timeout = SystemCoreClock / 9600U;
 2499              		.loc 1 1514 0
 2500 0004 0023     		movs	r3, #0
 2501 0006 0193     		str	r3, [sp, #4]
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 2502              		.loc 1 1515 0
 2503 0008 664B     		ldr	r3, .L273
 2504 000a 1D68     		ldr	r5, [r3]
 2505 000c 664B     		ldr	r3, .L273+4
 2506 000e A3FB0535 		umull	r3, r5, r3, r5
 2507              	.LVL234:
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((MDMA->GISR0 & generalIntFlag) == 0U)
 2508              		.loc 1 1520 0
 2509 0012 0168     		ldr	r1, [r0]
 2510 0014 654B     		ldr	r3, .L273+8
 2511 0016 0B44     		add	r3, r3, r1
 2512 0018 C3F38413 		ubfx	r3, r3, #6, #5
ARM GAS  /tmp/ccbSGc9b.s 			page 86


 2513 001c 0122     		movs	r2, #1
 2514 001e 02FA03F3 		lsl	r3, r2, r3
 2515              	.LVL235:
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2516              		.loc 1 1521 0
 2517 0022 4FF0A442 		mov	r2, #1375731712
 2518 0026 1268     		ldr	r2, [r2]
 2519 0028 1342     		tst	r3, r2
 2520 002a 00F0A480 		beq	.L253
 2521 002e AD0A     		lsrs	r5, r5, #10
 2522              	.LVL236:
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2523              		.loc 1 1527 0
 2524 0030 0B68     		ldr	r3, [r1]
 2525              	.LVL237:
 2526 0032 13F0010F 		tst	r3, #1
 2527 0036 2FD0     		beq	.L255
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {      
 2528              		.loc 1 1529 0
 2529 0038 CB68     		ldr	r3, [r1, #12]
 2530 003a 13F0020F 		tst	r3, #2
 2531 003e 2BD0     		beq	.L255
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 2532              		.loc 1 1532 0
 2533 0040 CB68     		ldr	r3, [r1, #12]
 2534 0042 23F00203 		bic	r3, r3, #2
 2535 0046 CB60     		str	r3, [r1, #12]
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 2536              		.loc 1 1535 0
 2537 0048 0268     		ldr	r2, [r0]
 2538 004a 9368     		ldr	r3, [r2, #8]
 2539              	.LVL238:
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2540              		.loc 1 1537 0
 2541 004c 13F0800F 		tst	r3, #128
 2542 0050 40F09380 		bne	.L256
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2543              		.loc 1 1540 0
 2544 0054 816E     		ldr	r1, [r0, #104]
 2545              	.LVL239:
 2546 0056 41F00101 		orr	r1, r1, #1
 2547 005a 8166     		str	r1, [r0, #104]
 2548              	.L257:
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2549              		.loc 1 1548 0
 2550 005c 13F4007F 		tst	r3, #512
 2551 0060 03D0     		beq	.L258
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2552              		.loc 1 1551 0
 2553 0062 816E     		ldr	r1, [r0, #104]
 2554 0064 41F00401 		orr	r1, r1, #4
 2555 0068 8166     		str	r1, [r0, #104]
 2556              	.L258:
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2557              		.loc 1 1554 0
 2558 006a 13F4807F 		tst	r3, #256
 2559 006e 03D0     		beq	.L259
ARM GAS  /tmp/ccbSGc9b.s 			page 87


1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2560              		.loc 1 1557 0
 2561 0070 816E     		ldr	r1, [r0, #104]
 2562 0072 41F00801 		orr	r1, r1, #8
 2563 0076 8166     		str	r1, [r0, #104]
 2564              	.L259:
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2565              		.loc 1 1560 0
 2566 0078 13F4806F 		tst	r3, #1024
 2567 007c 03D0     		beq	.L260
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2568              		.loc 1 1563 0
 2569 007e 816E     		ldr	r1, [r0, #104]
 2570 0080 41F01001 		orr	r1, r1, #16
 2571 0084 8166     		str	r1, [r0, #104]
 2572              	.L260:
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2573              		.loc 1 1566 0
 2574 0086 13F4006F 		tst	r3, #2048
 2575 008a 03D0     		beq	.L261
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }       
 2576              		.loc 1 1569 0
 2577 008c 836E     		ldr	r3, [r0, #104]
 2578              	.LVL240:
 2579 008e 43F02003 		orr	r3, r3, #32
 2580 0092 8366     		str	r3, [r0, #104]
 2581              	.L261:
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 2582              		.loc 1 1573 0
 2583 0094 0123     		movs	r3, #1
 2584 0096 5360     		str	r3, [r2, #4]
 2585              	.L255:
 2586 0098 0446     		mov	r4, r0
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2587              		.loc 1 1578 0
 2588 009a 0368     		ldr	r3, [r0]
 2589 009c 1A68     		ldr	r2, [r3]
 2590 009e 12F0100F 		tst	r2, #16
 2591 00a2 08D0     		beq	.L262
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2592              		.loc 1 1580 0
 2593 00a4 DA68     		ldr	r2, [r3, #12]
 2594 00a6 12F0200F 		tst	r2, #32
 2595 00aa 04D0     		beq	.L262
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 2596              		.loc 1 1583 0
 2597 00ac 1022     		movs	r2, #16
 2598 00ae 5A60     		str	r2, [r3, #4]
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2599              		.loc 1 1585 0
 2600 00b0 836C     		ldr	r3, [r0, #72]
 2601 00b2 03B1     		cbz	r3, .L262
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }          
 2602              		.loc 1 1588 0
 2603 00b4 9847     		blx	r3
 2604              	.LVL241:
 2605              	.L262:
ARM GAS  /tmp/ccbSGc9b.s 			page 88


1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2606              		.loc 1 1594 0
 2607 00b6 2368     		ldr	r3, [r4]
 2608 00b8 1A68     		ldr	r2, [r3]
 2609 00ba 12F0080F 		tst	r2, #8
 2610 00be 09D0     		beq	.L263
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2611              		.loc 1 1596 0
 2612 00c0 DA68     		ldr	r2, [r3, #12]
 2613 00c2 12F0100F 		tst	r2, #16
 2614 00c6 05D0     		beq	.L263
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 2615              		.loc 1 1599 0
 2616 00c8 0822     		movs	r2, #8
 2617 00ca 5A60     		str	r2, [r3, #4]
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2618              		.loc 1 1601 0
 2619 00cc E36C     		ldr	r3, [r4, #76]
 2620 00ce 0BB1     		cbz	r3, .L263
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }          
 2621              		.loc 1 1604 0
 2622 00d0 2046     		mov	r0, r4
 2623 00d2 9847     		blx	r3
 2624              	.LVL242:
 2625              	.L263:
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2626              		.loc 1 1610 0
 2627 00d4 2368     		ldr	r3, [r4]
 2628 00d6 1A68     		ldr	r2, [r3]
 2629 00d8 12F0040F 		tst	r2, #4
 2630 00dc 09D0     		beq	.L264
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2631              		.loc 1 1612 0
 2632 00de DA68     		ldr	r2, [r3, #12]
 2633 00e0 12F0080F 		tst	r2, #8
 2634 00e4 05D0     		beq	.L264
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 2635              		.loc 1 1615 0
 2636 00e6 0422     		movs	r2, #4
 2637 00e8 5A60     		str	r2, [r3, #4]
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2638              		.loc 1 1617 0
 2639 00ea 236D     		ldr	r3, [r4, #80]
 2640 00ec 0BB1     		cbz	r3, .L264
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }          
 2641              		.loc 1 1620 0
 2642 00ee 2046     		mov	r0, r4
 2643 00f0 9847     		blx	r3
 2644              	.LVL243:
 2645              	.L264:
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2646              		.loc 1 1626 0
 2647 00f2 2368     		ldr	r3, [r4]
 2648 00f4 1A68     		ldr	r2, [r3]
 2649 00f6 12F0020F 		tst	r2, #2
 2650 00fa 19D0     		beq	.L265
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
ARM GAS  /tmp/ccbSGc9b.s 			page 89


 2651              		.loc 1 1628 0
 2652 00fc DA68     		ldr	r2, [r3, #12]
 2653 00fe 12F0040F 		tst	r2, #4
 2654 0102 15D0     		beq	.L265
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 2655              		.loc 1 1631 0
 2656 0104 DA68     		ldr	r2, [r3, #12]
 2657 0106 22F03E02 		bic	r2, r2, #62
 2658 010a DA60     		str	r2, [r3, #12]
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2659              		.loc 1 1633 0
 2660 010c 94F83D30 		ldrb	r3, [r4, #61]	@ zero_extendqisi2
 2661 0110 DBB2     		uxtb	r3, r3
 2662 0112 042B     		cmp	r3, #4
 2663 0114 36D0     		beq	.L272
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 2664              		.loc 1 1649 0
 2665 0116 2368     		ldr	r3, [r4]
 2666 0118 0222     		movs	r2, #2
 2667 011a 5A60     		str	r2, [r3, #4]
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 2668              		.loc 1 1652 0
 2669 011c 0023     		movs	r3, #0
 2670 011e 84F83C30 		strb	r3, [r4, #60]
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 2671              		.loc 1 1655 0
 2672 0122 0123     		movs	r3, #1
 2673 0124 84F83D30 		strb	r3, [r4, #61]
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2674              		.loc 1 1657 0
 2675 0128 636C     		ldr	r3, [r4, #68]
 2676 012a 0BB1     		cbz	r3, .L265
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }          
 2677              		.loc 1 1660 0
 2678 012c 2046     		mov	r0, r4
 2679 012e 9847     		blx	r3
 2680              	.LVL244:
 2681              	.L265:
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2682              		.loc 1 1666 0
 2683 0130 A36E     		ldr	r3, [r4, #104]
 2684 0132 03B3     		cbz	r3, .L253
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2685              		.loc 1 1668 0
 2686 0134 0423     		movs	r3, #4
 2687 0136 84F83D30 		strb	r3, [r4, #61]
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2688              		.loc 1 1671 0
 2689 013a 2268     		ldr	r2, [r4]
 2690 013c D368     		ldr	r3, [r2, #12]
 2691 013e 23F00103 		bic	r3, r3, #1
 2692 0142 D360     		str	r3, [r2, #12]
 2693              	.L268:
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 2694              		.loc 1 1675 0
 2695 0144 019B     		ldr	r3, [sp, #4]
 2696 0146 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccbSGc9b.s 			page 90


 2697 0148 0193     		str	r3, [sp, #4]
 2698 014a 9D42     		cmp	r5, r3
 2699 014c 04D3     		bcc	.L267
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2700              		.loc 1 1680 0
 2701 014e 2368     		ldr	r3, [r4]
 2702 0150 DB68     		ldr	r3, [r3, #12]
 2703 0152 13F0010F 		tst	r3, #1
 2704 0156 F5D1     		bne	.L268
 2705              	.L267:
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 2706              		.loc 1 1683 0
 2707 0158 0023     		movs	r3, #0
 2708 015a 84F83C30 		strb	r3, [r4, #60]
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2709              		.loc 1 1685 0
 2710 015e 2368     		ldr	r3, [r4]
 2711 0160 DB68     		ldr	r3, [r3, #12]
 2712 0162 13F0010F 		tst	r3, #1
 2713 0166 19D0     		beq	.L269
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 2714              		.loc 1 1688 0
 2715 0168 0323     		movs	r3, #3
 2716 016a 84F83D30 		strb	r3, [r4, #61]
 2717              	.L270:
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2718              		.loc 1 1697 0
 2719 016e 636D     		ldr	r3, [r4, #84]
 2720 0170 0BB1     		cbz	r3, .L253
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 2721              		.loc 1 1700 0
 2722 0172 2046     		mov	r0, r4
 2723 0174 9847     		blx	r3
 2724              	.LVL245:
 2725              	.L253:
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2726              		.loc 1 1703 0
 2727 0176 03B0     		add	sp, sp, #12
 2728              	.LCFI34:
 2729              		.cfi_remember_state
 2730              		.cfi_def_cfa_offset 12
 2731              		@ sp needed
 2732 0178 30BD     		pop	{r4, r5, pc}
 2733              	.LVL246:
 2734              	.L256:
 2735              	.LCFI35:
 2736              		.cfi_restore_state
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 2737              		.loc 1 1545 0
 2738 017a 816E     		ldr	r1, [r0, #104]
 2739              	.LVL247:
 2740 017c 41F00201 		orr	r1, r1, #2
 2741 0180 8166     		str	r1, [r0, #104]
 2742 0182 6BE7     		b	.L257
 2743              	.LVL248:
 2744              	.L272:
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
ARM GAS  /tmp/ccbSGc9b.s 			page 91


 2745              		.loc 1 1636 0
 2746 0184 0023     		movs	r3, #0
 2747 0186 84F83C30 		strb	r3, [r4, #60]
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 2748              		.loc 1 1639 0
 2749 018a 0123     		movs	r3, #1
 2750 018c 84F83D30 		strb	r3, [r4, #61]
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 2751              		.loc 1 1641 0
 2752 0190 A36D     		ldr	r3, [r4, #88]
 2753 0192 002B     		cmp	r3, #0
 2754 0194 EFD0     		beq	.L253
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 2755              		.loc 1 1643 0
 2756 0196 2046     		mov	r0, r4
 2757 0198 9847     		blx	r3
 2758              	.LVL249:
 2759 019a ECE7     		b	.L253
 2760              	.L269:
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 2761              		.loc 1 1693 0
 2762 019c 0123     		movs	r3, #1
 2763 019e 84F83D30 		strb	r3, [r4, #61]
 2764 01a2 E4E7     		b	.L270
 2765              	.L274:
 2766              		.align	2
 2767              	.L273:
 2768 01a4 00000000 		.word	SystemCoreClock
 2769 01a8 B5814E1B 		.word	458129845
 2770 01ac C0FFFFAD 		.word	-1375731776
 2771              		.cfi_endproc
 2772              	.LFE157:
 2774              		.section	.text.HAL_MDMA_GetState,"ax",%progbits
 2775              		.align	1
 2776              		.global	HAL_MDMA_GetState
 2777              		.syntax unified
 2778              		.thumb
 2779              		.thumb_func
 2780              		.fpu fpv5-d16
 2782              	HAL_MDMA_GetState:
 2783              	.LFB158:
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return hmdma->State;
 2784              		.loc 1 1731 0
 2785              		.cfi_startproc
 2786              		@ args = 0, pretend = 0, frame = 0
 2787              		@ frame_needed = 0, uses_anonymous_args = 0
 2788              		@ link register save eliminated.
 2789              	.LVL250:
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 2790              		.loc 1 1732 0
 2791 0000 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2
 2792              	.LVL251:
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2793              		.loc 1 1733 0
 2794 0004 7047     		bx	lr
 2795              		.cfi_endproc
 2796              	.LFE158:
ARM GAS  /tmp/ccbSGc9b.s 			page 92


 2798              		.section	.text.HAL_MDMA_GetError,"ax",%progbits
 2799              		.align	1
 2800              		.global	HAL_MDMA_GetError
 2801              		.syntax unified
 2802              		.thumb
 2803              		.thumb_func
 2804              		.fpu fpv5-d16
 2806              	HAL_MDMA_GetError:
 2807              	.LFB159:
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return hmdma->ErrorCode;
 2808              		.loc 1 1742 0
 2809              		.cfi_startproc
 2810              		@ args = 0, pretend = 0, frame = 0
 2811              		@ frame_needed = 0, uses_anonymous_args = 0
 2812              		@ link register save eliminated.
 2813              	.LVL252:
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 2814              		.loc 1 1743 0
 2815 0000 806E     		ldr	r0, [r0, #104]
 2816              	.LVL253:
1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 2817              		.loc 1 1744 0
 2818 0002 7047     		bx	lr
 2819              		.cfi_endproc
 2820              	.LFE159:
 2822              		.text
 2823              	.Letext0:
 2824              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2825              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2826              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 2827              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 2828              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 2829              		.file 7 "/usr/include/newlib/sys/lock.h"
 2830              		.file 8 "/usr/include/newlib/sys/_types.h"
 2831              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 2832              		.file 10 "/usr/include/newlib/sys/reent.h"
 2833              		.file 11 "/usr/include/newlib/math.h"
 2834              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 2835              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_mdma.h"
 2836              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 2837              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccbSGc9b.s 			page 93


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_mdma.c
     /tmp/ccbSGc9b.s:17     .text.MDMA_SetConfig:0000000000000000 $t
     /tmp/ccbSGc9b.s:23     .text.MDMA_SetConfig:0000000000000000 MDMA_SetConfig
     /tmp/ccbSGc9b.s:134    .text.MDMA_SetConfig:0000000000000084 $d
     /tmp/ccbSGc9b.s:139    .text.MDMA_Init:0000000000000000 $t
     /tmp/ccbSGc9b.s:145    .text.MDMA_Init:0000000000000000 MDMA_Init
     /tmp/ccbSGc9b.s:286    .text.HAL_MDMA_Init:0000000000000000 $t
     /tmp/ccbSGc9b.s:293    .text.HAL_MDMA_Init:0000000000000000 HAL_MDMA_Init
     /tmp/ccbSGc9b.s:378    .text.HAL_MDMA_DeInit:0000000000000000 $t
     /tmp/ccbSGc9b.s:385    .text.HAL_MDMA_DeInit:0000000000000000 HAL_MDMA_DeInit
     /tmp/ccbSGc9b.s:477    .text.HAL_MDMA_ConfigPostRequestMask:0000000000000000 $t
     /tmp/ccbSGc9b.s:484    .text.HAL_MDMA_ConfigPostRequestMask:0000000000000000 HAL_MDMA_ConfigPostRequestMask
     /tmp/ccbSGc9b.s:590    .text.HAL_MDMA_RegisterCallback:0000000000000000 $t
     /tmp/ccbSGc9b.s:597    .text.HAL_MDMA_RegisterCallback:0000000000000000 HAL_MDMA_RegisterCallback
     /tmp/ccbSGc9b.s:638    .text.HAL_MDMA_RegisterCallback:000000000000002e $d
     /tmp/ccbSGc9b.s:644    .text.HAL_MDMA_RegisterCallback:0000000000000034 $t
     /tmp/ccbSGc9b.s:706    .text.HAL_MDMA_UnRegisterCallback:0000000000000000 $t
     /tmp/ccbSGc9b.s:713    .text.HAL_MDMA_UnRegisterCallback:0000000000000000 HAL_MDMA_UnRegisterCallback
     /tmp/ccbSGc9b.s:753    .text.HAL_MDMA_UnRegisterCallback:0000000000000030 $d
     /tmp/ccbSGc9b.s:849    .text.HAL_MDMA_LinkedList_CreateNode:0000000000000000 $t
     /tmp/ccbSGc9b.s:856    .text.HAL_MDMA_LinkedList_CreateNode:0000000000000000 HAL_MDMA_LinkedList_CreateNode
     /tmp/ccbSGc9b.s:1069   .text.HAL_MDMA_LinkedList_AddNode:0000000000000000 $t
     /tmp/ccbSGc9b.s:1076   .text.HAL_MDMA_LinkedList_AddNode:0000000000000000 HAL_MDMA_LinkedList_AddNode
     /tmp/ccbSGc9b.s:1310   .text.HAL_MDMA_LinkedList_RemoveNode:0000000000000000 $t
     /tmp/ccbSGc9b.s:1317   .text.HAL_MDMA_LinkedList_RemoveNode:0000000000000000 HAL_MDMA_LinkedList_RemoveNode
     /tmp/ccbSGc9b.s:1531   .text.HAL_MDMA_LinkedList_EnableCircularMode:0000000000000000 $t
     /tmp/ccbSGc9b.s:1538   .text.HAL_MDMA_LinkedList_EnableCircularMode:0000000000000000 HAL_MDMA_LinkedList_EnableCircularMode
     /tmp/ccbSGc9b.s:1624   .text.HAL_MDMA_LinkedList_DisableCircularMode:0000000000000000 $t
     /tmp/ccbSGc9b.s:1631   .text.HAL_MDMA_LinkedList_DisableCircularMode:0000000000000000 HAL_MDMA_LinkedList_DisableCircularMode
     /tmp/ccbSGc9b.s:1718   .text.HAL_MDMA_Start:0000000000000000 $t
     /tmp/ccbSGc9b.s:1725   .text.HAL_MDMA_Start:0000000000000000 HAL_MDMA_Start
     /tmp/ccbSGc9b.s:1841   .text.HAL_MDMA_Start_IT:0000000000000000 $t
     /tmp/ccbSGc9b.s:1848   .text.HAL_MDMA_Start_IT:0000000000000000 HAL_MDMA_Start_IT
     /tmp/ccbSGc9b.s:1996   .text.HAL_MDMA_Abort:0000000000000000 $t
     /tmp/ccbSGc9b.s:2003   .text.HAL_MDMA_Abort:0000000000000000 HAL_MDMA_Abort
     /tmp/ccbSGc9b.s:2102   .text.HAL_MDMA_Abort_IT:0000000000000000 $t
     /tmp/ccbSGc9b.s:2109   .text.HAL_MDMA_Abort_IT:0000000000000000 HAL_MDMA_Abort_IT
     /tmp/ccbSGc9b.s:2156   .text.HAL_MDMA_PollForTransfer:0000000000000000 $t
     /tmp/ccbSGc9b.s:2163   .text.HAL_MDMA_PollForTransfer:0000000000000000 HAL_MDMA_PollForTransfer
     /tmp/ccbSGc9b.s:2408   .text.HAL_MDMA_GenerateSWRequest:0000000000000000 $t
     /tmp/ccbSGc9b.s:2415   .text.HAL_MDMA_GenerateSWRequest:0000000000000000 HAL_MDMA_GenerateSWRequest
     /tmp/ccbSGc9b.s:2476   .text.HAL_MDMA_IRQHandler:0000000000000000 $t
     /tmp/ccbSGc9b.s:2483   .text.HAL_MDMA_IRQHandler:0000000000000000 HAL_MDMA_IRQHandler
     /tmp/ccbSGc9b.s:2768   .text.HAL_MDMA_IRQHandler:00000000000001a4 $d
     /tmp/ccbSGc9b.s:2775   .text.HAL_MDMA_GetState:0000000000000000 $t
     /tmp/ccbSGc9b.s:2782   .text.HAL_MDMA_GetState:0000000000000000 HAL_MDMA_GetState
     /tmp/ccbSGc9b.s:2799   .text.HAL_MDMA_GetError:0000000000000000 $t
     /tmp/ccbSGc9b.s:2806   .text.HAL_MDMA_GetError:0000000000000000 HAL_MDMA_GetError
                     .debug_frame:0000000000000010 $d
     /tmp/ccbSGc9b.s:760    .text.HAL_MDMA_UnRegisterCallback:0000000000000037 $d
     /tmp/ccbSGc9b.s:760    .text.HAL_MDMA_UnRegisterCallback:0000000000000038 $t

UNDEFINED SYMBOLS
HAL_GetTick
SystemCoreClock
