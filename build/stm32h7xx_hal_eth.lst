ARM GAS  /tmp/cctf834y.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_eth.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.ETH_SetMACConfig,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	ETH_SetMACConfig:
  24              	.LFB185:
  25              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @file    stm32h7xx_hal_eth.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief   ETH HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          functionalities of the Ethernet (ETH) peripheral:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *           + Initialization and deinitialization functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *           + IO operation functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *           + Peripheral Control functions
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   @verbatim
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ==============================================================================
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                     ##### How to use this driver #####
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ==============================================================================
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****      [..]
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****      The ETH HAL driver can be used as follows:
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       (#)Declare a ETH_HandleTypeDef handle structure, for example:
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****          ETH_HandleTypeDef  heth;
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       (#)Fill parameters of Init structure in heth handle
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       (#)Call HAL_ETH_Init() API to initialize the Ethernet peripheral (MAC, DMA, ...)
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       (#)Initialize the ETH low level resources through the HAL_ETH_MspInit() API:
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           (##) Enable the Ethernet interface clock using
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                 (+++)  __HAL_RCC_ETH1MAC_CLK_ENABLE()
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                 (+++)  __HAL_RCC_ETH1TX_CLK_ENABLE()
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                 (+++)  __HAL_RCC_ETH1RX_CLK_ENABLE()
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           (##) Initialize the related GPIO clocks
ARM GAS  /tmp/cctf834y.s 			page 2


  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           (##) Configure Ethernet pinout
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           (##) Configure Ethernet NVIC interrupt (in Interrupt mode)
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       (#) Ethernet data reception is asynchronous, so call the following API
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           to start the listening mode:
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           (##) HAL_ETH_Start():
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                This API starts the MAC and DMA transmission and reception process,
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                without enabling end of transfer interrupts, in this mode user
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                has to poll for data availability by calling HAL_ETH_IsRxDataAvailable()
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           (##) HAL_ETH_Start_IT():
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                This API starts the MAC and DMA transmission and reception process,
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                end of transfer interrupts are enabled in this mode,
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                HAL_ETH_RxCpltCallback() will be executed when an Ethernet packet is received
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       (#) When data is received (HAL_ETH_IsRxDataAvailable() returns 1 or Rx interrupt
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           occurred), user can call the following APIs to get received data:
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           (##) HAL_ETH_GetRxDataBuffer(): Get buffer address of received frame
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           (##) HAL_ETH_GetRxDataLength(): Get received frame length
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           (##) HAL_ETH_GetRxDataInfo(): Get received frame additional info,
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                please refer to ETH_RxPacketInfo typedef structure
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       (#) For transmission path, two APIs are available:
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****          (##) HAL_ETH_Transmit(): Transmit an ETH frame in blocking mode
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****          (##) HAL_ETH_Transmit_IT(): Transmit an ETH frame in interrupt mode,
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****               HAL_ETH_TxCpltCallback() will be executed when end of transfer occur
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       (#) Communication with an external PHY device:
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****          (##) HAL_ETH_ReadPHYRegister(): Read a register from an external PHY
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****          (##) HAL_ETH_WritePHYRegister(): Write data to an external RHY register
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       (#) Configure the Ethernet MAC after ETH peripheral initialization
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           (##) HAL_ETH_GetMACConfig(): Get MAC actual configuration into ETH_MACConfigTypeDef
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           (##) HAL_ETH_SetMACConfig(): Set MAC configuration based on ETH_MACConfigTypeDef
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       (#) Configure the Ethernet DMA after ETH peripheral initialization
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           (##) HAL_ETH_GetDMAConfig(): Get DMA actual configuration into ETH_DMAConfigTypeDef
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           (##) HAL_ETH_SetDMAConfig(): Set DMA configuration based on ETH_DMAConfigTypeDef
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       -@- The PTP protocol offload APIs are not supported in this driver.
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *** Callback registration ***
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   =============================================
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   The compilation define  USE_HAL_ETH_REGISTER_CALLBACKS when set to 1
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   allows the user to configure dynamically the driver callbacks.
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   Use Function @ref HAL_ETH_RegisterCallback() to register an interrupt callback.
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   Function @ref HAL_ETH_RegisterCallback() allows to register following callbacks:
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) TxCpltCallback   : Tx Complete Callback.
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) RxCpltCallback   : Rx Complete Callback.
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) DMAErrorCallback : DMA Error Callback.
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) MACErrorCallback : MAC Error Callback.
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) PMTCallback      : Power Management Callback
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) EEECallback      : EEE Callback.
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) WakeUpCallback   : Wake UP Callback
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) MspInitCallback  : MspInit Callback.
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) MspDeInitCallback: MspDeInit Callback.
ARM GAS  /tmp/cctf834y.s 			page 3


  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   and a pointer to the user callback function.
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   Use function @ref HAL_ETH_UnRegisterCallback() to reset a callback to the default
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   weak function.
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   @ref HAL_ETH_UnRegisterCallback takes as parameters the HAL peripheral handle,
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   and the Callback ID.
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   This function allows to reset following callbacks:
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) TxCpltCallback   : Tx Complete Callback.
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) RxCpltCallback   : Rx Complete Callback.
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) DMAErrorCallback : DMA Error Callback.
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) MACErrorCallback : MAC Error Callback.
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) PMTCallback      : Power Management Callback
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) EEECallback      : EEE Callback.
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) WakeUpCallback   : Wake UP Callback
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) MspInitCallback  : MspInit Callback.
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     (+) MspDeInitCallback: MspDeInit Callback.
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   By default, after the HAL_ETH_Init and when the state is HAL_ETH_STATE_RESET
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   all callbacks are set to the corresponding weak functions:
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   examples @ref HAL_ETH_TxCpltCallback(), @ref HAL_ETH_RxCpltCallback().
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   Exception done for MspInit and MspDeInit functions that are
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   reset to the legacy weak function in the HAL_ETH_Init/ @ref HAL_ETH_DeInit only when
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   these callbacks are null (not registered beforehand).
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if not, MspInit or MspDeInit are not null, the HAL_ETH_Init/ @ref HAL_ETH_DeInit
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   Callbacks can be registered/unregistered in HAL_ETH_STATE_READY state only.
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   in HAL_ETH_STATE_READY or HAL_ETH_STATE_RESET state,
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   In that case first register the MspInit/MspDeInit user callbacks
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   using @ref HAL_ETH_RegisterCallback() before calling @ref HAL_ETH_DeInit
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   or HAL_ETH_Init function.
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   When The compilation define USE_HAL_ETH_REGISTER_CALLBACKS is set to 0 or
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   not defined, the callback registration feature is not available and all callbacks
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   are set to the corresponding weak functions.
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   @endverbatim
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ******************************************************************************
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @attention
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * All rights reserved.</center></h2>
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * the "License"; You may not use this file except in compliance with the
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * License. You may obtain a copy of the License at:
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *                        opensource.org/licenses/BSD-3-Clause
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ******************************************************************************
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /* Includes ------------------------------------------------------------------*/
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #include "stm32h7xx_hal.h"
ARM GAS  /tmp/cctf834y.s 			page 4


 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /** @addtogroup STM32H7xx_HAL_Driver
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @{
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /** @defgroup ETH ETH
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief ETH HAL module driver
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @{
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #ifdef HAL_ETH_MODULE_ENABLED
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /* Private typedef -----------------------------------------------------------*/
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /* Private define ------------------------------------------------------------*/
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /** @addtogroup ETH_Private_Constants ETH Private Constants
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @{
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_MACCR_MASK       ((uint32_t)0xFFFB7F7CU)
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_MACECR_MASK      ((uint32_t)0x3F077FFFU)
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_MACPFR_MASK      ((uint32_t)0x800007FFU)
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_MACWTR_MASK      ((uint32_t)0x0000010FU)
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_MACTFCR_MASK     ((uint32_t)0xFFFF00F2U)
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_MACRFCR_MASK     ((uint32_t)0x00000003U)
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_MTLTQOMR_MASK    ((uint32_t)0x00000072U)
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_MTLRQOMR_MASK    ((uint32_t)0x0000007BU)
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_DMAMR_MASK       ((uint32_t)0x00007802U)
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_DMASBMR_MASK     ((uint32_t)0x0000D001U)
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_DMACCR_MASK      ((uint32_t)0x00013FFFU)
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_DMACTCR_MASK     ((uint32_t)0x003F1010U)
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_DMACRCR_MASK     ((uint32_t)0x803F0000U)
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_MACPCSR_MASK     (ETH_MACPCSR_PWRDWN | ETH_MACPCSR_RWKPKTEN | \
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                               ETH_MACPCSR_MGKPKTEN | ETH_MACPCSR_GLBLUCAST | \
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                               ETH_MACPCSR_RWKPFE)
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /* Timeout values */
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_SWRESET_TIMEOUT                 ((uint32_t)500U)
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_MDIO_BUS_TIMEOUT                ((uint32_t)1000U)
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_DMARXNDESCWBF_ERRORS_MASK ((uint32_t)(ETH_DMARXNDESCWBF_DE | ETH_DMARXNDESCWBF_RE | \
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                                   ETH_DMARXNDESCWBF_OE | ETH_DMARXNDESCWBF_RWT |\
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                                   ETH_DMARXNDESCWBF_GP | ETH_DMARXNDESCWBF_CE))
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define ETH_MAC_US_TICK               ((uint32_t)1000000U)
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @}
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /* Private macros ------------------------------------------------------------*/
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /** @defgroup ETH_Private_Macros ETH Private Macros
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @{
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /* Helper macros for TX descriptor handling */
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define INCR_TX_DESC_INDEX(inx, offset) do {\
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 	(inx) += (offset);\
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           if ((inx) >= (uint32_t)ETH_TX_DESC_CNT){\
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****             (inx) = ((inx) - (uint32_t)ETH_TX_DESC_CNT);}\
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** } while (0)
ARM GAS  /tmp/cctf834y.s 			page 5


 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /* Helper macros for RX descriptor handling */
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #define INCR_RX_DESC_INDEX(inx, offset) do {\
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 	(inx) += (offset);\
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           if ((inx) >= (uint32_t)ETH_RX_DESC_CNT){\
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****             (inx) = ((inx) - (uint32_t)ETH_RX_DESC_CNT);}\
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** } while (0)
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @}
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /* Private function prototypes -----------------------------------------------*/
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /** @defgroup ETH_Private_Functions   ETH Private Functions
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @{
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** static void ETH_MAC_MDIO_ClkConfig(ETH_HandleTypeDef *heth);
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** static void ETH_SetMACConfig(ETH_HandleTypeDef *heth,  ETH_MACConfigTypeDef *macconf);
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** static void ETH_SetDMAConfig(ETH_HandleTypeDef *heth,  ETH_DMAConfigTypeDef *dmaconf);
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** static void ETH_MACDMAConfig(ETH_HandleTypeDef *heth);
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** static void ETH_DMATxDescListInit(ETH_HandleTypeDef *heth);
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** static void ETH_DMARxDescListInit(ETH_HandleTypeDef *heth);
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** static uint32_t ETH_Prepare_Tx_Descriptors(ETH_HandleTypeDef *heth, ETH_TxPacketConfig *pTxConfig, 
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** static void ETH_InitCallbacksToDefault(ETH_HandleTypeDef *heth);
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif /* USE_HAL_ETH_REGISTER_CALLBACKS */
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @}
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /* Exported functions ---------------------------------------------------------*/
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions ETH Exported Functions
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @{
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions_Group1 Initialization and deinitialization functions
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *  @brief    Initialization and Configuration functions
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** @verbatim
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** ===============================================================================
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****             ##### Initialization and Configuration functions #####
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****  ===============================================================================
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           deinitialize the ETH peripheral:
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       (+) User must Implement HAL_ETH_MspInit() function in which he configures
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           all related peripherals resources (CLOCK, GPIO and NVIC ).
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       (+) Call the function HAL_ETH_Init() to configure the selected device with
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           the selected configuration:
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         (++) MAC address
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         (++) Media interface (MII or RMII)
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         (++) Rx DMA Descriptors Tab
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         (++) Tx DMA Descriptors Tab
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         (++) Length of Rx Buffers
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       (+) Call the function HAL_ETH_DescAssignMemory() to assign data buffers
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           for each Rx DMA Descriptor
ARM GAS  /tmp/cctf834y.s 			page 6


 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       (+) Call the function HAL_ETH_DeInit() to restore the default configuration
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           of the selected ETH peripheral.
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** @endverbatim
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @{
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Initialize the Ethernet peripheral registers.
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_Init(ETH_HandleTypeDef *heth)
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t tickstart;
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(heth == NULL)
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(heth->gState == HAL_ETH_STATE_RESET)
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Allocate lock resource and initialize it */
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->Lock = HAL_UNLOCKED;
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     ETH_InitCallbacksToDefault(heth);
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(heth->MspInitCallback == NULL)
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->MspInitCallback = HAL_ETH_MspInit;
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Init the low level hardware */
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->MspInitCallback(heth);
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #else
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Check the ETH peripheral state */
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(heth->gState == HAL_ETH_STATE_RESET)
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC. */
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     HAL_ETH_MspInit(heth);
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif /* (USE_HAL_ETH_REGISTER_CALLBACKS) */
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   heth->gState = HAL_ETH_STATE_BUSY;
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(heth->Init.MediaInterface == HAL_ETH_MII_MODE)
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
ARM GAS  /tmp/cctf834y.s 			page 7


 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     HAL_SYSCFG_ETHInterfaceSelect(SYSCFG_ETH_MII);
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     HAL_SYSCFG_ETHInterfaceSelect(SYSCFG_ETH_RMII);
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Ethernet Software reset */
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set the SWR bit: resets all MAC subsystem internal registers and logic */
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* After reset all the registers holds their respective reset values */
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   SET_BIT(heth->Instance->DMAMR, ETH_DMAMR_SWR);
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Get tick */
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   tickstart = HAL_GetTick();
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Wait for software reset */
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   while (READ_BIT(heth->Instance->DMAMR, ETH_DMAMR_SWR) > 0U)
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(((HAL_GetTick() - tickstart ) > ETH_SWRESET_TIMEOUT))
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Set Error Code */
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->ErrorCode = HAL_ETH_ERROR_TIMEOUT;
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Set State as Error */
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->gState = HAL_ETH_STATE_ERROR;
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Return Error */
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       return HAL_ERROR;
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*------------------ MDIO CSR Clock Range Configuration --------------------*/
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_MAC_MDIO_ClkConfig(heth);
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*------------------ MAC LPI 1US Tic Counter Configuration --------------------*/
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(heth->Instance->MAC1USTCR, (((uint32_t)HAL_RCC_GetHCLKFreq() / ETH_MAC_US_TICK) - 1U));
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*------------------ MAC, MTL and DMA default Configuration ----------------*/
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_MACDMAConfig(heth);
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* SET DSL to 64 bit */
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(heth->Instance->DMACCR, ETH_DMACCR_DSL, ETH_DMACCR_DSL_64BIT);
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set Receive Buffers Length (must be a multiple of 4) */
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if ((heth->Init.RxBuffLen % 0x4U) != 0x0U)
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set Error Code */
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->ErrorCode = HAL_ETH_ERROR_PARAM;
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set State as Error */
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->gState = HAL_ETH_STATE_ERROR;
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Return Error */
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     MODIFY_REG(heth->Instance->DMACRCR, ETH_DMACRCR_RBSZ, ((heth->Init.RxBuffLen) << 1));
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*------------------ DMA Tx Descriptors Configuration ----------------------*/
ARM GAS  /tmp/cctf834y.s 			page 8


 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_DMATxDescListInit(heth);
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*------------------ DMA Rx Descriptors Configuration ----------------------*/
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_DMARxDescListInit(heth);
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*--------------------- ETHERNET MAC Address Configuration ------------------*/
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set MAC addr bits 32 to 47 */
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   heth->Instance->MACA0HR = (((uint32_t)(heth->Init.MACAddr[5]) << 8) | (uint32_t)heth->Init.MACAdd
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set MAC addr bits 0 to 31 */
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   heth->Instance->MACA0LR = (((uint32_t)(heth->Init.MACAddr[3]) << 24) | ((uint32_t)(heth->Init.MAC
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                              ((uint32_t)(heth->Init.MACAddr[1]) << 8) | (uint32_t)heth->Init.MACAdd
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   heth->ErrorCode = HAL_ETH_ERROR_NONE;
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   heth->gState = HAL_ETH_STATE_READY;
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   heth->RxState = HAL_ETH_STATE_READY;
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return HAL_OK;
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  DeInitializes the ETH peripheral.
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_DeInit(ETH_HandleTypeDef *heth)
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   heth->gState = HAL_ETH_STATE_BUSY;
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(heth->MspDeInitCallback == NULL)
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->MspDeInitCallback = HAL_ETH_MspDeInit;
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* DeInit the low level hardware */
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   heth->MspDeInitCallback(heth);
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #else
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* De-Init the low level hardware : GPIO, CLOCK, NVIC. */
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   HAL_ETH_MspDeInit(heth);
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif /* (USE_HAL_ETH_REGISTER_CALLBACKS) */
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set ETH HAL state to Disabled */
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   heth->gState= HAL_ETH_STATE_RESET;
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Return function status */
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return HAL_OK;
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Initializes the ETH MSP.
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval None
ARM GAS  /tmp/cctf834y.s 			page 9


 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** __weak void HAL_ETH_MspInit(ETH_HandleTypeDef *heth)
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   UNUSED(heth);
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   the HAL_ETH_MspInit could be implemented in the user file
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  DeInitializes ETH MSP.
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval None
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** __weak void HAL_ETH_MspDeInit(ETH_HandleTypeDef *heth)
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   UNUSED(heth);
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   the HAL_ETH_MspDeInit could be implemented in the user file
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Register a User ETH Callback
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         To be used instead of the weak predefined callback
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param heth eth handle
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param CallbackID ID of the callback to be registered
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *        This parameter can be one of the following values:
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_TX_COMPLETE_CB_ID Tx Complete Callback ID
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_RX_COMPLETE_CB_ID Rx Complete Callback ID
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_DMA_ERROR_CB_ID   DMA Error Callback ID
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_MAC_ERROR_CB_ID   MAC Error Callback ID
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_PMT_CB_ID         Power Management Callback ID
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_EEE_CB_ID         EEE Callback ID
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_WAKEUP_CB_ID      Wake UP Callback ID
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_MSPINIT_CB_ID     MspInit callback ID
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_MSPDEINIT_CB_ID   MspDeInit callback ID
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param pCallback pointer to the Callback function
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval status
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_RegisterCallback(ETH_HandleTypeDef *heth, HAL_ETH_CallbackIDTypeDef Callb
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   HAL_StatusTypeDef status = HAL_OK;
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(pCallback == NULL)
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Update the error code */
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->ErrorCode |= HAL_ETH_ERROR_INVALID_CALLBACK;
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Process locked */
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   __HAL_LOCK(heth);
ARM GAS  /tmp/cctf834y.s 			page 10


 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(heth->gState == HAL_ETH_STATE_READY)
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     switch (CallbackID)
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_TX_COMPLETE_CB_ID :
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->TxCpltCallback = pCallback;
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_RX_COMPLETE_CB_ID :
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->RxCpltCallback = pCallback;
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_DMA_ERROR_CB_ID :
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->DMAErrorCallback = pCallback;
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_MAC_ERROR_CB_ID :
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->MACErrorCallback = pCallback;
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_PMT_CB_ID :
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->PMTCallback = pCallback;
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_EEE_CB_ID :
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->EEECallback = pCallback;
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_WAKEUP_CB_ID :
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->WakeUpCallback = pCallback;
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_MSPINIT_CB_ID :
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->MspInitCallback = pCallback;
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****    case HAL_ETH_MSPDEINIT_CB_ID :
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->MspDeInitCallback = pCallback;
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     default :
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Update the error code */
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->ErrorCode |= HAL_ETH_ERROR_INVALID_CALLBACK;
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Return error status */
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       status =  HAL_ERROR;
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else if(heth->gState == HAL_ETH_STATE_RESET)
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     switch (CallbackID)
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_MSPINIT_CB_ID :
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->MspInitCallback = pCallback;
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
ARM GAS  /tmp/cctf834y.s 			page 11


 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****    case HAL_ETH_MSPDEINIT_CB_ID :
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->MspDeInitCallback = pCallback;
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     default :
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Update the error code */
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->ErrorCode |= HAL_ETH_ERROR_INVALID_CALLBACK;
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****      /* Return error status */
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       status =  HAL_ERROR;
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Update the error code */
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->ErrorCode |= HAL_ETH_ERROR_INVALID_CALLBACK;
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Return error status */
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     status =  HAL_ERROR;
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Release Lock */
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return status;
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Unregister an ETH Callback
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         ETH callabck is redirected to the weak predefined callback
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param heth eth handle
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param CallbackID ID of the callback to be unregistered
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *        This parameter can be one of the following values:
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_TX_COMPLETE_CB_ID Tx Complete Callback ID
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_RX_COMPLETE_CB_ID Rx Complete Callback ID
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_DMA_ERROR_CB_ID   DMA Error Callback ID
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_MAC_ERROR_CB_ID   MAC Error Callback ID
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_PMT_CB_ID         Power Management Callback ID
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_EEE_CB_ID         EEE Callback ID
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_WAKEUP_CB_ID      Wake UP Callback ID
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_MSPINIT_CB_ID     MspInit callback ID
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          @arg @ref HAL_ETH_MSPDEINIT_CB_ID   MspDeInit callback ID
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval status
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_UnRegisterCallback(ETH_HandleTypeDef *heth, HAL_ETH_CallbackIDTypeDef Cal
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   HAL_StatusTypeDef status = HAL_OK;
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Process locked */
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   __HAL_LOCK(heth);
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(heth->gState == HAL_ETH_STATE_READY)
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     switch (CallbackID)
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_TX_COMPLETE_CB_ID :
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->TxCpltCallback = HAL_ETH_TxCpltCallback;
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
ARM GAS  /tmp/cctf834y.s 			page 12


 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_RX_COMPLETE_CB_ID :
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->RxCpltCallback = HAL_ETH_RxCpltCallback;
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_DMA_ERROR_CB_ID :
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->DMAErrorCallback = HAL_ETH_DMAErrorCallback;
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_MAC_ERROR_CB_ID :
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->MACErrorCallback = HAL_ETH_MACErrorCallback;
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_PMT_CB_ID :
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->PMTCallback = HAL_ETH_PMTCallback;
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_EEE_CB_ID :
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->EEECallback = HAL_ETH_EEECallback;
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_WAKEUP_CB_ID :
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->WakeUpCallback = HAL_ETH_WakeUpCallback;
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_MSPINIT_CB_ID :
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->MspInitCallback = HAL_ETH_MspInit;
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****    case HAL_ETH_MSPDEINIT_CB_ID :
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->MspDeInitCallback = HAL_ETH_MspDeInit;
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     default :
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Update the error code */
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->ErrorCode |= HAL_ETH_ERROR_INVALID_CALLBACK;
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****      /* Return error status */
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       status =  HAL_ERROR;
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else if(heth->gState == HAL_ETH_STATE_RESET)
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     switch (CallbackID)
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     case HAL_ETH_MSPINIT_CB_ID :
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->MspInitCallback = HAL_ETH_MspInit;
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****    case HAL_ETH_MSPDEINIT_CB_ID :
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->MspDeInitCallback = HAL_ETH_MspDeInit;
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     default :
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Update the error code */
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->ErrorCode |= HAL_ETH_ERROR_INVALID_CALLBACK;
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****      /* Return error status */
ARM GAS  /tmp/cctf834y.s 			page 13


 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       status =  HAL_ERROR;
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       break;
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Update the error code */
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->ErrorCode |= HAL_ETH_ERROR_INVALID_CALLBACK;
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Return error status */
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     status =  HAL_ERROR;
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Release Lock */
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   __HAL_UNLOCK(heth);
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return status;
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif /* USE_HAL_ETH_REGISTER_CALLBACKS */
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Assign memory buffers to a DMA Rx descriptor
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  Index : index of the DMA Rx descriptor
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *                  this parameter can be a value from 0x0 to (ETH_RX_DESC_CNT -1)
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  pBuffer1: address of buffer 1
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  pBuffer2: address of buffer 2 if available
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_DescAssignMemory(ETH_HandleTypeDef *heth, uint32_t Index, uint8_t *pBuffe
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_DMADescTypeDef *dmarxdesc = (ETH_DMADescTypeDef *)heth->RxDescList.RxDesc[Index];
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if((pBuffer1 == NULL) || (Index >= (uint32_t)ETH_RX_DESC_CNT))
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set Error Code */
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->ErrorCode = HAL_ETH_ERROR_PARAM;
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Return Error */
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* write buffer address to RDES0 */
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(dmarxdesc->DESC0, (uint32_t)pBuffer1);
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* store buffer address */
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(dmarxdesc->BackupAddr0, (uint32_t)pBuffer1);
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* set buffer address valid bit to RDES3 */
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   SET_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCRF_BUF1V);
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(pBuffer2 != NULL)
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* write buffer 2 address to RDES1 */
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmarxdesc->DESC2, (uint32_t)pBuffer2);
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****      /* store buffer 2 address */
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmarxdesc->BackupAddr1, (uint32_t)pBuffer2);
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* set buffer 2 address valid bit to RDES3 */
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCRF_BUF2V);
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
ARM GAS  /tmp/cctf834y.s 			page 14


 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* set OWN bit to RDES3 */
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   SET_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCRF_OWN);
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return HAL_OK;
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @}
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions_Group2 IO operation functions
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *  @brief ETH Transmit and Receive functions
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** @verbatim
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ==============================================================================
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                       ##### IO operation functions #####
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ==============================================================================
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   [..]
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     This subsection provides a set of functions allowing to manage the ETH
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     data transfer.
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** @endverbatim
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @{
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Enables Ethernet MAC and DMA reception and transmission
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_Start(ETH_HandleTypeDef *heth)
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(heth->gState == HAL_ETH_STATE_READY)
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->gState = HAL_ETH_STATE_BUSY;
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Enable the MAC transmission */
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(heth->Instance->MACCR, ETH_MACCR_TE);
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Enable the MAC reception */
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(heth->Instance->MACCR, ETH_MACCR_RE);
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set the Flush Transmit FIFO bit */
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(heth->Instance->MTLTQOMR, ETH_MTLTQOMR_FTQ);
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Enable the DMA transmission */
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(heth->Instance->DMACTCR, ETH_DMACTCR_ST);
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Enable the DMA reception */
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(heth->Instance->DMACRCR, ETH_DMACRCR_SR);
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Clear Tx and Rx process stopped flags */
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->Instance->DMACSR |= (ETH_DMACSR_TPS | ETH_DMACSR_RPS);
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->gState = HAL_ETH_STATE_READY;
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->RxState = HAL_ETH_STATE_BUSY_RX;
ARM GAS  /tmp/cctf834y.s 			page 15


 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_OK;
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Enables Ethernet MAC and DMA reception/transmission in Interrupt mode
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_Start_IT(ETH_HandleTypeDef *heth)
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t descindex = 0, counter;
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_DMADescTypeDef *dmarxdesc = (ETH_DMADescTypeDef *)heth->RxDescList.RxDesc[descindex];
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(heth->gState == HAL_ETH_STATE_READY)
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->gState = HAL_ETH_STATE_BUSY;
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set IOC bit to all Rx descriptors */
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     for(counter= 0; counter < (uint32_t)ETH_RX_DESC_CNT; counter++)
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       SET_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCRF_IOC);
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       INCR_RX_DESC_INDEX(descindex, 1U);
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       dmarxdesc = (ETH_DMADescTypeDef *)heth->RxDescList.RxDesc[descindex];
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* save IT mode to ETH Handle */
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->RxDescList.ItMode = 1U;
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Enable the MAC transmission */
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(heth->Instance->MACCR, ETH_MACCR_TE);
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Enable the MAC reception */
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(heth->Instance->MACCR, ETH_MACCR_RE);
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set the Flush Transmit FIFO bit */
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(heth->Instance->MTLTQOMR, ETH_MTLTQOMR_FTQ);
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Enable the DMA transmission */
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(heth->Instance->DMACTCR, ETH_DMACTCR_ST);
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Enable the DMA reception */
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(heth->Instance->DMACRCR, ETH_DMACRCR_SR);
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Clear Tx and Rx process stopped flags */
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->Instance->DMACSR |= (ETH_DMACSR_TPS | ETH_DMACSR_RPS);
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->gState = HAL_ETH_STATE_READY;
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->RxState = HAL_ETH_STATE_BUSY_RX;
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Enable ETH DMA interrupts:
ARM GAS  /tmp/cctf834y.s 			page 16


 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     - Tx complete interrupt
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     - Rx complete interrupt
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     - Fatal bus interrupt
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     */
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     __HAL_ETH_DMA_ENABLE_IT(heth, (ETH_DMACIER_NIE | ETH_DMACIER_RIE | ETH_DMACIER_TIE  |
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                    ETH_DMACIER_FBEE | ETH_DMACIER_AIE));
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_OK;
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Stop Ethernet MAC and DMA reception/transmission
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_Stop(ETH_HandleTypeDef *heth)
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(heth->gState != HAL_ETH_STATE_RESET)
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****      /* Set the ETH peripheral state to BUSY */
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->gState = HAL_ETH_STATE_BUSY;
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Disable the DMA transmission */
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     CLEAR_BIT(heth->Instance->DMACTCR, ETH_DMACTCR_ST);
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Disable the DMA reception */
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     CLEAR_BIT(heth->Instance->DMACRCR, ETH_DMACRCR_SR);
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Disable the MAC reception */
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     CLEAR_BIT( heth->Instance->MACCR, ETH_MACCR_RE);
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set the Flush Transmit FIFO bit */
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(heth->Instance->MTLTQOMR, ETH_MTLTQOMR_FTQ);
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Disable the MAC transmission */
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     CLEAR_BIT(heth->Instance->MACCR, ETH_MACCR_TE);
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->gState = HAL_ETH_STATE_READY;
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->RxState = HAL_ETH_STATE_READY;
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Return function status */
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_OK;
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Stop Ethernet MAC and DMA reception/transmission in Interrupt mode
ARM GAS  /tmp/cctf834y.s 			page 17


 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_Stop_IT(ETH_HandleTypeDef *heth)
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_DMADescTypeDef *dmarxdesc = (ETH_DMADescTypeDef *)heth->RxDescList.RxDesc[0];
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t index;
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(heth->gState != HAL_ETH_STATE_RESET)
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set the ETH peripheral state to BUSY */
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->gState = HAL_ETH_STATE_BUSY;
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Disable intrrupts:
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     - Tx complete interrupt
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     - Rx complete interrupt     */
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     __HAL_ETH_DMA_DISABLE_IT(heth, (ETH_DMA_NORMAL_IT | ETH_DMA_RX_IT | ETH_DMA_TX_IT));
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Disable the DMA transmission */
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     CLEAR_BIT(heth->Instance->DMACTCR, ETH_DMACTCR_ST);
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Disable the DMA reception */
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     CLEAR_BIT(heth->Instance->DMACRCR, ETH_DMACRCR_SR);
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Disable the MAC reception */
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     CLEAR_BIT( heth->Instance->MACCR, ETH_MACCR_RE);
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set the Flush Transmit FIFO bit */
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(heth->Instance->MTLTQOMR, ETH_MTLTQOMR_FTQ);
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Disable the MAC transmission */
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     CLEAR_BIT(heth->Instance->MACCR, ETH_MACCR_TE);
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Clear IOC bit to all Rx descriptors */
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     for(index = 0; index < (uint32_t)ETH_RX_DESC_CNT; index++)
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       CLEAR_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCRF_IOC);
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->RxDescList.ItMode = 0U;
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->gState = HAL_ETH_STATE_READY;
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->RxState = HAL_ETH_STATE_READY;
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Return function status */
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_OK;
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Sends an Ethernet Packet in polling mode.
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
ARM GAS  /tmp/cctf834y.s 			page 18


 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  pTxConfig: Hold the configuration of packet to be transmitted
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  Timeout: timeout value
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_Transmit(ETH_HandleTypeDef *heth, ETH_TxPacketConfig *pTxConfig, uint32_t
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t tickstart;
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   const ETH_DMADescTypeDef *dmatxdesc;
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(pTxConfig == NULL)
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->ErrorCode |= HAL_ETH_ERROR_PARAM;
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(heth->gState == HAL_ETH_STATE_READY)
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Config DMA Tx descriptor by Tx Packet info */
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if (ETH_Prepare_Tx_Descriptors(heth, pTxConfig, 0) != HAL_ETH_ERROR_NONE)
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Set the ETH error code */
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->ErrorCode |= HAL_ETH_ERROR_BUSY;
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       return HAL_ERROR;
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     dmatxdesc = (ETH_DMADescTypeDef *)(&heth->TxDescList)->TxDesc[heth->TxDescList.CurTxDesc];
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Incr current tx desc index */
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     INCR_TX_DESC_INDEX(heth->TxDescList.CurTxDesc, 1U);
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Start transmission */
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* issue a poll command to Tx DMA by writing address of next immediate free descriptor */
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(heth->Instance->DMACTDTPR, (uint32_t)(heth->TxDescList.TxDesc[heth->TxDescList.CurTxD
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     tickstart = HAL_GetTick();
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Wait for data to be transmitted or timeout occured */
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     while((dmatxdesc->DESC3 & ETH_DMATXNDESCWBF_OWN) != (uint32_t)RESET)
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       if((heth->Instance->DMACSR & ETH_DMACSR_FBE) != (uint32_t)RESET)
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         heth->ErrorCode |= HAL_ETH_ERROR_DMA;
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         heth->DMAErrorCode = heth->Instance->DMACSR;
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         /* Set ETH HAL State to Ready */
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         heth->gState = HAL_ETH_STATE_ERROR;
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         /* Return function status */
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         return HAL_ERROR;
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Check for the Timeout */
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       if(Timeout != HAL_MAX_DELAY)
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         if(((HAL_GetTick() - tickstart ) > Timeout) || (Timeout == 0U))
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         {
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           heth->ErrorCode |= HAL_ETH_ERROR_TIMEOUT;
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           heth->gState = HAL_ETH_STATE_READY;
ARM GAS  /tmp/cctf834y.s 			page 19


1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           return HAL_ERROR;
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         }
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set ETH HAL State to Ready */
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->gState = HAL_ETH_STATE_READY;
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Return function status */
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_OK;
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Sends an Ethernet Packet in interrupt mode.
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  pTxConfig: Hold the configuration of packet to be transmitted
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_Transmit_IT(ETH_HandleTypeDef *heth, ETH_TxPacketConfig *pTxConfig)
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(pTxConfig == NULL)
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(heth->gState == HAL_ETH_STATE_READY)
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Config DMA Tx descriptor by Tx Packet info */
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if (ETH_Prepare_Tx_Descriptors(heth, pTxConfig, 1) != HAL_ETH_ERROR_NONE)
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->ErrorCode = HAL_ETH_ERROR_BUSY;
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       return HAL_ERROR;
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Incr current tx desc index */
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     INCR_TX_DESC_INDEX(heth->TxDescList.CurTxDesc, 1U);
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Start transmission */
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* issue a poll command to Tx DMA by writing address of next immediate free descriptor */
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(heth->Instance->DMACTDTPR, (uint32_t)(heth->TxDescList.TxDesc[heth->TxDescList.CurTxD
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_OK;
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
ARM GAS  /tmp/cctf834y.s 			page 20


1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Checks for received Packets.
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval  1: A Packet is received
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          0: no Packet received
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** uint8_t HAL_ETH_IsRxDataAvailable(ETH_HandleTypeDef *heth)
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_RxDescListTypeDef *dmarxdesclist = &heth->RxDescList;
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t descidx = dmarxdesclist->CurRxDesc;
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_DMADescTypeDef *dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descidx];
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t descscancnt = 0;
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t appdesccnt = 0, firstappdescidx = 0;
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(dmarxdesclist->AppDescNbr != 0U)
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* data already received by not yet processed*/
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return 0;
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Check if descriptor is not owned by DMA */
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   while((READ_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCWBF_OWN) == (uint32_t)RESET) && (descscancnt < (u
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     descscancnt++;
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Check if last descriptor */
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(READ_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCWBF_LD) != (uint32_t)RESET)
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Increment the number of descriptors to be passed to the application */
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       appdesccnt += 1U;
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       if(appdesccnt == 1U)
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         WRITE_REG(firstappdescidx, descidx);
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Increment current rx descriptor index */
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       INCR_RX_DESC_INDEX(descidx, 1U);
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Check for Context descriptor */
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get current descriptor address */
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descidx];
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       if(READ_BIT(dmarxdesc->DESC3,  ETH_DMARXNDESCWBF_OWN)  == (uint32_t)RESET)
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         if(READ_BIT(dmarxdesc->DESC3,  ETH_DMARXNDESCWBF_CTXT)  != (uint32_t)RESET)
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         {
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           /* Increment the number of descriptors to be passed to the application */
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           dmarxdesclist->AppContextDesc = 1;
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           /* Increment current rx descriptor index */
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           INCR_RX_DESC_INDEX(descidx, 1U);
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         }
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Fill information to Rx descriptors list */
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       dmarxdesclist->CurRxDesc = descidx;
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       dmarxdesclist->FirstAppDesc = firstappdescidx;
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       dmarxdesclist->AppDescNbr = appdesccnt;
ARM GAS  /tmp/cctf834y.s 			page 21


1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Return function status */
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       return 1;
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Check if first descriptor */
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     else if(READ_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCWBF_FD) != (uint32_t)RESET)
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       WRITE_REG(firstappdescidx, descidx);
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Increment the number of descriptors to be passed to the application */
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       appdesccnt = 1U;
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Increment current rx descriptor index */
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       INCR_RX_DESC_INDEX(descidx, 1U);
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get current descriptor address */
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descidx];
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* It should be an intermediate descriptor */
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     else
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Increment the number of descriptors to be passed to the application */
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       appdesccnt += 1U;
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Increment current rx descriptor index */
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       INCR_RX_DESC_INDEX(descidx, 1U);
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get current descriptor address */
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descidx];
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Build Descriptors if an incomplete Packet is received */
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(appdesccnt > 0U)
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     descidx = firstappdescidx;
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descidx];
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     for(descscancnt = 0; descscancnt < appdesccnt; descscancnt++)
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       WRITE_REG(dmarxdesc->DESC0, dmarxdesc->BackupAddr0);
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       WRITE_REG(dmarxdesc->DESC3, ETH_DMARXNDESCRF_BUF1V);
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       if (READ_REG(dmarxdesc->BackupAddr1) != ((uint32_t)RESET))
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         WRITE_REG(dmarxdesc->DESC2, dmarxdesc->BackupAddr1);
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         SET_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCRF_BUF2V);
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       SET_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCRF_OWN);
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       if(dmarxdesclist->ItMode != ((uint32_t)RESET))
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         SET_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCRF_IOC);
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Increment rx descriptor index */
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       INCR_RX_DESC_INDEX(descidx, 1U);
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get descriptor address */
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descidx];
ARM GAS  /tmp/cctf834y.s 			page 22


1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Fill information to Rx descriptors list: No received Packet */
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmarxdesclist->AppDescNbr = 0U;
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return 0;
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  This function gets the buffer address of last received Packet.
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @note   Please insure to allocate the RxBuffer structure before calling this function
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         how to use example:
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *           HAL_ETH_GetRxDataLength(heth, &Length);
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *           BuffersNbr = (Length / heth->Init.RxBuffLen) + 1;
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *           RxBuffer = (ETH_BufferTypeDef *)malloc(BuffersNbr * sizeof(ETH_BufferTypeDef));
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *           HAL_ETH_GetRxDataBuffer(heth, RxBuffer);
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  RxBuffer: Pointer to a ETH_BufferTypeDef structure
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_GetRxDataBuffer(ETH_HandleTypeDef *heth, ETH_BufferTypeDef *RxBuffer)
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_RxDescListTypeDef *dmarxdesclist = &heth->RxDescList;
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t descidx = dmarxdesclist->FirstAppDesc;
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t index, accumulatedlen = 0, lastdesclen;
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   __IO const ETH_DMADescTypeDef *dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descidx];
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_BufferTypeDef *rxbuff = RxBuffer;
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(rxbuff == NULL)
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->ErrorCode = HAL_ETH_ERROR_PARAM;
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(dmarxdesclist->AppDescNbr == 0U)
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(HAL_ETH_IsRxDataAvailable(heth) == 0U)
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* No data to be transferred to the application */
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       return HAL_ERROR;
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     else
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       descidx = dmarxdesclist->FirstAppDesc;
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descidx];
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Get intermediate descriptors buffers: in case of the Packet is splitted into multi descriptors
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   for(index = 0; index < (dmarxdesclist->AppDescNbr - 1U); index++)
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Get Address and length of the first buffer address */
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     rxbuff->buffer = (uint8_t *) dmarxdesc->BackupAddr0;
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     rxbuff->len =  heth->Init.RxBuffLen;
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
ARM GAS  /tmp/cctf834y.s 			page 23


1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Check if the second buffer address of this descriptor is valid */
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(dmarxdesc->BackupAddr1 != 0U)
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Point to next buffer */
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       rxbuff = (struct __ETH_BufferTypeDef *)rxbuff->next;
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get Address and length of the second buffer address */
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       rxbuff->buffer = (uint8_t *) dmarxdesc->BackupAddr1;
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       rxbuff->len =  heth->Init.RxBuffLen;
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     else
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Nothing to do here */
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* get total length until this descriptor */
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     accumulatedlen = READ_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCWBF_PL);
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Increment to next descriptor */
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     INCR_RX_DESC_INDEX(descidx, 1U);
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descidx];
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Point to next buffer */
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     rxbuff = (struct __ETH_BufferTypeDef *)rxbuff->next;
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* last descriptor data length */
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   lastdesclen = READ_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCWBF_PL) - accumulatedlen;
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Get Address of the first buffer address */
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   rxbuff->buffer = (uint8_t *) dmarxdesc->BackupAddr0;
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* data is in only one buffer */
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(lastdesclen <= heth->Init.RxBuffLen)
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     rxbuff->len = lastdesclen;
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* data is in two buffers */
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else if(dmarxdesc->BackupAddr1 != 0U)
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Get the Length of the first buffer address */
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     rxbuff->len = heth->Init.RxBuffLen;
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Point to next buffer */
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     rxbuff = (struct __ETH_BufferTypeDef *)rxbuff->next;
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Get the Address the Length of the second buffer address */
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     rxbuff->buffer = (uint8_t *) dmarxdesc->BackupAddr1;
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     rxbuff->len =  lastdesclen - (heth->Init.RxBuffLen);
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else /* Buffer 2 not valid*/
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return HAL_OK;
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  This function gets the length of last received Packet.
ARM GAS  /tmp/cctf834y.s 			page 24


1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  Length: parameter to hold Rx packet length
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL Status
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_GetRxDataLength(ETH_HandleTypeDef *heth, uint32_t *Length)
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_RxDescListTypeDef *dmarxdesclist = &heth->RxDescList;
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t descidx = dmarxdesclist->FirstAppDesc;
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   __IO const ETH_DMADescTypeDef *dmarxdesc;
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(dmarxdesclist->AppDescNbr == 0U)
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(HAL_ETH_IsRxDataAvailable(heth) == 0U)
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* No data to be transferred to the application */
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       return HAL_ERROR;
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Get index of last descriptor */
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   INCR_RX_DESC_INDEX(descidx, (dmarxdesclist->AppDescNbr - 1U));
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Point to last descriptor */
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descidx];
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *Length = READ_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCWBF_PL);
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return HAL_OK;
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Get the Rx data info (Packet type, VLAN tag, Filters status, ...)
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  RxPacketInfo: parameter to hold info of received buffer
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_GetRxDataInfo(ETH_HandleTypeDef *heth, ETH_RxPacketInfo *RxPacketInfo)
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_RxDescListTypeDef *dmarxdesclist = &heth->RxDescList;
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t descidx = dmarxdesclist->FirstAppDesc;
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   __IO const ETH_DMADescTypeDef *dmarxdesc;
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(dmarxdesclist->AppDescNbr == 0U)
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(HAL_ETH_IsRxDataAvailable(heth) == 0U)
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* No data to be transferred to the application */
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       return HAL_ERROR;
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Get index of last descriptor */
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   INCR_RX_DESC_INDEX(descidx, ((dmarxdesclist->AppDescNbr) - 1U));
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Point to last descriptor */
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descidx];
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
ARM GAS  /tmp/cctf834y.s 			page 25


1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if((dmarxdesc->DESC3 & ETH_DMARXNDESCWBF_ES) != (uint32_t)RESET)
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     RxPacketInfo->ErrorCode = READ_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCWBF_ERRORS_MASK);
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(READ_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCWBF_RS0V) != 0U)
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       if(READ_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCWBF_LT) == ETH_DMARXNDESCWBF_LT_DVLAN)
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         RxPacketInfo->VlanTag = READ_BIT(dmarxdesc->DESC0, ETH_DMARXNDESCWBF_OVT);
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         RxPacketInfo->InnerVlanTag = READ_BIT(dmarxdesc->DESC0, ETH_DMARXNDESCWBF_IVT) >> 16;
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       else
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         RxPacketInfo->VlanTag = READ_BIT(dmarxdesc->DESC0, ETH_DMARXNDESCWBF_OVT);
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(READ_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCWBF_RS1V) != 0U)
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get Payload type */
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       RxPacketInfo->PayloadType =READ_BIT( dmarxdesc->DESC1, ETH_DMARXNDESCWBF_PT);
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get Header type */
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       RxPacketInfo->HeaderType = READ_BIT(dmarxdesc->DESC1, (ETH_DMARXNDESCWBF_IPV4 | ETH_DMARXNDES
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get Checksum status */
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       RxPacketInfo->Checksum = READ_BIT(dmarxdesc->DESC1, (ETH_DMARXNDESCWBF_IPCE | ETH_DMARXNDESCW
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(READ_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCWBF_RS2V) != 0U)
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       RxPacketInfo->MacFilterStatus = READ_BIT(dmarxdesc->DESC2, (ETH_DMARXNDESCWBF_HF | ETH_DMARXN
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       RxPacketInfo->L3FilterStatus = READ_BIT(dmarxdesc->DESC2,  (ETH_DMARXNDESCWBF_L3FM | ETH_DMAR
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       RxPacketInfo->L4FilterStatus = READ_BIT(dmarxdesc->DESC2, (ETH_DMARXNDESCWBF_L4FM | ETH_DMARX
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Get the segment count */
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(RxPacketInfo->SegmentCnt, dmarxdesclist->AppDescNbr);
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return HAL_OK;
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** * @brief  This function gives back Rx Desc of the last received Packet
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** *         to the DMA, so ETH DMA will be able to use these descriptors
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** *         to receive next Packets.
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** *         It should be called after processing the received Packet.
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** *         the configuration information for ETHERNET module
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** * @retval HAL status.
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** */
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_BuildRxDescriptors(ETH_HandleTypeDef *heth)
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_RxDescListTypeDef *dmarxdesclist = &heth->RxDescList;
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t descindex = dmarxdesclist->FirstAppDesc;
ARM GAS  /tmp/cctf834y.s 			page 26


1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   __IO ETH_DMADescTypeDef *dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descindex];
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t totalappdescnbr = dmarxdesclist->AppDescNbr;
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t descscan;
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(dmarxdesclist->AppDescNbr == 0U)
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* No Rx descriptors to build */
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(dmarxdesclist->AppContextDesc != 0U)
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* A context descriptor is available */
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     totalappdescnbr += 1U;
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   for(descscan =0; descscan < totalappdescnbr; descscan++)
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmarxdesc->DESC0, dmarxdesc->BackupAddr0);
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmarxdesc->DESC3, ETH_DMARXNDESCRF_BUF1V);
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if (READ_REG(dmarxdesc->BackupAddr1) != 0U)
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       WRITE_REG(dmarxdesc->DESC2, dmarxdesc->BackupAddr1);
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       SET_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCRF_BUF2V);
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCRF_OWN);
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(dmarxdesclist->ItMode != 0U)
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       SET_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCRF_IOC);
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(descscan < (dmarxdesclist->AppDescNbr - 1U))
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Increment rx descriptor index */
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       INCR_RX_DESC_INDEX(descindex, 1U);
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get descriptor address */
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descindex];
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set the Tail pointer address to the last rx descriptor hold by the app */
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(heth->Instance->DMACRDTPR, (uint32_t)dmarxdesc);
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* reset the Application desc number */
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(dmarxdesclist->AppDescNbr, 0);
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return HAL_OK;
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  This function handles ETH interrupt request.
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
ARM GAS  /tmp/cctf834y.s 			page 27


1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** void HAL_ETH_IRQHandler(ETH_HandleTypeDef *heth)
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Packet received */
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if (__HAL_ETH_DMA_GET_IT(heth, ETH_DMACSR_RI))
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(__HAL_ETH_DMA_GET_IT_SOURCE(heth, ETH_DMACIER_RIE))
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /*Call registered Receive complete callback*/
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->RxCpltCallback(heth);
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #else
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Receive complete callback */
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       HAL_ETH_RxCpltCallback(heth);
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif  /* USE_HAL_ETH_REGISTER_CALLBACKS */
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Clear the Eth DMA Rx IT pending bits */
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       __HAL_ETH_DMA_CLEAR_IT(heth, ETH_DMACSR_RI | ETH_DMACSR_NIS);
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Packet transmitted */
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if (__HAL_ETH_DMA_GET_IT(heth, ETH_DMACSR_TI))
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(__HAL_ETH_DMA_GET_IT_SOURCE(heth, ETH_DMACIER_TIE))
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         /*Call registered Transmit complete callback*/
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         heth->TxCpltCallback(heth);
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #else
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Transfer complete callback */
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       HAL_ETH_TxCpltCallback(heth);
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif  /* USE_HAL_ETH_REGISTER_CALLBACKS */
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Clear the Eth DMA Tx IT pending bits */
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       __HAL_ETH_DMA_CLEAR_IT(heth, ETH_DMACSR_TI | ETH_DMACSR_NIS);
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* ETH DMA Error */
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(__HAL_ETH_DMA_GET_IT(heth, ETH_DMACSR_AIS))
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(__HAL_ETH_DMA_GET_IT_SOURCE(heth, ETH_DMACIER_AIE))
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->ErrorCode |= HAL_ETH_ERROR_DMA;
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* if fatal bus error occured */
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       if (__HAL_ETH_DMA_GET_IT(heth, ETH_DMACSR_FBE))
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         /* Get DMA error code  */
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         heth->DMAErrorCode = READ_BIT(heth->Instance->DMACSR, (ETH_DMACSR_FBE | ETH_DMACSR_TPS | ET
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         /* Disable all interrupts */
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         __HAL_ETH_DMA_DISABLE_IT(heth, ETH_DMACIER_NIE | ETH_DMACIER_AIE);
ARM GAS  /tmp/cctf834y.s 			page 28


1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         /* Set HAL state to ERROR */
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         heth->gState = HAL_ETH_STATE_ERROR;
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       else
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         /* Get DMA error status  */
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****        heth->DMAErrorCode = READ_BIT(heth->Instance->DMACSR, (ETH_DMACSR_CDE | ETH_DMACSR_ETI | ETH
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                                        ETH_DMACSR_RBU | ETH_DMACSR_AIS));
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         /* Clear the interrupt summary flag */
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         __HAL_ETH_DMA_CLEAR_IT(heth, (ETH_DMACSR_CDE | ETH_DMACSR_ETI | ETH_DMACSR_RWT |
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                     ETH_DMACSR_RBU | ETH_DMACSR_AIS));
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Call registered DMA Error callback*/
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->DMAErrorCallback(heth);
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #else
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Ethernet DMA Error callback */
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       HAL_ETH_DMAErrorCallback(heth);
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif  /* USE_HAL_ETH_REGISTER_CALLBACKS */
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* ETH MAC Error IT */
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(__HAL_ETH_MAC_GET_IT(heth, (ETH_MACIER_RXSTSIE | ETH_MACIER_TXSTSIE)))
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Get MAC Rx Tx status and clear Status register pending bit */
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->MACErrorCode = READ_REG(heth->Instance->MACRXTXSR);
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->gState = HAL_ETH_STATE_ERROR;
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Call registered MAC Error callback*/
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->DMAErrorCallback(heth);
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #else
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Ethernet MAC Error callback */
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     HAL_ETH_MACErrorCallback(heth);
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif  /* USE_HAL_ETH_REGISTER_CALLBACKS */
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->MACErrorCode = (uint32_t)(0x0U);
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* ETH PMT IT */
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(__HAL_ETH_MAC_GET_IT(heth, ETH_MAC_PMT_IT))
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Get MAC Wake-up source and clear the status register pending bit */
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->MACWakeUpEvent = READ_BIT(heth->Instance->MACPCSR, (ETH_MACPCSR_RWKPRCVD | ETH_MACPCSR_MG
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Call registered PMT callback*/
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->PMTCallback(heth);
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #else
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Ethernet PMT callback */
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     HAL_ETH_PMTCallback(heth);
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif  /* USE_HAL_ETH_REGISTER_CALLBACKS */
ARM GAS  /tmp/cctf834y.s 			page 29


1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->MACWakeUpEvent = (uint32_t)(0x0U);
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* ETH EEE IT */
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(__HAL_ETH_MAC_GET_IT(heth, ETH_MAC_LPI_IT))
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Get MAC LPI interrupt source and clear the status register pending bit */
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->MACLPIEvent = READ_BIT(heth->Instance->MACPCSR, 0x0000000FU);
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Call registered EEE callback*/
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->EEECallback(heth);
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #else
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Ethernet EEE callback */
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     HAL_ETH_EEECallback(heth);
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif  /* USE_HAL_ETH_REGISTER_CALLBACKS */
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->MACLPIEvent = (uint32_t)(0x0U);
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #if defined(DUAL_CORE)
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if (HAL_GetCurrentCPUID() == CM7_CPUID)
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* check ETH WAKEUP exti flag */
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(__HAL_ETH_WAKEUP_EXTI_GET_FLAG(ETH_WAKEUP_EXTI_LINE) != (uint32_t)RESET)
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Clear ETH WAKEUP Exti pending bit */
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       __HAL_ETH_WAKEUP_EXTI_CLEAR_FLAG(ETH_WAKEUP_EXTI_LINE);
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Call registered WakeUp callback*/
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->WakeUpCallback(heth);
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #else
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* ETH WAKEUP callback */
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       HAL_ETH_WakeUpCallback(heth);
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* check ETH WAKEUP exti flag */
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(__HAL_ETH_WAKEUP_EXTID2_GET_FLAG(ETH_WAKEUP_EXTI_LINE) != (uint32_t)RESET)
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Clear ETH WAKEUP Exti pending bit */
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       __HAL_ETH_WAKEUP_EXTID2_CLEAR_FLAG(ETH_WAKEUP_EXTI_LINE);
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Call registered WakeUp callback*/
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->WakeUpCallback(heth);
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #else
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* ETH WAKEUP callback */
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       HAL_ETH_WakeUpCallback(heth);
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #else
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* check ETH WAKEUP exti flag */
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(__HAL_ETH_WAKEUP_EXTI_GET_FLAG(ETH_WAKEUP_EXTI_LINE) != (uint32_t)RESET)
ARM GAS  /tmp/cctf834y.s 			page 30


1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Clear ETH WAKEUP Exti pending bit */
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     __HAL_ETH_WAKEUP_EXTI_CLEAR_FLAG(ETH_WAKEUP_EXTI_LINE);
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Call registered WakeUp callback*/
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       heth->WakeUpCallback(heth);
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #else
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* ETH WAKEUP callback */
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       HAL_ETH_WakeUpCallback(heth);
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Tx Transfer completed callbacks.
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval None
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** __weak void HAL_ETH_TxCpltCallback(ETH_HandleTypeDef *heth)
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   UNUSED(heth);
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   the HAL_ETH_TxCpltCallback could be implemented in the user file
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Rx Transfer completed callbacks.
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval None
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** __weak void HAL_ETH_RxCpltCallback(ETH_HandleTypeDef *heth)
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   UNUSED(heth);
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   the HAL_ETH_RxCpltCallback could be implemented in the user file
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Ethernet DMA transfer error callbacks
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval None
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** __weak void HAL_ETH_DMAErrorCallback(ETH_HandleTypeDef *heth)
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   UNUSED(heth);
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   the HAL_ETH_DMAErrorCallback could be implemented in the user file
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
ARM GAS  /tmp/cctf834y.s 			page 31


1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** * @brief  Ethernet MAC transfer error callbacks
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval None
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** __weak void HAL_ETH_MACErrorCallback(ETH_HandleTypeDef *heth)
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   UNUSED(heth);
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   the HAL_ETH_MACErrorCallback could be implemented in the user file
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Ethernet Power Management module IT callback
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval None
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** __weak void HAL_ETH_PMTCallback(ETH_HandleTypeDef *heth)
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   UNUSED(heth);
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   the HAL_ETH_PMTCallback could be implemented in the user file
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Energy Efficient Etherent IT callback
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval None
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** __weak void HAL_ETH_EEECallback(ETH_HandleTypeDef *heth)
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   UNUSED(heth);
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   the HAL_ETH_EEECallback could be implemented in the user file
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  ETH WAKEUP interrupt callback
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval None
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** __weak void HAL_ETH_WakeUpCallback(ETH_HandleTypeDef *heth)
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   UNUSED(heth);
ARM GAS  /tmp/cctf834y.s 			page 32


1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****             the HAL_ETH_WakeUpCallback could be implemented in the user file
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****    */
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Read a PHY register
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  PHYAddr: PHY port address, must be a value from 0 to 31
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  PHYReg: PHY register address, must be a value from 0 to 31
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param pRegValue: parameter to hold read value
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_ReadPHYRegister(ETH_HandleTypeDef *heth, uint32_t PHYAddr, uint32_t PHYRe
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t tmpreg, tickstart;
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Check for the Busy flag */
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(READ_BIT(heth->Instance->MACMDIOAR, ETH_MACMDIOAR_MB) != 0U)
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Get the  MACMDIOAR value */
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(tmpreg, heth->Instance->MACMDIOAR);
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prepare the MDIO Address Register value
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****      - Set the PHY device address
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****      - Set the PHY register address
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****      - Set the read mode
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****      - Set the MII Busy bit */
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(tmpreg, ETH_MACMDIOAR_PA, (PHYAddr <<21));
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(tmpreg, ETH_MACMDIOAR_RDA, (PHYReg << 16));
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(tmpreg, ETH_MACMDIOAR_MOC, ETH_MACMDIOAR_MOC_RD);
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   SET_BIT(tmpreg, ETH_MACMDIOAR_MB);
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Write the result value into the MDII Address register */
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(heth->Instance->MACMDIOAR, tmpreg);
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   tickstart = HAL_GetTick();
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Wait for the Busy flag */
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   while(READ_BIT(heth->Instance->MACMDIOAR, ETH_MACMDIOAR_MB) > 0U)
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(((HAL_GetTick() - tickstart ) > ETH_MDIO_BUS_TIMEOUT))
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       return HAL_ERROR;
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Get MACMIIDR value */
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(*pRegValue, (uint16_t)heth->Instance->MACMDIODR);
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return HAL_OK;
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
ARM GAS  /tmp/cctf834y.s 			page 33


1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Writes to a PHY register.
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  PHYAddr: PHY port address, must be a value from 0 to 31
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  PHYReg: PHY register address, must be a value from 0 to 31
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  RegValue: the value to write
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_WritePHYRegister(ETH_HandleTypeDef *heth, uint32_t PHYAddr, uint32_t PHYR
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t tmpreg, tickstart;
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Check for the Busy flag */
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(READ_BIT(heth->Instance->MACMDIOAR, ETH_MACMDIOAR_MB) != 0U)
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Get the  MACMDIOAR value */
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(tmpreg, heth->Instance->MACMDIOAR);
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prepare the MDIO Address Register value
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****      - Set the PHY device address
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****      - Set the PHY register address
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****      - Set the write mode
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****      - Set the MII Busy bit */
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(tmpreg, ETH_MACMDIOAR_PA, (PHYAddr <<21));
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(tmpreg, ETH_MACMDIOAR_RDA, (PHYReg << 16));
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(tmpreg, ETH_MACMDIOAR_MOC, ETH_MACMDIOAR_MOC_WR);
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   SET_BIT(tmpreg, ETH_MACMDIOAR_MB);
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Give the value to the MII data register */
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(ETH->MACMDIODR, (uint16_t)RegValue);
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Write the result value into the MII Address register */
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(ETH->MACMDIOAR, tmpreg);
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   tickstart = HAL_GetTick();
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Wait for the Busy flag */
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   while(READ_BIT(heth->Instance->MACMDIOAR, ETH_MACMDIOAR_MB) > 0U)
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(((HAL_GetTick() - tickstart ) > ETH_MDIO_BUS_TIMEOUT))
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       return HAL_ERROR;
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return HAL_OK;
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
ARM GAS  /tmp/cctf834y.s 			page 34


1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @}
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions_Group3 Peripheral Control functions
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *  @brief   ETH control functions
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** @verbatim
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ==============================================================================
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                       ##### Peripheral Control functions #####
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ==============================================================================
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   [..]
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     This subsection provides a set of functions allowing to control the ETH
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     peripheral.
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** @endverbatim
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @{
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Get the configuration of the MAC and MTL subsystems.
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  macconf: pointer to a ETH_MACConfigTypeDef structure that will hold
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration of the MAC.
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL Status
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_GetMACConfig(ETH_HandleTypeDef *heth, ETH_MACConfigTypeDef *macconf)
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if (macconf == NULL)
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Get MAC parameters */
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->PreambleLength = READ_BIT(heth->Instance->MACCR, ETH_MACCR_PRELEN);
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->DeferralCheck = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_DC)>> 4) > 0U) ? ENABLE : DI
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->BackOffLimit = READ_BIT(heth->Instance->MACCR, ETH_MACCR_BL);
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->RetryTransmission = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_DR) >> 8) == 0U) ? ENABL
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->CarrierSenseDuringTransmit = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_DCRS) >> 9) > 0
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->ReceiveOwn = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_DO) >> 10) == 0U) ? ENABLE : DI
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->CarrierSenseBeforeTransmit = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_ECRSFD) >> 11) 
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->LoopbackMode = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_LM) >> 12) > 0U) ? ENABLE : D
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->DuplexMode = READ_BIT(heth->Instance->MACCR, ETH_MACCR_DM);
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->Speed = READ_BIT(heth->Instance->MACCR, ETH_MACCR_FES);
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->JumboPacket = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_JE) >> 16) > 0U) ? ENABLE : DI
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->Jabber = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_JD) >>17) == 0U) ? ENABLE : DISABLE
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->Watchdog = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_WD) >>19) == 0U) ? ENABLE : DISAB
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->AutomaticPadCRCStrip = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_ACS) >> 20) > 0U) ? E
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->CRCStripTypePacket = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_CST) >> 21) > 0U) ? ENA
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->Support2KPacket = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_S2KP) >> 22) > 0U) ? ENABL
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->GiantPacketSizeLimitControl = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_GPSLCE) >> 23)
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->InterPacketGapVal = READ_BIT(heth->Instance->MACCR, ETH_MACCR_IPG);
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->ChecksumOffload = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_IPC) >> 27) > 0U) ? ENABLE
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->SourceAddrControl = READ_BIT(heth->Instance->MACCR, ETH_MACCR_SARC);
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->GiantPacketSizeLimit = READ_BIT(heth->Instance->MACECR, ETH_MACECR_GPSL);
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->CRCCheckingRxPackets = ((READ_BIT(heth->Instance->MACECR, ETH_MACECR_DCRCC) >> 16) == 0U
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->SlowProtocolDetect = ((READ_BIT(heth->Instance->MACECR, ETH_MACECR_SPEN) >> 17) > 0U) ? 
ARM GAS  /tmp/cctf834y.s 			page 35


1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->UnicastSlowProtocolPacketDetect = ((READ_BIT(heth->Instance->MACECR, ETH_MACECR_USP) >> 
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->ExtendedInterPacketGap = ((READ_BIT(heth->Instance->MACECR, ETH_MACECR_EIPGEN) >> 24) > 
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->ExtendedInterPacketGapVal = READ_BIT(heth->Instance->MACECR, ETH_MACECR_EIPG) >> 25;
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->ProgrammableWatchdog = ((READ_BIT(heth->Instance->MACWTR, ETH_MACWTR_PWE) >> 8) > 0U) ? 
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->WatchdogTimeout = READ_BIT(heth->Instance->MACWTR, ETH_MACWTR_WTO);
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->TransmitFlowControl = ((READ_BIT(heth->Instance->MACTFCR, ETH_MACTFCR_TFE) >> 1) > 0U) ?
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->ZeroQuantaPause = ((READ_BIT(heth->Instance->MACTFCR, ETH_MACTFCR_DZPQ) >> 7) == 0U) ? E
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->PauseLowThreshold = READ_BIT(heth->Instance->MACTFCR, ETH_MACTFCR_PLT);
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->PauseTime = (READ_BIT(heth->Instance->MACTFCR, ETH_MACTFCR_PT) >> 16);
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->ReceiveFlowControl = (READ_BIT(heth->Instance->MACRFCR, ETH_MACRFCR_RFE) > 0U) ? ENABLE 
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->UnicastPausePacketDetect = ((READ_BIT(heth->Instance->MACRFCR, ETH_MACRFCR_UP) >> 1) > 0
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->TransmitQueueMode = READ_BIT(heth->Instance->MTLTQOMR, (ETH_MTLTQOMR_TTC | ETH_MTLTQOMR_
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->ReceiveQueueMode = READ_BIT(heth->Instance->MTLRQOMR, (ETH_MTLRQOMR_RTC | ETH_MTLRQOMR_R
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->ForwardRxUndersizedGoodPacket = ((READ_BIT(heth->Instance->MTLRQOMR, ETH_MTLRQOMR_FUP) >
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->ForwardRxErrorPacket = ((READ_BIT(heth->Instance->MTLRQOMR, ETH_MTLRQOMR_FEP) >> 4) > 0U
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->DropTCPIPChecksumErrorPacket = ((READ_BIT(heth->Instance->MTLRQOMR, ETH_MTLRQOMR_DISTCPE
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return HAL_OK;
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Get the configuration of the DMA.
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  dmaconf: pointer to a ETH_DMAConfigTypeDef structure that will hold
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration of the ETH DMA.
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL Status
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_GetDMAConfig(ETH_HandleTypeDef *heth, ETH_DMAConfigTypeDef *dmaconf)
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if (dmaconf == NULL)
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaconf->AddressAlignedBeats = ((READ_BIT(heth->Instance->DMASBMR, ETH_DMASBMR_AAL) >> 12) > 0U) 
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaconf->BurstMode = READ_BIT(heth->Instance->DMASBMR, ETH_DMASBMR_FB | ETH_DMASBMR_MB);
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaconf->RebuildINCRxBurst = ((READ_BIT(heth->Instance->DMASBMR, ETH_DMASBMR_RB)>> 15) > 0U) ? EN
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaconf->DMAArbitration = READ_BIT(heth->Instance->DMAMR, (ETH_DMAMR_TXPR |ETH_DMAMR_PR | ETH_DMA
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaconf->PBLx8Mode =  ((READ_BIT(heth->Instance->DMACCR, ETH_DMACCR_8PBL)>> 16) > 0U) ? ENABLE : 
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaconf->MaximumSegmentSize = READ_BIT(heth->Instance->DMACCR, ETH_DMACCR_MSS);
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaconf->FlushRxPacket = ((READ_BIT(heth->Instance->DMACRCR,  ETH_DMACRCR_RPF) >> 31) > 0U) ? ENA
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaconf->RxDMABurstLength = READ_BIT(heth->Instance->DMACRCR, ETH_DMACRCR_RPBL);
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaconf->SecondPacketOperate = ((READ_BIT(heth->Instance->DMACTCR, ETH_DMACTCR_OSP) >> 4) > 0U) ?
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaconf->TCPSegmentation = ((READ_BIT(heth->Instance->DMACTCR, ETH_DMACTCR_TSE) >> 12) > 0U) ? EN
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaconf->TxDMABurstLength = READ_BIT(heth->Instance->DMACTCR, ETH_DMACTCR_TPBL);
ARM GAS  /tmp/cctf834y.s 			page 36


1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return HAL_OK;
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Set the MAC configuration.
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  macconf: pointer to a ETH_MACConfigTypeDef structure that contains
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration of the MAC.
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_SetMACConfig(ETH_HandleTypeDef *heth,  ETH_MACConfigTypeDef *macconf)
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(macconf == NULL)
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(heth->RxState == HAL_ETH_STATE_READY)
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     ETH_SetMACConfig(heth, macconf);
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_OK;
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Set the ETH DMA configuration.
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  dmaconf: pointer to a ETH_DMAConfigTypeDef structure that will hold
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration of the ETH DMA.
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_SetDMAConfig(ETH_HandleTypeDef *heth,  ETH_DMAConfigTypeDef *dmaconf)
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(dmaconf == NULL)
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(heth->RxState == HAL_ETH_STATE_READY)
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     ETH_SetDMAConfig(heth, dmaconf);
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_OK;
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
ARM GAS  /tmp/cctf834y.s 			page 37


2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Configures the Clock range of ETH MDIO interface.
2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval None
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** void HAL_ETH_SetMDIOClockRange(ETH_HandleTypeDef *heth)
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t tmpreg, hclk;
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Get the ETHERNET MACMDIOAR value */
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACMDIOAR;
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 	/* Clear CSR Clock Range bits */
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   tmpreg &= ~ETH_MACMDIOAR_CR;
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 	/* Get hclk frequency value */
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   hclk = HAL_RCC_GetHCLKFreq();
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 	/* Set CR bits depending on hclk value */
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if((hclk >= 20000000U)&&(hclk < 35000000U))
2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* CSR Clock Range between 20-35 MHz */
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     tmpreg |= (uint32_t)ETH_MACMDIOAR_CR_DIV16;
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else if((hclk >= 35000000U)&&(hclk < 60000000U))
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* CSR Clock Range between 35-60 MHz */
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     tmpreg |= (uint32_t)ETH_MACMDIOAR_CR_DIV26;
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else if((hclk >= 60000000U)&&(hclk < 100000000U))
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* CSR Clock Range between 60-100 MHz */
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     tmpreg |= (uint32_t)ETH_MACMDIOAR_CR_DIV42;
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else if((hclk >= 100000000U)&&(hclk < 150000000U))
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* CSR Clock Range between 100-150 MHz */
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     tmpreg |= (uint32_t)ETH_MACMDIOAR_CR_DIV62;
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else /* (hclk >= 150000000)&&(hclk <= 200000000) */
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* CSR Clock Range between 150-200 MHz */
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     tmpreg |= (uint32_t)ETH_MACMDIOAR_CR_DIV102;
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Configure the CSR Clock Range */
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   (heth->Instance)->MACMDIOAR = (uint32_t)tmpreg;
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Set the ETH MAC (L2) Filters configuration.
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  pFilterConfig: pointer to a ETH_MACFilterConfigTypeDef structure that contains
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration of the ETH MAC filters.
ARM GAS  /tmp/cctf834y.s 			page 38


2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_SetMACFilterConfig(ETH_HandleTypeDef *heth, ETH_MACFilterConfigTypeDef *p
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t filterconfig;
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(pFilterConfig == NULL)
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   filterconfig = ((uint32_t)pFilterConfig->PromiscuousMode |
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                   ((uint32_t)pFilterConfig->HashUnicast << 1) |
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                     ((uint32_t)pFilterConfig->HashMulticast << 2)  |
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                       ((uint32_t)pFilterConfig->DestAddrInverseFiltering << 3) |
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                         ((uint32_t)pFilterConfig->PassAllMulticast << 4) |
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                           ((uint32_t)((pFilterConfig->BroadcastFilter == DISABLE) ? 1U : 0U) << 5) 
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                             ((uint32_t)pFilterConfig->SrcAddrInverseFiltering << 8) |
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                               ((uint32_t)pFilterConfig->SrcAddrFiltering << 9) |
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                 ((uint32_t)pFilterConfig->HachOrPerfectFilter << 10) |
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                   ((uint32_t)pFilterConfig->ReceiveAllMode << 31) |
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                     pFilterConfig->ControlPacketsFilter);
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(heth->Instance->MACPFR, ETH_MACPFR_MASK, filterconfig);
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return HAL_OK;
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Get the ETH MAC (L2) Filters configuration.
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  pFilterConfig: pointer to a ETH_MACFilterConfigTypeDef structure that will hold
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration of the ETH MAC filters.
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_GetMACFilterConfig(ETH_HandleTypeDef *heth, ETH_MACFilterConfigTypeDef *p
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(pFilterConfig == NULL)
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->PromiscuousMode = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_PR)) > 0U) ? ENABL
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->HashUnicast = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_HUC) >> 1) > 0U) ? ENA
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->HashMulticast = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_HMC) >> 2) > 0U) ? E
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->DestAddrInverseFiltering = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_DAIF) >> 
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->PassAllMulticast = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_PM) >> 4) > 0U) ?
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->BroadcastFilter = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_DBF) >> 5) == 0U) 
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->ControlPacketsFilter = READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_PCF);
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->SrcAddrInverseFiltering = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_SAIF) >> 8
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->SrcAddrFiltering = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_SAF) >> 9) > 0U) 
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->HachOrPerfectFilter = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_HPF) >> 10) > 
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->ReceiveAllMode = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_RA) >> 31) > 0U) ? 
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return HAL_OK;
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
ARM GAS  /tmp/cctf834y.s 			page 39


2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Set the source MAC Address to be matched.
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  AddrNbr: The MAC address to configure
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *          This parameter must be a value of the following:
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *            ETH_MAC_ADDRESS1
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *            ETH_MAC_ADDRESS2
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *            ETH_MAC_ADDRESS3
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  pMACAddr: Pointer to MAC address buffer data (6 bytes)
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_SetSourceMACAddrMatch(ETH_HandleTypeDef *heth, uint32_t AddrNbr, uint8_t 
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t macaddrhr, macaddrlr;
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(pMACAddr == NULL)
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
2163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Get mac addr high reg offset */
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macaddrhr = ((uint32_t)&(heth->Instance->MACA0HR) + AddrNbr);
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Get mac addr low reg offset */
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macaddrlr = ((uint32_t)&(heth->Instance->MACA0LR) + AddrNbr);
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set MAC addr bits 32 to 47 */
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   (*(__IO uint32_t *)macaddrhr) = (((uint32_t)(pMACAddr[5]) << 8) | (uint32_t)pMACAddr[4]);
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set MAC addr bits 0 to 31 */
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   (*(__IO uint32_t *)macaddrlr) = (((uint32_t)(pMACAddr[3]) << 24) | ((uint32_t)(pMACAddr[2]) << 16
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                    ((uint32_t)(pMACAddr[1]) << 8) | (uint32_t)pMACAddr[0]);
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****    /* Enable address and set source address bit */
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   (*(__IO uint32_t *)macaddrhr) |= (ETH_MACAHR_SA | ETH_MACAHR_AE);
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return HAL_OK;
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Set the ETH Hash Table Value.
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  pHashTable: pointer to a table of two 32 bit values, that contains
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the 64 bits of the hash table.
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_SetHashTable(ETH_HandleTypeDef *heth, uint32_t *pHashTable)
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(pHashTable == NULL)
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   heth->Instance->MACHT0R = pHashTable[0];
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   heth->Instance->MACHT1R = pHashTable[1];
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
ARM GAS  /tmp/cctf834y.s 			page 40


2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return HAL_OK;
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Set the VLAN Identifier for Rx packets
2205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  ComparisonBits: 12 or 16 bit comparison mode
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****             must be a value of @ref ETH_VLAN_Tag_Comparison
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  VLANIdentifier: VLAN Identifier value
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval None
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** void HAL_ETH_SetRxVLANIdentifier(ETH_HandleTypeDef *heth, uint32_t ComparisonBits, uint32_t VLANIde
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(ComparisonBits == ETH_VLANTAGCOMPARISON_16BIT)
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     MODIFY_REG(heth->Instance->MACVTR, ETH_MACVTR_VL , VLANIdentifier);
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     CLEAR_BIT(heth->Instance->MACVTR, ETH_MACVTR_ETV);
2218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     MODIFY_REG(heth->Instance->MACVTR, ETH_MACVTR_VL_VID , VLANIdentifier);
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(heth->Instance->MACVTR, ETH_MACVTR_ETV);
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Enters the Power down mode.
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  pPowerDownConfig: a pointer to ETH_PowerDownConfigTypeDef structure
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         that contains the Power Down configration
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval None.
2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** void HAL_ETH_EnterPowerDownMode(ETH_HandleTypeDef *heth, ETH_PowerDownConfigTypeDef *pPowerDownConf
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t powerdownconfig;
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   powerdownconfig = (((uint32_t)pPowerDownConfig->MagicPacket << 1) |
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                      ((uint32_t)pPowerDownConfig->WakeUpPacket << 2) |
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                        ((uint32_t)pPowerDownConfig->GlobalUnicast << 9) |
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                          ((uint32_t)pPowerDownConfig->WakeUpForward << 10) |
2242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                            ETH_MACPCSR_PWRDWN);
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Enable PMT interrupt */
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   __HAL_ETH_MAC_ENABLE_IT(heth, ETH_MACIER_PMTIE);
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(heth->Instance->MACPCSR, ETH_MACPCSR_MASK, powerdownconfig);
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Exits from the Power down mode.
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval None.
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** void HAL_ETH_ExitPowerDownMode(ETH_HandleTypeDef *heth)
ARM GAS  /tmp/cctf834y.s 			page 41


2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* clear wake up sources */
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   CLEAR_BIT(heth->Instance->MACPCSR, ETH_MACPCSR_RWKPKTEN | ETH_MACPCSR_MGKPKTEN | ETH_MACPCSR_GLBL
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(READ_BIT(heth->Instance->MACPCSR, ETH_MACPCSR_PWRDWN) != 0U)
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Exit power down mode */
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     CLEAR_BIT(heth->Instance->MACPCSR, ETH_MACPCSR_PWRDWN);
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Disable PMT interrupt */
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   __HAL_ETH_MAC_DISABLE_IT(heth, ETH_MACIER_PMTIE);
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Set the WakeUp filter.
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  pFilter: pointer to filter registers values
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  Count: number of filter registers, must be from 1 to 8.
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval None.
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_StatusTypeDef HAL_ETH_SetWakeUpFilter(ETH_HandleTypeDef *heth, uint32_t *pFilter, uint32_t Coun
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t regindex;
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(pFilter == NULL)
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Reset Filter Pointer */
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   SET_BIT(heth->Instance->MACPCSR, ETH_MACPCSR_RWKFILTRST);
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Wake up packet filter config */
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   for(regindex = 0; regindex < Count; regindex++)
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Write filter regs */
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(heth->Instance->MACRWKPFR, pFilter[regindex]);
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return HAL_OK;
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @}
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /** @defgroup ETH_Exported_Functions_Group4 Peripheral State and Errors functions
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *  @brief   ETH State and Errors functions
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** @verbatim
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ==============================================================================
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                  ##### Peripheral State and Errors functions #####
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ==============================================================================
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****  [..]
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****    This subsection provides a set of functions allowing to return the State of
ARM GAS  /tmp/cctf834y.s 			page 42


2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****    ETH communication process, return Peripheral Errors occurred during communication
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****    process
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** @endverbatim
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @{
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Returns the ETH state.
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL state
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** HAL_ETH_StateTypeDef HAL_ETH_GetState(ETH_HandleTypeDef *heth)
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   HAL_ETH_StateTypeDef ret;
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   HAL_ETH_StateTypeDef gstate = heth->gState;
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   HAL_ETH_StateTypeDef rxstate =heth->RxState;
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ret = gstate;
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ret |= rxstate;
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return ret;
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Returns the ETH error code
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval ETH Error Code
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** uint32_t HAL_ETH_GetError(ETH_HandleTypeDef *heth)
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return heth->ErrorCode;
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
2349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Returns the ETH DMA error code
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval ETH DMA Error Code
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** uint32_t HAL_ETH_GetDMAError(ETH_HandleTypeDef *heth)
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return heth->DMAErrorCode;
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Returns the ETH MAC error code
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval ETH MAC Error Code
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** uint32_t HAL_ETH_GetMACError(ETH_HandleTypeDef *heth)
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return heth->MACErrorCode;
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
ARM GAS  /tmp/cctf834y.s 			page 43


2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Returns the ETH MAC WakeUp event source
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval ETH MAC WakeUp event source
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** uint32_t HAL_ETH_GetMACWakeUpSource(ETH_HandleTypeDef *heth)
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return heth->MACWakeUpEvent;
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @}
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @}
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** static void ETH_SetMACConfig(ETH_HandleTypeDef *heth,  ETH_MACConfigTypeDef *macconf)
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
  26              		.loc 1 2392 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32 0000 30B4     		push	{r4, r5}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 5, -4
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t macregval;
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*------------------------ MACCR Configuration --------------------*/
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macregval =(macconf->InterPacketGapVal |
  37              		.loc 1 2396 0
  38 0002 8B68     		ldr	r3, [r1, #8]
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****               macconf->SourceAddrControl |
  39              		.loc 1 2397 0
  40 0004 0A68     		ldr	r2, [r1]
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****               macconf->SourceAddrControl |
  41              		.loc 1 2396 0
  42 0006 1343     		orrs	r3, r3, r2
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                 ((uint32_t)macconf->ChecksumOffload<< 27) |
  43              		.loc 1 2398 0
  44 0008 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****               macconf->SourceAddrControl |
  45              		.loc 1 2397 0
  46 000a 43EAC263 		orr	r3, r3, r2, lsl #27
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                   ((uint32_t)macconf->GiantPacketSizeLimitControl << 23) |
  47              		.loc 1 2399 0
  48 000e 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                 ((uint32_t)macconf->ChecksumOffload<< 27) |
  49              		.loc 1 2398 0
  50 0010 43EAC253 		orr	r3, r3, r2, lsl #23
ARM GAS  /tmp/cctf834y.s 			page 44


2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                     ((uint32_t)macconf->Support2KPacket  << 22) |
  51              		.loc 1 2400 0
  52 0014 4A7B     		ldrb	r2, [r1, #13]	@ zero_extendqisi2
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                   ((uint32_t)macconf->GiantPacketSizeLimitControl << 23) |
  53              		.loc 1 2399 0
  54 0016 43EA8253 		orr	r3, r3, r2, lsl #22
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                       ((uint32_t)macconf->CRCStripTypePacket << 21) |
  55              		.loc 1 2401 0
  56 001a 8A7B     		ldrb	r2, [r1, #14]	@ zero_extendqisi2
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                     ((uint32_t)macconf->Support2KPacket  << 22) |
  57              		.loc 1 2400 0
  58 001c 43EA4253 		orr	r3, r3, r2, lsl #21
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                         ((uint32_t)macconf->AutomaticPadCRCStrip << 20) |
  59              		.loc 1 2402 0
  60 0020 CA7B     		ldrb	r2, [r1, #15]	@ zero_extendqisi2
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                       ((uint32_t)macconf->CRCStripTypePacket << 21) |
  61              		.loc 1 2401 0
  62 0022 43EA0253 		orr	r3, r3, r2, lsl #20
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                           ((uint32_t)((macconf->Watchdog == DISABLE) ? 1U : 0U) << 19) |
  63              		.loc 1 2403 0
  64 0026 0A7C     		ldrb	r2, [r1, #16]	@ zero_extendqisi2
  65 0028 002A     		cmp	r2, #0
  66 002a 40F0B080 		bne	.L9
  67 002e 4FF40022 		mov	r2, #524288
  68              	.L2:
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                         ((uint32_t)macconf->AutomaticPadCRCStrip << 20) |
  69              		.loc 1 2402 0
  70 0032 1A43     		orrs	r2, r2, r3
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                             ((uint32_t)((macconf->Jabber == DISABLE) ? 1U : 0U) << 17) |
  71              		.loc 1 2404 0
  72 0034 4B7C     		ldrb	r3, [r1, #17]	@ zero_extendqisi2
  73 0036 002B     		cmp	r3, #0
  74 0038 40F0AB80 		bne	.L10
  75 003c 4FF40033 		mov	r3, #131072
  76              	.L3:
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                           ((uint32_t)((macconf->Watchdog == DISABLE) ? 1U : 0U) << 19) |
  77              		.loc 1 2403 0
  78 0040 1343     		orrs	r3, r3, r2
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                               ((uint32_t)macconf->JumboPacket << 16) |
  79              		.loc 1 2405 0
  80 0042 8A7C     		ldrb	r2, [r1, #18]	@ zero_extendqisi2
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                             ((uint32_t)((macconf->Jabber == DISABLE) ? 1U : 0U) << 17) |
  81              		.loc 1 2404 0
  82 0044 43EA0243 		orr	r3, r3, r2, lsl #16
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                 macconf->Speed |
  83              		.loc 1 2406 0
  84 0048 4A69     		ldr	r2, [r1, #20]
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                               ((uint32_t)macconf->JumboPacket << 16) |
  85              		.loc 1 2405 0
  86 004a 1343     		orrs	r3, r3, r2
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                   macconf->DuplexMode |
  87              		.loc 1 2407 0
  88 004c 8A69     		ldr	r2, [r1, #24]
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                 macconf->Speed |
  89              		.loc 1 2406 0
  90 004e 1343     		orrs	r3, r3, r2
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                     ((uint32_t)macconf->LoopbackMode << 12) |
ARM GAS  /tmp/cctf834y.s 			page 45


  91              		.loc 1 2408 0
  92 0050 0A7F     		ldrb	r2, [r1, #28]	@ zero_extendqisi2
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                   macconf->DuplexMode |
  93              		.loc 1 2407 0
  94 0052 43EA0233 		orr	r3, r3, r2, lsl #12
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                       ((uint32_t)macconf->CarrierSenseBeforeTransmit << 11)|
  95              		.loc 1 2409 0
  96 0056 4A7F     		ldrb	r2, [r1, #29]	@ zero_extendqisi2
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                     ((uint32_t)macconf->LoopbackMode << 12) |
  97              		.loc 1 2408 0
  98 0058 43EAC223 		orr	r3, r3, r2, lsl #11
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                         ((uint32_t)((macconf->ReceiveOwn == DISABLE) ? 1U : 0U) << 
  99              		.loc 1 2410 0
 100 005c 8A7F     		ldrb	r2, [r1, #30]	@ zero_extendqisi2
 101 005e 002A     		cmp	r2, #0
 102 0060 40F09980 		bne	.L11
 103 0064 4FF48062 		mov	r2, #1024
 104              	.L4:
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                       ((uint32_t)macconf->CarrierSenseBeforeTransmit << 11)|
 105              		.loc 1 2409 0
 106 0068 1343     		orrs	r3, r3, r2
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                           ((uint32_t)macconf->CarrierSenseDuringTransmit << 9)|
 107              		.loc 1 2411 0
 108 006a CA7F     		ldrb	r2, [r1, #31]	@ zero_extendqisi2
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                         ((uint32_t)((macconf->ReceiveOwn == DISABLE) ? 1U : 0U) << 
 109              		.loc 1 2410 0
 110 006c 43EA4222 		orr	r2, r3, r2, lsl #9
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                             ((uint32_t)((macconf->RetryTransmission == DISABLE) ? 1
 111              		.loc 1 2412 0
 112 0070 91F82030 		ldrb	r3, [r1, #32]	@ zero_extendqisi2
 113 0074 002B     		cmp	r3, #0
 114 0076 40F09080 		bne	.L12
 115 007a 4FF48073 		mov	r3, #256
 116              	.L5:
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                           ((uint32_t)macconf->CarrierSenseDuringTransmit << 9)|
 117              		.loc 1 2411 0
 118 007e 1343     		orrs	r3, r3, r2
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                               macconf->BackOffLimit |
 119              		.loc 1 2413 0
 120 0080 4A6A     		ldr	r2, [r1, #36]
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                             ((uint32_t)((macconf->RetryTransmission == DISABLE) ? 1
 121              		.loc 1 2412 0
 122 0082 1343     		orrs	r3, r3, r2
2414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                                 ((uint32_t)macconf->DeferralCheck << 4)|
 123              		.loc 1 2414 0
 124 0084 91F82820 		ldrb	r2, [r1, #40]	@ zero_extendqisi2
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                               macconf->BackOffLimit |
 125              		.loc 1 2413 0
 126 0088 43EA0213 		orr	r3, r3, r2, lsl #4
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                                   macconf->PreambleLength);
 127              		.loc 1 2415 0
 128 008c CA6A     		ldr	r2, [r1, #44]
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****               macconf->SourceAddrControl |
 129              		.loc 1 2396 0
 130 008e 1343     		orrs	r3, r3, r2
 131              	.LVL1:
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
ARM GAS  /tmp/cctf834y.s 			page 46


2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Write to MACCR */
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(heth->Instance->MACCR, ETH_MACCR_MASK, macregval);
 132              		.loc 1 2418 0
 133 0090 0468     		ldr	r4, [r0]
 134 0092 2268     		ldr	r2, [r4]
 135 0094 22F07F42 		bic	r2, r2, #-16777216
 136 0098 22F47B02 		bic	r2, r2, #16449536
 137 009c 22F4FE42 		bic	r2, r2, #32512
 138 00a0 22F07C02 		bic	r2, r2, #124
 139 00a4 1343     		orrs	r3, r3, r2
 140              	.LVL2:
 141 00a6 2360     		str	r3, [r4]
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*------------------------ MACECR Configuration --------------------*/
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macregval = ((macconf->ExtendedInterPacketGapVal << 25)|
 142              		.loc 1 2421 0
 143 00a8 CA6B     		ldr	r2, [r1, #60]
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                ((uint32_t)macconf->ExtendedInterPacketGap << 24)|
 144              		.loc 1 2422 0
 145 00aa 91F83830 		ldrb	r3, [r1, #56]	@ zero_extendqisi2
 146 00ae 1B06     		lsls	r3, r3, #24
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                ((uint32_t)macconf->ExtendedInterPacketGap << 24)|
 147              		.loc 1 2421 0
 148 00b0 43EA4263 		orr	r3, r3, r2, lsl #25
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                  ((uint32_t)macconf->UnicastSlowProtocolPacketDetect << 18)|
 149              		.loc 1 2423 0
 150 00b4 91F83020 		ldrb	r2, [r1, #48]	@ zero_extendqisi2
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                ((uint32_t)macconf->ExtendedInterPacketGap << 24)|
 151              		.loc 1 2422 0
 152 00b8 43EA8243 		orr	r3, r3, r2, lsl #18
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                    ((uint32_t)macconf->SlowProtocolDetect << 17)|
 153              		.loc 1 2424 0
 154 00bc 91F83120 		ldrb	r2, [r1, #49]	@ zero_extendqisi2
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                  ((uint32_t)macconf->UnicastSlowProtocolPacketDetect << 18)|
 155              		.loc 1 2423 0
 156 00c0 43EA4243 		orr	r3, r3, r2, lsl #17
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                      ((uint32_t)((macconf->CRCCheckingRxPackets == DISABLE) ? 1U : 0U)<< 16) |
 157              		.loc 1 2425 0
 158 00c4 91F83220 		ldrb	r2, [r1, #50]	@ zero_extendqisi2
 159 00c8 002A     		cmp	r2, #0
 160 00ca 68D1     		bne	.L13
 161 00cc 4FF48032 		mov	r2, #65536
 162              	.L6:
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                    ((uint32_t)macconf->SlowProtocolDetect << 17)|
 163              		.loc 1 2424 0
 164 00d0 1343     		orrs	r3, r3, r2
2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                        macconf->GiantPacketSizeLimit);
 165              		.loc 1 2426 0
 166 00d2 4A6B     		ldr	r2, [r1, #52]
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                ((uint32_t)macconf->ExtendedInterPacketGap << 24)|
 167              		.loc 1 2421 0
 168 00d4 1343     		orrs	r3, r3, r2
 169              	.LVL3:
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Write to MACECR */
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(heth->Instance->MACECR, ETH_MACECR_MASK, macregval);
 170              		.loc 1 2429 0
ARM GAS  /tmp/cctf834y.s 			page 47


 171 00d6 0468     		ldr	r4, [r0]
 172 00d8 6268     		ldr	r2, [r4, #4]
 173 00da 22F07C52 		bic	r2, r2, #1056964608
 174 00de 22F4EF22 		bic	r2, r2, #489472
 175 00e2 22F4FF62 		bic	r2, r2, #2040
 176 00e6 22F00702 		bic	r2, r2, #7
 177 00ea 1343     		orrs	r3, r3, r2
 178              	.LVL4:
 179 00ec 6360     		str	r3, [r4, #4]
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*------------------------ MACWTR Configuration --------------------*/
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macregval = (((uint32_t)macconf->ProgrammableWatchdog << 8) |
 180              		.loc 1 2432 0
 181 00ee 91F84020 		ldrb	r2, [r1, #64]	@ zero_extendqisi2
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                macconf->WatchdogTimeout);
 182              		.loc 1 2433 0
 183 00f2 4B6C     		ldr	r3, [r1, #68]
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                macconf->WatchdogTimeout);
 184              		.loc 1 2432 0
 185 00f4 43EA0223 		orr	r3, r3, r2, lsl #8
 186              	.LVL5:
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Write to MACWTR */
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(heth->Instance->MACWTR, ETH_MACWTR_MASK, macregval);
 187              		.loc 1 2436 0
 188 00f8 0468     		ldr	r4, [r0]
 189 00fa E568     		ldr	r5, [r4, #12]
 190 00fc 2B4A     		ldr	r2, .L18
 191 00fe 2A40     		ands	r2, r2, r5
 192 0100 1343     		orrs	r3, r3, r2
 193              	.LVL6:
 194 0102 E360     		str	r3, [r4, #12]
 195              	.LVL7:
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*------------------------ MACTFCR Configuration --------------------*/
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macregval = (((uint32_t)macconf->TransmitFlowControl << 1) |
 196              		.loc 1 2439 0
 197 0104 91F85420 		ldrb	r2, [r1, #84]	@ zero_extendqisi2
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                macconf->PauseLowThreshold |
 198              		.loc 1 2440 0
 199 0108 0B6D     		ldr	r3, [r1, #80]
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                macconf->PauseLowThreshold |
 200              		.loc 1 2439 0
 201 010a 43EA4202 		orr	r2, r3, r2, lsl #1
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                  ((uint32_t)((macconf->ZeroQuantaPause == DISABLE) ? 1U : 0U)<< 7) |
 202              		.loc 1 2441 0
 203 010e 91F84C30 		ldrb	r3, [r1, #76]	@ zero_extendqisi2
 204 0112 002B     		cmp	r3, #0
 205 0114 45D1     		bne	.L14
 206 0116 8023     		movs	r3, #128
 207              	.L7:
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                macconf->PauseLowThreshold |
 208              		.loc 1 2440 0
 209 0118 1343     		orrs	r3, r3, r2
2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                    (macconf->PauseTime << 16));
 210              		.loc 1 2442 0
 211 011a 8A6C     		ldr	r2, [r1, #72]
ARM GAS  /tmp/cctf834y.s 			page 48


2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                macconf->PauseLowThreshold |
 212              		.loc 1 2439 0
 213 011c 43EA0243 		orr	r3, r3, r2, lsl #16
 214              	.LVL8:
2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Write to MACTFCR */
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(heth->Instance->MACTFCR, ETH_MACTFCR_MASK, macregval);
 215              		.loc 1 2445 0
 216 0120 0468     		ldr	r4, [r0]
 217 0122 226F     		ldr	r2, [r4, #112]
 218 0124 22F0F202 		bic	r2, r2, #242
 219 0128 1204     		lsls	r2, r2, #16
 220 012a 120C     		lsrs	r2, r2, #16
 221 012c 1343     		orrs	r3, r3, r2
 222              	.LVL9:
 223 012e 2367     		str	r3, [r4, #112]
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*------------------------ MACRFCR Configuration --------------------*/
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macregval = ((uint32_t)macconf->ReceiveFlowControl |
 224              		.loc 1 2448 0
 225 0130 91F85630 		ldrb	r3, [r1, #86]	@ zero_extendqisi2
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                ((uint32_t)macconf->UnicastPausePacketDetect << 1));
 226              		.loc 1 2449 0
 227 0134 91F85520 		ldrb	r2, [r1, #85]	@ zero_extendqisi2
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                ((uint32_t)macconf->UnicastPausePacketDetect << 1));
 228              		.loc 1 2448 0
 229 0138 43EA4203 		orr	r3, r3, r2, lsl #1
 230              	.LVL10:
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Write to MACRFCR */
2452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(heth->Instance->MACRFCR, ETH_MACRFCR_MASK, macregval);
 231              		.loc 1 2452 0
 232 013c 0468     		ldr	r4, [r0]
 233 013e D4F89020 		ldr	r2, [r4, #144]
 234 0142 22F00302 		bic	r2, r2, #3
 235 0146 1343     		orrs	r3, r3, r2
 236              	.LVL11:
 237 0148 C4F89030 		str	r3, [r4, #144]
 238              	.LVL12:
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*------------------------ MTLTQOMR Configuration --------------------*/
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Write to MTLTQOMR */
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(heth->Instance->MTLTQOMR, ETH_MTLTQOMR_MASK, macconf->TransmitQueueMode);
 239              		.loc 1 2456 0
 240 014c 0268     		ldr	r2, [r0]
 241 014e D2F8003D 		ldr	r3, [r2, #3328]
 242 0152 23F07203 		bic	r3, r3, #114
 243 0156 8C6D     		ldr	r4, [r1, #88]
 244 0158 2343     		orrs	r3, r3, r4
 245 015a C2F8003D 		str	r3, [r2, #3328]
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*------------------------ MTLRQOMR Configuration --------------------*/
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macregval = (macconf->ReceiveQueueMode |
 246              		.loc 1 2459 0
 247 015e CA6D     		ldr	r2, [r1, #92]
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                ((uint32_t)((macconf->DropTCPIPChecksumErrorPacket == DISABLE) ? 1U : 0U) << 6) |
 248              		.loc 1 2460 0
ARM GAS  /tmp/cctf834y.s 			page 49


 249 0160 91F86030 		ldrb	r3, [r1, #96]	@ zero_extendqisi2
 250 0164 FBB1     		cbz	r3, .L17
 251 0166 0023     		movs	r3, #0
 252              	.L8:
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                ((uint32_t)((macconf->DropTCPIPChecksumErrorPacket == DISABLE) ? 1U : 0U) << 6) |
 253              		.loc 1 2459 0
 254 0168 1343     		orrs	r3, r3, r2
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                  ((uint32_t)macconf->ForwardRxErrorPacket << 4) |
 255              		.loc 1 2461 0
 256 016a 91F86120 		ldrb	r2, [r1, #97]	@ zero_extendqisi2
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                ((uint32_t)((macconf->DropTCPIPChecksumErrorPacket == DISABLE) ? 1U : 0U) << 6) |
 257              		.loc 1 2460 0
 258 016e 43EA0213 		orr	r3, r3, r2, lsl #4
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                    ((uint32_t)macconf->ForwardRxUndersizedGoodPacket << 3));
 259              		.loc 1 2462 0
 260 0172 91F86220 		ldrb	r2, [r1, #98]	@ zero_extendqisi2
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                ((uint32_t)((macconf->DropTCPIPChecksumErrorPacket == DISABLE) ? 1U : 0U) << 6) |
 261              		.loc 1 2459 0
 262 0176 43EAC203 		orr	r3, r3, r2, lsl #3
 263              	.LVL13:
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Write to MTLRQOMR */
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(heth->Instance->MTLRQOMR, ETH_MTLRQOMR_MASK, macregval);
 264              		.loc 1 2465 0
 265 017a 0168     		ldr	r1, [r0]
 266              	.LVL14:
 267 017c D1F8302D 		ldr	r2, [r1, #3376]
 268 0180 22F07B02 		bic	r2, r2, #123
 269 0184 1343     		orrs	r3, r3, r2
 270              	.LVL15:
 271 0186 C1F8303D 		str	r3, [r1, #3376]
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 272              		.loc 1 2466 0
 273 018a 30BC     		pop	{r4, r5}
 274              	.LCFI1:
 275              		.cfi_remember_state
 276              		.cfi_restore 5
 277              		.cfi_restore 4
 278              		.cfi_def_cfa_offset 0
 279 018c 7047     		bx	lr
 280              	.LVL16:
 281              	.L9:
 282              	.LCFI2:
 283              		.cfi_restore_state
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                             ((uint32_t)((macconf->Jabber == DISABLE) ? 1U : 0U) << 17) |
 284              		.loc 1 2403 0
 285 018e 0022     		movs	r2, #0
 286 0190 4FE7     		b	.L2
 287              	.L10:
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                               ((uint32_t)macconf->JumboPacket << 16) |
 288              		.loc 1 2404 0
 289 0192 0023     		movs	r3, #0
 290 0194 54E7     		b	.L3
 291              	.L11:
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                           ((uint32_t)macconf->CarrierSenseDuringTransmit << 9)|
 292              		.loc 1 2410 0
 293 0196 0022     		movs	r2, #0
ARM GAS  /tmp/cctf834y.s 			page 50


 294 0198 66E7     		b	.L4
 295              	.L12:
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                               macconf->BackOffLimit |
 296              		.loc 1 2412 0
 297 019a 0023     		movs	r3, #0
 298 019c 6FE7     		b	.L5
 299              	.L13:
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                        macconf->GiantPacketSizeLimit);
 300              		.loc 1 2425 0
 301 019e 0022     		movs	r2, #0
 302 01a0 96E7     		b	.L6
 303              	.L14:
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                    (macconf->PauseTime << 16));
 304              		.loc 1 2441 0
 305 01a2 0023     		movs	r3, #0
 306 01a4 B8E7     		b	.L7
 307              	.L17:
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                  ((uint32_t)macconf->ForwardRxErrorPacket << 4) |
 308              		.loc 1 2460 0
 309 01a6 4023     		movs	r3, #64
 310 01a8 DEE7     		b	.L8
 311              	.L19:
 312 01aa 00BF     		.align	2
 313              	.L18:
 314 01ac F0FEFFFF 		.word	-272
 315              		.cfi_endproc
 316              	.LFE185:
 318              		.section	.text.ETH_SetDMAConfig,"ax",%progbits
 319              		.align	1
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 323              		.fpu fpv5-d16
 325              	ETH_SetDMAConfig:
 326              	.LFB186:
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** static void ETH_SetDMAConfig(ETH_HandleTypeDef *heth,  ETH_DMAConfigTypeDef *dmaconf)
2469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
 327              		.loc 1 2469 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              		@ link register save eliminated.
 332              	.LVL17:
 333 0000 70B4     		push	{r4, r5, r6}
 334              	.LCFI3:
 335              		.cfi_def_cfa_offset 12
 336              		.cfi_offset 4, -12
 337              		.cfi_offset 5, -8
 338              		.cfi_offset 6, -4
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t dmaregval;
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*------------------------ DMAMR Configuration --------------------*/
2473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(heth->Instance->DMAMR, ETH_DMAMR_MASK, dmaconf->DMAArbitration);
 339              		.loc 1 2473 0
 340 0002 0268     		ldr	r2, [r0]
 341 0004 02F58052 		add	r2, r2, #4096
ARM GAS  /tmp/cctf834y.s 			page 51


 342 0008 1468     		ldr	r4, [r2]
 343 000a 1E4B     		ldr	r3, .L22
 344 000c 2340     		ands	r3, r3, r4
 345 000e 0C68     		ldr	r4, [r1]
 346 0010 2343     		orrs	r3, r3, r4
 347 0012 1360     		str	r3, [r2]
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*------------------------ DMASBMR Configuration --------------------*/
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaregval = (((uint32_t)dmaconf->AddressAlignedBeats << 12) |
 348              		.loc 1 2476 0
 349 0014 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                dmaconf->BurstMode |
 350              		.loc 1 2477 0
 351 0016 8B68     		ldr	r3, [r1, #8]
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                dmaconf->BurstMode |
 352              		.loc 1 2476 0
 353 0018 43EA0233 		orr	r3, r3, r2, lsl #12
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                  ((uint32_t)dmaconf->RebuildINCRxBurst << 15));
 354              		.loc 1 2478 0
 355 001c 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                dmaconf->BurstMode |
 356              		.loc 1 2476 0
 357 001e 43EAC233 		orr	r3, r3, r2, lsl #15
 358              	.LVL18:
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(heth->Instance->DMASBMR, ETH_DMASBMR_MASK, dmaregval);
 359              		.loc 1 2480 0
 360 0022 0568     		ldr	r5, [r0]
 361 0024 41F20404 		movw	r4, #4100
 362 0028 2E59     		ldr	r6, [r5, r4]
 363 002a 174A     		ldr	r2, .L22+4
 364 002c 3240     		ands	r2, r2, r6
 365 002e 1343     		orrs	r3, r3, r2
 366              	.LVL19:
 367 0030 2B51     		str	r3, [r5, r4]
 368              	.LVL20:
2481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*------------------------ DMACCR Configuration --------------------*/
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaregval = (((uint32_t)dmaconf->PBLx8Mode << 16) |
 369              		.loc 1 2483 0
 370 0032 4A7B     		ldrb	r2, [r1, #13]	@ zero_extendqisi2
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                dmaconf->MaximumSegmentSize);
 371              		.loc 1 2484 0
 372 0034 0B6A     		ldr	r3, [r1, #32]
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                dmaconf->MaximumSegmentSize);
 373              		.loc 1 2483 0
 374 0036 43EA0243 		orr	r3, r3, r2, lsl #16
 375              	.LVL21:
2485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(heth->Instance->DMACCR, ETH_DMACCR_MASK, dmaregval);
 376              		.loc 1 2486 0
 377 003a 0268     		ldr	r2, [r0]
 378 003c 02F58852 		add	r2, r2, #4352
 379 0040 1568     		ldr	r5, [r2]
 380 0042 124C     		ldr	r4, .L22+8
 381 0044 2C40     		ands	r4, r4, r5
 382 0046 2343     		orrs	r3, r3, r4
ARM GAS  /tmp/cctf834y.s 			page 52


 383              	.LVL22:
 384 0048 1360     		str	r3, [r2]
 385              	.LVL23:
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*------------------------ DMACTCR Configuration --------------------*/
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaregval = (dmaconf->TxDMABurstLength |
 386              		.loc 1 2489 0
 387 004a 0B69     		ldr	r3, [r1, #16]
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                ((uint32_t)dmaconf->SecondPacketOperate << 4)|
 388              		.loc 1 2490 0
 389 004c 0A7D     		ldrb	r2, [r1, #20]	@ zero_extendqisi2
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                ((uint32_t)dmaconf->SecondPacketOperate << 4)|
 390              		.loc 1 2489 0
 391 004e 43EA0213 		orr	r3, r3, r2, lsl #4
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                  ((uint32_t)dmaconf->TCPSegmentation << 12));
 392              		.loc 1 2491 0
 393 0052 4A7F     		ldrb	r2, [r1, #29]	@ zero_extendqisi2
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                ((uint32_t)dmaconf->SecondPacketOperate << 4)|
 394              		.loc 1 2489 0
 395 0054 43EA0233 		orr	r3, r3, r2, lsl #12
 396              	.LVL24:
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(heth->Instance->DMACTCR, ETH_DMACTCR_MASK, dmaregval);
 397              		.loc 1 2493 0
 398 0058 0568     		ldr	r5, [r0]
 399 005a 41F20414 		movw	r4, #4356
 400 005e 2E59     		ldr	r6, [r5, r4]
 401 0060 0B4A     		ldr	r2, .L22+12
 402 0062 3240     		ands	r2, r2, r6
 403 0064 1343     		orrs	r3, r3, r2
 404              	.LVL25:
 405 0066 2B51     		str	r3, [r5, r4]
 406              	.LVL26:
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*------------------------ DMACRCR Configuration --------------------*/
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaregval = (((uint32_t)dmaconf->FlushRxPacket  << 31) |
 407              		.loc 1 2496 0
 408 0068 0A7F     		ldrb	r2, [r1, #28]	@ zero_extendqisi2
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                dmaconf->RxDMABurstLength);
 409              		.loc 1 2497 0
 410 006a 8B69     		ldr	r3, [r1, #24]
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                dmaconf->RxDMABurstLength);
 411              		.loc 1 2496 0
 412 006c 43EAC273 		orr	r3, r3, r2, lsl #31
 413              	.LVL27:
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Write to DMACRCR */
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(heth->Instance->DMACRCR, ETH_DMACRCR_MASK, dmaregval);
 414              		.loc 1 2500 0
 415 0070 0068     		ldr	r0, [r0]
 416              	.LVL28:
 417 0072 41F20811 		movw	r1, #4360
 418              	.LVL29:
 419 0076 4458     		ldr	r4, [r0, r1]
 420 0078 064A     		ldr	r2, .L22+16
 421 007a 2240     		ands	r2, r2, r4
 422 007c 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/cctf834y.s 			page 53


 423              	.LVL30:
 424 007e 4350     		str	r3, [r0, r1]
 425              	.LVL31:
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 426              		.loc 1 2501 0
 427 0080 70BC     		pop	{r4, r5, r6}
 428              	.LCFI4:
 429              		.cfi_restore 6
 430              		.cfi_restore 5
 431              		.cfi_restore 4
 432              		.cfi_def_cfa_offset 0
 433 0082 7047     		bx	lr
 434              	.L23:
 435              		.align	2
 436              	.L22:
 437 0084 FD87FFFF 		.word	-30723
 438 0088 FE2FFFFF 		.word	-53250
 439 008c 00C0FEFF 		.word	-81920
 440 0090 EFEFC0FF 		.word	-4132881
 441 0094 FFFFC07F 		.word	2143354879
 442              		.cfi_endproc
 443              	.LFE186:
 445              		.section	.text.ETH_MACDMAConfig,"ax",%progbits
 446              		.align	1
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 450              		.fpu fpv5-d16
 452              	ETH_MACDMAConfig:
 453              	.LFB187:
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Configures Ethernet MAC and DMA with default parameters.
2505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         called by HAL_ETH_Init() API.
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval HAL status
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** static void ETH_MACDMAConfig(ETH_HandleTypeDef *heth)
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
 454              		.loc 1 2511 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 136
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              	.LVL32:
 459 0000 70B5     		push	{r4, r5, r6, lr}
 460              	.LCFI5:
 461              		.cfi_def_cfa_offset 16
 462              		.cfi_offset 4, -16
 463              		.cfi_offset 5, -12
 464              		.cfi_offset 6, -8
 465              		.cfi_offset 14, -4
 466 0002 A2B0     		sub	sp, sp, #136
 467              	.LCFI6:
 468              		.cfi_def_cfa_offset 152
 469 0004 0646     		mov	r6, r0
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_MACConfigTypeDef macDefaultConf;
ARM GAS  /tmp/cctf834y.s 			page 54


2513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_DMAConfigTypeDef dmaDefaultConf;
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*--------------- ETHERNET MAC registers default Configuration --------------*/
2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.AutomaticPadCRCStrip = ENABLE;
 470              		.loc 1 2516 0
 471 0006 0125     		movs	r5, #1
 472 0008 8DF83350 		strb	r5, [sp, #51]
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.BackOffLimit = ETH_BACKOFFLIMIT_10;
 473              		.loc 1 2517 0
 474 000c 0024     		movs	r4, #0
 475 000e 1294     		str	r4, [sp, #72]
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.CarrierSenseBeforeTransmit = DISABLE;
 476              		.loc 1 2518 0
 477 0010 8DF84140 		strb	r4, [sp, #65]
2519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.CarrierSenseDuringTransmit = DISABLE;
 478              		.loc 1 2519 0
 479 0014 8DF84340 		strb	r4, [sp, #67]
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.ChecksumOffload = ENABLE;
 480              		.loc 1 2520 0
 481 0018 8DF82850 		strb	r5, [sp, #40]
2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.CRCCheckingRxPackets = ENABLE;
 482              		.loc 1 2521 0
 483 001c 8DF85650 		strb	r5, [sp, #86]
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.CRCStripTypePacket = ENABLE;
 484              		.loc 1 2522 0
 485 0020 8DF83250 		strb	r5, [sp, #50]
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.DeferralCheck = DISABLE;
 486              		.loc 1 2523 0
 487 0024 8DF84C40 		strb	r4, [sp, #76]
2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.DropTCPIPChecksumErrorPacket = ENABLE;
 488              		.loc 1 2524 0
 489 0028 8DF88450 		strb	r5, [sp, #132]
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.DuplexMode = ETH_FULLDUPLEX_MODE;
 490              		.loc 1 2525 0
 491 002c 4FF40053 		mov	r3, #8192
 492 0030 0F93     		str	r3, [sp, #60]
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.ExtendedInterPacketGap = DISABLE;
 493              		.loc 1 2526 0
 494 0032 8DF85C40 		strb	r4, [sp, #92]
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.ExtendedInterPacketGapVal = 0x0;
 495              		.loc 1 2527 0
 496 0036 1894     		str	r4, [sp, #96]
2528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.ForwardRxErrorPacket = DISABLE;
 497              		.loc 1 2528 0
 498 0038 8DF88540 		strb	r4, [sp, #133]
2529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.ForwardRxUndersizedGoodPacket = DISABLE;
 499              		.loc 1 2529 0
 500 003c 8DF88640 		strb	r4, [sp, #134]
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.GiantPacketSizeLimit = 0x618;
 501              		.loc 1 2530 0
 502 0040 4FF4C363 		mov	r3, #1560
 503 0044 1693     		str	r3, [sp, #88]
2531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.GiantPacketSizeLimitControl = DISABLE;
 504              		.loc 1 2531 0
 505 0046 8DF83040 		strb	r4, [sp, #48]
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.InterPacketGapVal = ETH_INTERPACKETGAP_96BIT;
 506              		.loc 1 2532 0
ARM GAS  /tmp/cctf834y.s 			page 55


 507 004a 0B94     		str	r4, [sp, #44]
2533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.Jabber = ENABLE;
 508              		.loc 1 2533 0
 509 004c 8DF83550 		strb	r5, [sp, #53]
2534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.JumboPacket = DISABLE;
 510              		.loc 1 2534 0
 511 0050 8DF83640 		strb	r4, [sp, #54]
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.LoopbackMode = DISABLE;
 512              		.loc 1 2535 0
 513 0054 8DF84040 		strb	r4, [sp, #64]
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.PauseLowThreshold = ETH_PAUSELOWTHRESHOLD_MINUS_4;
 514              		.loc 1 2536 0
 515 0058 1D94     		str	r4, [sp, #116]
2537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.PauseTime = 0x0;
 516              		.loc 1 2537 0
 517 005a 1B94     		str	r4, [sp, #108]
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.PreambleLength = ETH_PREAMBLELENGTH_7;
 518              		.loc 1 2538 0
 519 005c 1494     		str	r4, [sp, #80]
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.ProgrammableWatchdog = DISABLE;
 520              		.loc 1 2539 0
 521 005e 8DF86440 		strb	r4, [sp, #100]
2540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.ReceiveFlowControl = DISABLE;
 522              		.loc 1 2540 0
 523 0062 8DF87A40 		strb	r4, [sp, #122]
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.ReceiveOwn = ENABLE;
 524              		.loc 1 2541 0
 525 0066 8DF84250 		strb	r5, [sp, #66]
2542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.ReceiveQueueMode = ETH_RECEIVESTOREFORWARD;
 526              		.loc 1 2542 0
 527 006a 2023     		movs	r3, #32
 528 006c 2093     		str	r3, [sp, #128]
2543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.RetryTransmission = ENABLE;
 529              		.loc 1 2543 0
 530 006e 8DF84450 		strb	r5, [sp, #68]
2544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.SlowProtocolDetect = DISABLE;
 531              		.loc 1 2544 0
 532 0072 8DF85540 		strb	r4, [sp, #85]
2545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.SourceAddrControl = ETH_SOURCEADDRESS_REPLACE_ADDR0;
 533              		.loc 1 2545 0
 534 0076 4FF04053 		mov	r3, #805306368
 535 007a 0993     		str	r3, [sp, #36]
2546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.Speed = ETH_SPEED_100M;
 536              		.loc 1 2546 0
 537 007c 4FF48043 		mov	r3, #16384
 538 0080 0E93     		str	r3, [sp, #56]
2547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.Support2KPacket = DISABLE;
 539              		.loc 1 2547 0
 540 0082 8DF83140 		strb	r4, [sp, #49]
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.TransmitQueueMode = ETH_TRANSMITSTOREFORWARD;
 541              		.loc 1 2548 0
 542 0086 0223     		movs	r3, #2
 543 0088 1F93     		str	r3, [sp, #124]
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.TransmitFlowControl = DISABLE;
 544              		.loc 1 2549 0
 545 008a 8DF87840 		strb	r4, [sp, #120]
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.UnicastPausePacketDetect = DISABLE;
ARM GAS  /tmp/cctf834y.s 			page 56


 546              		.loc 1 2550 0
 547 008e 8DF87940 		strb	r4, [sp, #121]
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.UnicastSlowProtocolPacketDetect = DISABLE;
 548              		.loc 1 2551 0
 549 0092 8DF85440 		strb	r4, [sp, #84]
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.Watchdog = ENABLE;
 550              		.loc 1 2552 0
 551 0096 8DF83450 		strb	r5, [sp, #52]
2553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.WatchdogTimeout =  ETH_MACWTR_WTO_2KB;
 552              		.loc 1 2553 0
 553 009a 1A94     		str	r4, [sp, #104]
2554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macDefaultConf.ZeroQuantaPause = ENABLE;
 554              		.loc 1 2554 0
 555 009c 8DF87050 		strb	r5, [sp, #112]
2555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* MAC default configuration */
2557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_SetMACConfig(heth, &macDefaultConf);
 556              		.loc 1 2557 0
 557 00a0 09A9     		add	r1, sp, #36
 558 00a2 FFF7FEFF 		bl	ETH_SetMACConfig
 559              	.LVL33:
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*--------------- ETHERNET DMA registers default Configuration --------------*/
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaDefaultConf.AddressAlignedBeats = ENABLE;
 560              		.loc 1 2560 0
 561 00a6 8DF80450 		strb	r5, [sp, #4]
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaDefaultConf.BurstMode = ETH_BURSTLENGTH_FIXED;
 562              		.loc 1 2561 0
 563 00aa 0295     		str	r5, [sp, #8]
2562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaDefaultConf.DMAArbitration = ETH_DMAARBITRATION_RX1_TX1;
 564              		.loc 1 2562 0
 565 00ac 0094     		str	r4, [sp]
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaDefaultConf.FlushRxPacket = DISABLE;
 566              		.loc 1 2563 0
 567 00ae 8DF81C40 		strb	r4, [sp, #28]
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaDefaultConf.PBLx8Mode = DISABLE;
 568              		.loc 1 2564 0
 569 00b2 8DF80D40 		strb	r4, [sp, #13]
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaDefaultConf.RebuildINCRxBurst = DISABLE;
 570              		.loc 1 2565 0
 571 00b6 8DF80C40 		strb	r4, [sp, #12]
2566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaDefaultConf.RxDMABurstLength = ETH_RXDMABURSTLENGTH_32BEAT;
 572              		.loc 1 2566 0
 573 00ba 4FF40013 		mov	r3, #2097152
 574 00be 0693     		str	r3, [sp, #24]
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaDefaultConf.SecondPacketOperate = DISABLE;
 575              		.loc 1 2567 0
 576 00c0 8DF81440 		strb	r4, [sp, #20]
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaDefaultConf.TxDMABurstLength = ETH_TXDMABURSTLENGTH_32BEAT;
 577              		.loc 1 2568 0
 578 00c4 0493     		str	r3, [sp, #16]
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaDefaultConf.TCPSegmentation = DISABLE;
 579              		.loc 1 2569 0
 580 00c6 8DF81D40 		strb	r4, [sp, #29]
2570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaDefaultConf.MaximumSegmentSize = 536;
 581              		.loc 1 2570 0
 582 00ca 4FF40673 		mov	r3, #536
ARM GAS  /tmp/cctf834y.s 			page 57


 583 00ce 0893     		str	r3, [sp, #32]
2571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* DMA default configuration */
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_SetDMAConfig(heth, &dmaDefaultConf);
 584              		.loc 1 2573 0
 585 00d0 6946     		mov	r1, sp
 586 00d2 3046     		mov	r0, r6
 587 00d4 FFF7FEFF 		bl	ETH_SetDMAConfig
 588              	.LVL34:
2574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 589              		.loc 1 2574 0
 590 00d8 22B0     		add	sp, sp, #136
 591              	.LCFI7:
 592              		.cfi_def_cfa_offset 16
 593              		@ sp needed
 594 00da 70BD     		pop	{r4, r5, r6, pc}
 595              		.cfi_endproc
 596              	.LFE187:
 598              		.section	.text.ETH_DMATxDescListInit,"ax",%progbits
 599              		.align	1
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 603              		.fpu fpv5-d16
 605              	ETH_DMATxDescListInit:
 606              	.LFB189:
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Configures the Clock range of SMI interface.
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         called by HAL_ETH_Init() API.
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval None
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** static void ETH_MAC_MDIO_ClkConfig(ETH_HandleTypeDef *heth)
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t tmpreg, hclk;
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Get the ETHERNET MACMDIOAR value */
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   tmpreg = (heth->Instance)->MACMDIOAR;
2589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Clear CSR Clock Range bits */
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   tmpreg &= ~ETH_MACMDIOAR_CR;
2592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Get hclk frequency value */
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   hclk = HAL_RCC_GetHCLKFreq();
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set CR bits depending on hclk value */
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if((hclk >= 20000000U)&&(hclk < 35000000U))
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* CSR Clock Range between 20-35 MHz */
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     tmpreg |= (uint32_t)ETH_MACMDIOAR_CR_DIV16;
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else if((hclk >= 35000000U)&&(hclk < 60000000U))
2603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* CSR Clock Range between 35-60 MHz */
2605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     tmpreg |= (uint32_t)ETH_MACMDIOAR_CR_DIV26;
ARM GAS  /tmp/cctf834y.s 			page 58


2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else if((hclk >= 60000000U)&&(hclk < 100000000U))
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* CSR Clock Range between 60-100 MHz */
2610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     tmpreg |= (uint32_t)ETH_MACMDIOAR_CR_DIV42;
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else if((hclk >= 100000000U)&&(hclk < 150000000U))
2613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* CSR Clock Range between 100-150 MHz */
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     tmpreg |= (uint32_t)ETH_MACMDIOAR_CR_DIV62;
2616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else /* (hclk >= 150000000)&&(hclk <= 200000000) */
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* CSR Clock Range between 150-200 MHz */
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     tmpreg |= (uint32_t)ETH_MACMDIOAR_CR_DIV102;
2621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Configure the CSR Clock Range */
2624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   (heth->Instance)->MACMDIOAR = (uint32_t)tmpreg;
2625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
2626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Initializes the DMA Tx descriptors.
2629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         called by HAL_ETH_Init() API.
2630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval None
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** static void ETH_DMATxDescListInit(ETH_HandleTypeDef *heth)
2635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
 607              		.loc 1 2635 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 612              	.LVL35:
 613 0000 30B4     		push	{r4, r5}
 614              	.LCFI8:
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 4, -8
 617              		.cfi_offset 5, -4
 618              	.LVL36:
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_DMADescTypeDef *dmatxdesc;
2637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t i;
2638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Fill each DMATxDesc descriptor with the right values */
2640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   for(i=0; i < (uint32_t)ETH_TX_DESC_CNT; i++)
 619              		.loc 1 2640 0
 620 0002 0023     		movs	r3, #0
 621 0004 0DE0     		b	.L27
 622              	.LVL37:
 623              	.L28:
2641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     dmatxdesc = heth->Init.TxDesc + i;
 624              		.loc 1 2642 0 discriminator 3
 625 0006 C568     		ldr	r5, [r0, #12]
 626 0008 03EB4302 		add	r2, r3, r3, lsl #1
ARM GAS  /tmp/cctf834y.s 			page 59


 627 000c D400     		lsls	r4, r2, #3
 628 000e 2A19     		adds	r2, r5, r4
 629              	.LVL38:
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmatxdesc->DESC0, 0x0);
 630              		.loc 1 2644 0 discriminator 3
 631 0010 0021     		movs	r1, #0
 632 0012 2951     		str	r1, [r5, r4]
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmatxdesc->DESC1, 0x0);
 633              		.loc 1 2645 0 discriminator 3
 634 0014 5160     		str	r1, [r2, #4]
2646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmatxdesc->DESC2, 0x0);
 635              		.loc 1 2646 0 discriminator 3
 636 0016 9160     		str	r1, [r2, #8]
2647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmatxdesc->DESC3, 0x0);
 637              		.loc 1 2647 0 discriminator 3
 638 0018 D160     		str	r1, [r2, #12]
2648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(heth->TxDescList.TxDesc[i], (uint32_t)dmatxdesc);
 639              		.loc 1 2649 0 discriminator 3
 640 001a 991D     		adds	r1, r3, #6
 641 001c 40F82120 		str	r2, [r0, r1, lsl #2]
2640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 642              		.loc 1 2640 0 discriminator 3
 643 0020 0133     		adds	r3, r3, #1
 644              	.LVL39:
 645              	.L27:
2640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 646              		.loc 1 2640 0 is_stmt 0 discriminator 1
 647 0022 032B     		cmp	r3, #3
 648 0024 EFD9     		bls	.L28
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   heth->TxDescList.CurTxDesc = 0;
 649              		.loc 1 2652 0 is_stmt 1
 650 0026 0023     		movs	r3, #0
 651              	.LVL40:
 652 0028 8362     		str	r3, [r0, #40]
2653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set Transmit Descriptor Ring Length */
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(heth->Instance->DMACTDRLR, (ETH_TX_DESC_CNT -1));
 653              		.loc 1 2655 0
 654 002a 0268     		ldr	r2, [r0]
 655 002c 0321     		movs	r1, #3
 656 002e 41F22C13 		movw	r3, #4396
 657 0032 D150     		str	r1, [r2, r3]
2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set Transmit Descriptor List Address */
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(heth->Instance->DMACTDLAR, (uint32_t) heth->Init.TxDesc);
 658              		.loc 1 2658 0
 659 0034 0268     		ldr	r2, [r0]
 660 0036 C168     		ldr	r1, [r0, #12]
 661 0038 41F21413 		movw	r3, #4372
 662 003c D150     		str	r1, [r2, r3]
2659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set Transmit Descriptor Tail pointer */
2661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(heth->Instance->DMACTDTPR, (uint32_t) heth->Init.TxDesc);
ARM GAS  /tmp/cctf834y.s 			page 60


 663              		.loc 1 2661 0
 664 003e 0368     		ldr	r3, [r0]
 665 0040 C268     		ldr	r2, [r0, #12]
 666 0042 03F58953 		add	r3, r3, #4384
 667 0046 1A60     		str	r2, [r3]
2662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 668              		.loc 1 2662 0
 669 0048 30BC     		pop	{r4, r5}
 670              	.LCFI9:
 671              		.cfi_restore 5
 672              		.cfi_restore 4
 673              		.cfi_def_cfa_offset 0
 674 004a 7047     		bx	lr
 675              		.cfi_endproc
 676              	.LFE189:
 678              		.section	.text.ETH_DMARxDescListInit,"ax",%progbits
 679              		.align	1
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 683              		.fpu fpv5-d16
 685              	ETH_DMARxDescListInit:
 686              	.LFB190:
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Initializes the DMA Rx descriptors in chain mode.
2666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         called by HAL_ETH_Init() API.
2667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval None
2670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** static void ETH_DMARxDescListInit(ETH_HandleTypeDef *heth)
2672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
 687              		.loc 1 2672 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              		@ link register save eliminated.
 692              	.LVL41:
 693 0000 30B4     		push	{r4, r5}
 694              	.LCFI10:
 695              		.cfi_def_cfa_offset 8
 696              		.cfi_offset 4, -8
 697              		.cfi_offset 5, -4
 698              	.LVL42:
2673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_DMADescTypeDef *dmarxdesc;
2674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t i;
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   for(i = 0; i < (uint32_t)ETH_RX_DESC_CNT; i++)
 699              		.loc 1 2676 0
 700 0002 0021     		movs	r1, #0
 701 0004 11E0     		b	.L31
 702              	.LVL43:
 703              	.L32:
2677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     dmarxdesc =  heth->Init.RxDesc + i;
 704              		.loc 1 2678 0 discriminator 3
ARM GAS  /tmp/cctf834y.s 			page 61


 705 0006 0569     		ldr	r5, [r0, #16]
 706 0008 01EB4103 		add	r3, r1, r1, lsl #1
 707 000c DC00     		lsls	r4, r3, #3
 708 000e 2B19     		adds	r3, r5, r4
 709              	.LVL44:
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmarxdesc->DESC0, 0x0);
 710              		.loc 1 2680 0 discriminator 3
 711 0010 0022     		movs	r2, #0
 712 0012 2A51     		str	r2, [r5, r4]
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmarxdesc->DESC1, 0x0);
 713              		.loc 1 2681 0 discriminator 3
 714 0014 5A60     		str	r2, [r3, #4]
2682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmarxdesc->DESC2, 0x0);
 715              		.loc 1 2682 0 discriminator 3
 716 0016 9A60     		str	r2, [r3, #8]
2683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmarxdesc->DESC3, 0x0);
 717              		.loc 1 2683 0 discriminator 3
 718 0018 DA60     		str	r2, [r3, #12]
2684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmarxdesc->BackupAddr0, 0x0);
 719              		.loc 1 2684 0 discriminator 3
 720 001a 1A61     		str	r2, [r3, #16]
2685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmarxdesc->BackupAddr1, 0x0);
 721              		.loc 1 2685 0 discriminator 3
 722 001c 5A61     		str	r2, [r3, #20]
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set Rx descritors adresses */
2688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(heth->RxDescList.RxDesc[i], (uint32_t)dmarxdesc);
 723              		.loc 1 2688 0 discriminator 3
 724 001e 01F10A02 		add	r2, r1, #10
 725 0022 00EB8202 		add	r2, r0, r2, lsl #2
 726 0026 5360     		str	r3, [r2, #4]
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 727              		.loc 1 2676 0 discriminator 3
 728 0028 0131     		adds	r1, r1, #1
 729              	.LVL45:
 730              	.L31:
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 731              		.loc 1 2676 0 is_stmt 0 discriminator 1
 732 002a 0329     		cmp	r1, #3
 733 002c EBD9     		bls	.L32
2689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(heth->RxDescList.CurRxDesc, 0);
 734              		.loc 1 2691 0 is_stmt 1
 735 002e 0023     		movs	r3, #0
 736 0030 C363     		str	r3, [r0, #60]
2692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(heth->RxDescList.FirstAppDesc, 0);
 737              		.loc 1 2692 0
 738 0032 0364     		str	r3, [r0, #64]
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(heth->RxDescList.AppDescNbr, 0);
 739              		.loc 1 2693 0
 740 0034 4364     		str	r3, [r0, #68]
2694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(heth->RxDescList.ItMode, 0);
 741              		.loc 1 2694 0
 742 0036 C364     		str	r3, [r0, #76]
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(heth->RxDescList.AppContextDesc, 0);
ARM GAS  /tmp/cctf834y.s 			page 62


 743              		.loc 1 2695 0
 744 0038 8364     		str	r3, [r0, #72]
2696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set Receive Descriptor Ring Length */
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(heth->Instance->DMACRDRLR, ((uint32_t)(ETH_RX_DESC_CNT - 1)));
 745              		.loc 1 2698 0
 746 003a 0268     		ldr	r2, [r0]
 747 003c 0321     		movs	r1, #3
 748              	.LVL46:
 749 003e 41F23013 		movw	r3, #4400
 750 0042 D150     		str	r1, [r2, r3]
2699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set Receive Descriptor List Address */
2701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(heth->Instance->DMACRDLAR, (uint32_t) heth->Init.RxDesc);
 751              		.loc 1 2701 0
 752 0044 0268     		ldr	r2, [r0]
 753 0046 0169     		ldr	r1, [r0, #16]
 754 0048 41F21C13 		movw	r3, #4380
 755 004c D150     		str	r1, [r2, r3]
2702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set Receive Descriptor Tail pointer Address */
2704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(heth->Instance->DMACRDTPR, ((uint32_t)(heth->Init.RxDesc + (((uint32_t)(ETH_RX_DESC_CNT
 756              		.loc 1 2704 0
 757 004e 0168     		ldr	r1, [r0]
 758 0050 0369     		ldr	r3, [r0, #16]
 759 0052 03F5D863 		add	r3, r3, #1728
 760 0056 41F22812 		movw	r2, #4392
 761 005a 8B50     		str	r3, [r1, r2]
2705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 762              		.loc 1 2705 0
 763 005c 30BC     		pop	{r4, r5}
 764              	.LCFI11:
 765              		.cfi_restore 5
 766              		.cfi_restore 4
 767              		.cfi_def_cfa_offset 0
 768 005e 7047     		bx	lr
 769              		.cfi_endproc
 770              	.LFE190:
 772              		.section	.text.ETH_Prepare_Tx_Descriptors,"ax",%progbits
 773              		.align	1
 774              		.syntax unified
 775              		.thumb
 776              		.thumb_func
 777              		.fpu fpv5-d16
 779              	ETH_Prepare_Tx_Descriptors:
 780              	.LFB191:
2706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** /**
2708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @brief  Prepare Tx DMA descriptor before transmission.
2709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         called by HAL_ETH_Transmit_IT and HAL_ETH_Transmit_IT() API.
2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   *         the configuration information for ETHERNET module
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  pTxConfig: Tx packet configuration
2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @param  ItMode: Enable or disable Tx EOT interrept
2714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   * @retval Status
2715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   */
2716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** static uint32_t ETH_Prepare_Tx_Descriptors(ETH_HandleTypeDef *heth, ETH_TxPacketConfig *pTxConfig, 
ARM GAS  /tmp/cctf834y.s 			page 63


2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** {
 781              		.loc 1 2717 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785              	.LVL47:
 786 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 787              	.LCFI12:
 788              		.cfi_def_cfa_offset 20
 789              		.cfi_offset 4, -20
 790              		.cfi_offset 5, -16
 791              		.cfi_offset 6, -12
 792              		.cfi_offset 7, -8
 793              		.cfi_offset 14, -4
 794 0002 9646     		mov	lr, r2
 795              	.LVL48:
2718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_TxDescListTypeDef *dmatxdesclist = &heth->TxDescList;
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t descidx = dmatxdesclist->CurTxDesc;
 796              		.loc 1 2719 0
 797 0004 876A     		ldr	r7, [r0, #40]
 798              	.LVL49:
2720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t firstdescidx = dmatxdesclist->CurTxDesc;
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t descnbr = 0, idx;
2722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_DMADescTypeDef *dmatxdesc = (ETH_DMADescTypeDef *)dmatxdesclist->TxDesc[descidx];
 799              		.loc 1 2722 0
 800 0006 00EB8703 		add	r3, r0, r7, lsl #2
 801 000a 9B69     		ldr	r3, [r3, #24]
 802              	.LVL50:
2723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_BufferTypeDef  *txbuffer = pTxConfig->TxBuffer;
 803              		.loc 1 2724 0
 804 000c D1F808C0 		ldr	ip, [r1, #8]
 805              	.LVL51:
2725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Current Tx Descriptor Owned by DMA: cannot be used by the application  */
2727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(READ_BIT(dmatxdesc->DESC3, ETH_DMATXNDESCWBF_OWN) == ETH_DMATXNDESCWBF_OWN)
 806              		.loc 1 2727 0
 807 0010 DA68     		ldr	r2, [r3, #12]
 808              	.LVL52:
 809 0012 002A     		cmp	r2, #0
 810 0014 C0F27B81 		blt	.L60
2728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ETH_ERROR_BUSY;
2730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /***************************************************************************/
2733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*****************    Context descriptor configuration (Optional) **********/
2734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /***************************************************************************/
2735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* If VLAN tag is enabled for this packet */
2736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(READ_BIT(pTxConfig->Attributes, ETH_TX_PACKETS_FEATURES_VLANTAG) != 0U)
 811              		.loc 1 2736 0
 812 0018 0A68     		ldr	r2, [r1]
 813 001a 12F0040F 		tst	r2, #4
 814 001e 2CD0     		beq	.L36
2737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set vlan tag value */
2739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     MODIFY_REG(dmatxdesc->DESC3, ETH_DMATXCDESC_VT, pTxConfig->VlanTag);
ARM GAS  /tmp/cctf834y.s 			page 64


 815              		.loc 1 2739 0
 816 0020 DC68     		ldr	r4, [r3, #12]
 817 0022 AC4A     		ldr	r2, .L68
 818 0024 2240     		ands	r2, r2, r4
 819 0026 4C6A     		ldr	r4, [r1, #36]
 820 0028 2243     		orrs	r2, r2, r4
 821 002a DA60     		str	r2, [r3, #12]
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set vlan tag valid bit */
2741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(dmatxdesc->DESC3, ETH_DMATXCDESC_VLTV);
 822              		.loc 1 2741 0
 823 002c DA68     		ldr	r2, [r3, #12]
 824 002e 42F48032 		orr	r2, r2, #65536
 825 0032 DA60     		str	r2, [r3, #12]
2742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set the descriptor as the vlan input source */
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(heth->Instance->MACVIR, ETH_MACVIR_VLTI);
 826              		.loc 1 2743 0
 827 0034 0468     		ldr	r4, [r0]
 828 0036 226E     		ldr	r2, [r4, #96]
 829 0038 42F48012 		orr	r2, r2, #1048576
 830 003c 2266     		str	r2, [r4, #96]
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* if inner VLAN is enabled */
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(READ_BIT(pTxConfig->Attributes, ETH_TX_PACKETS_FEATURES_INNERVLANTAG) != 0U)
 831              		.loc 1 2746 0
 832 003e 0A68     		ldr	r2, [r1]
 833 0040 12F0080F 		tst	r2, #8
 834 0044 19D0     		beq	.L36
2747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
2748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Set inner vlan tag value */
2749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       MODIFY_REG(dmatxdesc->DESC2, ETH_DMATXCDESC_IVT, (pTxConfig->InnerVlanTag << 16));
 835              		.loc 1 2749 0
 836 0046 9A68     		ldr	r2, [r3, #8]
 837 0048 92B2     		uxth	r2, r2
 838 004a CC6A     		ldr	r4, [r1, #44]
 839 004c 42EA0442 		orr	r2, r2, r4, lsl #16
 840 0050 9A60     		str	r2, [r3, #8]
2750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Set inner vlan tag valid bit */
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       SET_BIT(dmatxdesc->DESC3, ETH_DMATXCDESC_IVLTV);
 841              		.loc 1 2751 0
 842 0052 DA68     		ldr	r2, [r3, #12]
 843 0054 42F40032 		orr	r2, r2, #131072
 844 0058 DA60     		str	r2, [r3, #12]
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Set Vlan Tag control */
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       MODIFY_REG(dmatxdesc->DESC3, ETH_DMATXCDESC_IVTIR, pTxConfig->InnerVlanCtrl);
 845              		.loc 1 2754 0
 846 005a DA68     		ldr	r2, [r3, #12]
 847 005c 22F44022 		bic	r2, r2, #786432
 848 0060 0C6B     		ldr	r4, [r1, #48]
 849 0062 2243     		orrs	r2, r2, r4
 850 0064 DA60     		str	r2, [r3, #12]
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Set the descriptor as the inner vlan input source */
2757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       SET_BIT(heth->Instance->MACIVIR, ETH_MACIVIR_VLTI);
 851              		.loc 1 2757 0
 852 0066 0468     		ldr	r4, [r0]
 853 0068 626E     		ldr	r2, [r4, #100]
ARM GAS  /tmp/cctf834y.s 			page 65


 854 006a 42F48012 		orr	r2, r2, #1048576
 855 006e 6266     		str	r2, [r4, #100]
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Enable double VLAN processing */
2759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       SET_BIT(heth->Instance->MACVTR, ETH_MACVTR_EDVLP);
 856              		.loc 1 2759 0
 857 0070 0468     		ldr	r4, [r0]
 858 0072 226D     		ldr	r2, [r4, #80]
 859 0074 42F08062 		orr	r2, r2, #67108864
 860 0078 2265     		str	r2, [r4, #80]
 861              	.L36:
2760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* if tcp segementation is enabled for this packet */
2764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(READ_BIT(pTxConfig->Attributes, ETH_TX_PACKETS_FEATURES_TSO) != 0U)
 862              		.loc 1 2764 0
 863 007a 0A68     		ldr	r2, [r1]
 864 007c 12F0100F 		tst	r2, #16
 865 0080 09D0     		beq	.L37
2765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set MSS value */
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     MODIFY_REG(dmatxdesc->DESC2, ETH_DMATXCDESC_MSS, pTxConfig->MaxSegmentSize);
 866              		.loc 1 2767 0
 867 0082 9C68     		ldr	r4, [r3, #8]
 868 0084 944A     		ldr	r2, .L68+4
 869 0086 2240     		ands	r2, r2, r4
 870 0088 8C69     		ldr	r4, [r1, #24]
 871 008a 2243     		orrs	r2, r2, r4
 872 008c 9A60     		str	r2, [r3, #8]
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set MSS valid bit */
2769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(dmatxdesc->DESC3, ETH_DMATXCDESC_TCMSSV);
 873              		.loc 1 2769 0
 874 008e DA68     		ldr	r2, [r3, #12]
 875 0090 42F08062 		orr	r2, r2, #67108864
 876 0094 DA60     		str	r2, [r3, #12]
 877              	.L37:
2770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if((READ_BIT(pTxConfig->Attributes, ETH_TX_PACKETS_FEATURES_VLANTAG) != 0U)|| (READ_BIT(pTxConfig
 878              		.loc 1 2772 0
 879 0096 0A68     		ldr	r2, [r1]
 880 0098 12F0140F 		tst	r2, #20
 881 009c 1CD0     		beq	.L61
2773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set as context descriptor */
2775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(dmatxdesc->DESC3, ETH_DMATXCDESC_CTXT);
 882              		.loc 1 2775 0
 883 009e DA68     		ldr	r2, [r3, #12]
 884 00a0 42F08042 		orr	r2, r2, #1073741824
 885 00a4 DA60     		str	r2, [r3, #12]
2776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set own bit */
2777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(dmatxdesc->DESC3, ETH_DMATXCDESC_OWN);
 886              		.loc 1 2777 0
 887 00a6 DA68     		ldr	r2, [r3, #12]
 888 00a8 42F00042 		orr	r2, r2, #-2147483648
 889 00ac DA60     		str	r2, [r3, #12]
2778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Increment current tx descriptor index */
ARM GAS  /tmp/cctf834y.s 			page 66


2779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     INCR_TX_DESC_INDEX(descidx, 1U);
 890              		.loc 1 2779 0
 891 00ae 7D1C     		adds	r5, r7, #1
 892              	.LVL53:
 893 00b0 032D     		cmp	r5, #3
 894 00b2 00D9     		bls	.L39
 895              		.loc 1 2779 0 is_stmt 0 discriminator 1
 896 00b4 FD1E     		subs	r5, r7, #3
 897              	.LVL54:
 898              	.L39:
2780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Get current descriptor address */
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     dmatxdesc = (ETH_DMADescTypeDef *)dmatxdesclist->TxDesc[descidx];
 899              		.loc 1 2781 0 is_stmt 1
 900 00b6 00EB8503 		add	r3, r0, r5, lsl #2
 901              	.LVL55:
 902 00ba 9B69     		ldr	r3, [r3, #24]
 903              	.LVL56:
2782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     descnbr += 1U;
2784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Current Tx Descriptor Owned by DMA: cannot be used by the application  */
2786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(READ_BIT(dmatxdesc->DESC3, ETH_DMATXNDESCWBF_OWN) == ETH_DMATXNDESCWBF_OWN)
 904              		.loc 1 2786 0
 905 00bc DA68     		ldr	r2, [r3, #12]
 906 00be 002A     		cmp	r2, #0
 907 00c0 01DB     		blt	.L64
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 908              		.loc 1 2783 0
 909 00c2 0126     		movs	r6, #1
 910 00c4 0AE0     		b	.L38
 911              	.L64:
2787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
2788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       dmatxdesc = (ETH_DMADescTypeDef *)dmatxdesclist->TxDesc[firstdescidx];
 912              		.loc 1 2788 0
 913 00c6 00EB8700 		add	r0, r0, r7, lsl #2
 914              	.LVL57:
 915 00ca 8269     		ldr	r2, [r0, #24]
 916              	.LVL58:
2789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Clear own bit */
2790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       CLEAR_BIT(dmatxdesc->DESC3, ETH_DMATXCDESC_OWN);
 917              		.loc 1 2790 0
 918 00cc D368     		ldr	r3, [r2, #12]
 919 00ce 23F00043 		bic	r3, r3, #-2147483648
 920 00d2 D360     		str	r3, [r2, #12]
2791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       return HAL_ETH_ERROR_BUSY;
 921              		.loc 1 2792 0
 922 00d4 0220     		movs	r0, #2
 923 00d6 F0BD     		pop	{r4, r5, r6, r7, pc}
 924              	.LVL59:
 925              	.L61:
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t firstdescidx = dmatxdesclist->CurTxDesc;
 926              		.loc 1 2719 0
 927 00d8 3D46     		mov	r5, r7
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_DMADescTypeDef *dmatxdesc = (ETH_DMADescTypeDef *)dmatxdesclist->TxDesc[descidx];
 928              		.loc 1 2721 0
 929 00da 0026     		movs	r6, #0
ARM GAS  /tmp/cctf834y.s 			page 67


 930              	.LVL60:
 931              	.L38:
2793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
2794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /***************************************************************************/
2797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /*****************    Normal descriptors configuration     *****************/
2798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /***************************************************************************/
2799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   descnbr += 1U;
 932              		.loc 1 2800 0
 933 00dc 0136     		adds	r6, r6, #1
 934              	.LVL61:
2801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set header or buffer 1 address */
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   WRITE_REG(dmatxdesc->DESC0, (uint32_t)txbuffer->buffer);
 935              		.loc 1 2803 0
 936 00de DCF80020 		ldr	r2, [ip]
 937 00e2 1A60     		str	r2, [r3]
2804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set header or buffer 1 Length */
2805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(dmatxdesc->DESC2, ETH_DMATXNDESCRF_B1L, txbuffer->len);
 938              		.loc 1 2805 0
 939 00e4 9A68     		ldr	r2, [r3, #8]
 940 00e6 7C4C     		ldr	r4, .L68+4
 941 00e8 1440     		ands	r4, r4, r2
 942 00ea DCF80420 		ldr	r2, [ip, #4]
 943 00ee 2243     		orrs	r2, r2, r4
 944 00f0 9A60     		str	r2, [r3, #8]
2806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(txbuffer->next != NULL)
 945              		.loc 1 2807 0
 946 00f2 DCF80820 		ldr	r2, [ip, #8]
 947 00f6 002A     		cmp	r2, #0
 948 00f8 45D0     		beq	.L40
 949              	.LVL62:
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     txbuffer = txbuffer->next;
2810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set buffer 2 address */
2811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmatxdesc->DESC1, (uint32_t)txbuffer->buffer);
 950              		.loc 1 2811 0
 951 00fa 1468     		ldr	r4, [r2]
 952 00fc 5C60     		str	r4, [r3, #4]
2812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set buffer 2 Length */
2813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     MODIFY_REG(dmatxdesc->DESC2, ETH_DMATXNDESCRF_B2L, (txbuffer->len << 16));
 953              		.loc 1 2813 0
 954 00fe 9C68     		ldr	r4, [r3, #8]
 955 0100 DFF8D8C1 		ldr	ip, .L68+8
 956 0104 04EA0C0C 		and	ip, r4, ip
 957 0108 5468     		ldr	r4, [r2, #4]
 958 010a 4CEA0444 		orr	r4, ip, r4, lsl #16
 959 010e 9C60     		str	r4, [r3, #8]
 960              	.L41:
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
2816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmatxdesc->DESC1, 0x0);
2818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set buffer 2 Length */
ARM GAS  /tmp/cctf834y.s 			page 68


2819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     MODIFY_REG(dmatxdesc->DESC2, ETH_DMATXNDESCRF_B2L, 0x0U);
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(READ_BIT(pTxConfig->Attributes, ETH_TX_PACKETS_FEATURES_TSO) != 0U)
 961              		.loc 1 2822 0
 962 0110 0C68     		ldr	r4, [r1]
 963 0112 14F0100F 		tst	r4, #16
 964 0116 3ED0     		beq	.L42
2823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set TCP Header length */
2825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     MODIFY_REG(dmatxdesc->DESC3, ETH_DMATXNDESCRF_THL, (pTxConfig->TCPHeaderLen << 19));
 965              		.loc 1 2825 0
 966 0118 DC68     		ldr	r4, [r3, #12]
 967 011a 24F4F00C 		bic	ip, r4, #7864320
 968 011e 0C6A     		ldr	r4, [r1, #32]
 969 0120 4CEAC444 		orr	r4, ip, r4, lsl #19
 970 0124 DC60     		str	r4, [r3, #12]
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set TCP payload length */
2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     MODIFY_REG(dmatxdesc->DESC3, ETH_DMATXNDESCRF_TPL, pTxConfig->PayloadLen);
 971              		.loc 1 2827 0
 972 0126 DC68     		ldr	r4, [r3, #12]
 973 0128 DFF8B4C1 		ldr	ip, .L68+12
 974 012c 04EA0C0C 		and	ip, r4, ip
 975 0130 CC69     		ldr	r4, [r1, #28]
 976 0132 4CEA0404 		orr	r4, ip, r4
 977 0136 DC60     		str	r4, [r3, #12]
2828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set TCP Segmentation Enabled bit */
2829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(dmatxdesc->DESC3, ETH_DMATXNDESCRF_TSE);
 978              		.loc 1 2829 0
 979 0138 DC68     		ldr	r4, [r3, #12]
 980 013a 44F48024 		orr	r4, r4, #262144
 981 013e DC60     		str	r4, [r3, #12]
 982              	.L43:
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
2832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     MODIFY_REG(dmatxdesc->DESC3, ETH_DMATXNDESCRF_FL, pTxConfig->Length);
2834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(READ_BIT(pTxConfig->Attributes, ETH_TX_PACKETS_FEATURES_CSUM) != 0U)
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
2837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       MODIFY_REG(dmatxdesc->DESC3, ETH_DMATXNDESCRF_CIC, pTxConfig->ChecksumCtrl);
2838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
2839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(READ_BIT(pTxConfig->Attributes, ETH_TX_PACKETS_FEATURES_CRCPAD) != 0U)
2841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
2842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       MODIFY_REG(dmatxdesc->DESC3, ETH_DMATXNDESCRF_CPC, pTxConfig->CRCPadCtrl);
2843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
2844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(READ_BIT(pTxConfig->Attributes, ETH_TX_PACKETS_FEATURES_VLANTAG) != 0U)
 983              		.loc 1 2846 0
 984 0140 0C68     		ldr	r4, [r1]
 985 0142 14F0040F 		tst	r4, #4
 986 0146 06D0     		beq	.L45
2847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set Vlan Tag control */
2849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     MODIFY_REG(dmatxdesc->DESC2, ETH_DMATXNDESCRF_VTIR, pTxConfig->VlanCtrl);
ARM GAS  /tmp/cctf834y.s 			page 69


 987              		.loc 1 2849 0
 988 0148 9C68     		ldr	r4, [r3, #8]
 989 014a 24F4404C 		bic	ip, r4, #49152
 990 014e 8C6A     		ldr	r4, [r1, #40]
 991 0150 4CEA0404 		orr	r4, ip, r4
 992 0154 9C60     		str	r4, [r3, #8]
 993              	.L45:
2850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Mark it as First Descriptor */
2853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   SET_BIT(dmatxdesc->DESC3, ETH_DMATXNDESCRF_FD);
 994              		.loc 1 2853 0
 995 0156 DC68     		ldr	r4, [r3, #12]
 996 0158 44F00054 		orr	r4, r4, #536870912
 997 015c DC60     		str	r4, [r3, #12]
2854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Mark it as NORMAL descriptor */
2855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   CLEAR_BIT(dmatxdesc->DESC3, ETH_DMATXNDESCRF_CTXT);
 998              		.loc 1 2855 0
 999 015e DC68     		ldr	r4, [r3, #12]
 1000 0160 24F08044 		bic	r4, r4, #1073741824
 1001 0164 DC60     		str	r4, [r3, #12]
2856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* set OWN bit of FIRST descriptor */
2857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   SET_BIT(dmatxdesc->DESC3, ETH_DMATXNDESCRF_OWN);
 1002              		.loc 1 2857 0
 1003 0166 DC68     		ldr	r4, [r3, #12]
 1004 0168 44F00044 		orr	r4, r4, #-2147483648
 1005 016c DC60     		str	r4, [r3, #12]
2858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* If source address insertion/replacement is enabled for this packet */
2860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(READ_BIT(pTxConfig->Attributes, ETH_TX_PACKETS_FEATURES_SAIC) != 0U)
 1006              		.loc 1 2860 0
 1007 016e 0C68     		ldr	r4, [r1]
 1008 0170 14F0020F 		tst	r4, #2
 1009 0174 6BD0     		beq	.L47
2861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     MODIFY_REG(dmatxdesc->DESC3, ETH_DMATXNDESCRF_SAIC, pTxConfig->SrcAddrCtrl);
 1010              		.loc 1 2862 0
 1011 0176 DC68     		ldr	r4, [r3, #12]
 1012 0178 24F0607C 		bic	ip, r4, #58720256
 1013 017c CC68     		ldr	r4, [r1, #12]
 1014 017e 4CEA0404 		orr	r4, ip, r4
 1015 0182 DC60     		str	r4, [r3, #12]
 1016 0184 63E0     		b	.L47
 1017              	.LVL63:
 1018              	.L40:
2817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set buffer 2 Length */
 1019              		.loc 1 2817 0
 1020 0186 0022     		movs	r2, #0
 1021 0188 5A60     		str	r2, [r3, #4]
2819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1022              		.loc 1 2819 0
 1023 018a 9C68     		ldr	r4, [r3, #8]
 1024 018c 534A     		ldr	r2, .L68+8
 1025 018e 2240     		ands	r2, r2, r4
 1026 0190 9A60     		str	r2, [r3, #8]
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1027              		.loc 1 2724 0
ARM GAS  /tmp/cctf834y.s 			page 70


 1028 0192 6246     		mov	r2, ip
 1029 0194 BCE7     		b	.L41
 1030              	.LVL64:
 1031              	.L42:
2833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1032              		.loc 1 2833 0
 1033 0196 DC68     		ldr	r4, [r3, #12]
 1034 0198 DFF848C1 		ldr	ip, .L68+16
 1035 019c 04EA0C0C 		and	ip, r4, ip
 1036 01a0 4C68     		ldr	r4, [r1, #4]
 1037 01a2 4CEA0404 		orr	r4, ip, r4
 1038 01a6 DC60     		str	r4, [r3, #12]
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 1039              		.loc 1 2835 0
 1040 01a8 0C68     		ldr	r4, [r1]
 1041 01aa 14F0010F 		tst	r4, #1
 1042 01ae 06D0     		beq	.L44
2837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 1043              		.loc 1 2837 0
 1044 01b0 DC68     		ldr	r4, [r3, #12]
 1045 01b2 24F4403C 		bic	ip, r4, #196608
 1046 01b6 4C69     		ldr	r4, [r1, #20]
 1047 01b8 4CEA0404 		orr	r4, ip, r4
 1048 01bc DC60     		str	r4, [r3, #12]
 1049              	.L44:
2840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 1050              		.loc 1 2840 0
 1051 01be 0C68     		ldr	r4, [r1]
 1052 01c0 14F0200F 		tst	r4, #32
 1053 01c4 BCD0     		beq	.L43
2842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 1054              		.loc 1 2842 0
 1055 01c6 DC68     		ldr	r4, [r3, #12]
 1056 01c8 24F0406C 		bic	ip, r4, #201326592
 1057 01cc 0C69     		ldr	r4, [r1, #16]
 1058 01ce 4CEA0404 		orr	r4, ip, r4
 1059 01d2 DC60     		str	r4, [r3, #12]
 1060 01d4 B4E7     		b	.L43
 1061              	.LVL65:
 1062              	.L67:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* only if the packet is splitted into more than one descriptors > 1 */
2866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   while (txbuffer->next != NULL)
2867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Clear the LD bit of previous descriptor */
2869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     CLEAR_BIT(dmatxdesc->DESC3, ETH_DMATXNDESCRF_LD);
2870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Increment current tx descriptor index */
2871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     INCR_TX_DESC_INDEX(descidx, 1U);
2872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Get current descriptor address */
2873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     dmatxdesc = (ETH_DMADescTypeDef *)dmatxdesclist->TxDesc[descidx];
2874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Clear the FD bit of new Descriptor */
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     CLEAR_BIT(dmatxdesc->DESC3, ETH_DMATXNDESCRF_FD);
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Current Tx Descriptor Owned by DMA: cannot be used by the application  */
2879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(READ_BIT(dmatxdesc->DESC3, ETH_DMATXNDESCRF_OWN) == ETH_DMATXNDESCRF_OWN)
ARM GAS  /tmp/cctf834y.s 			page 71


2880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
2881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       descidx = firstdescidx;
2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       dmatxdesc = (ETH_DMADescTypeDef *)dmatxdesclist->TxDesc[descidx];
 1063              		.loc 1 2882 0
 1064 01d6 00EB8703 		add	r3, r0, r7, lsl #2
 1065              	.LVL66:
 1066 01da 9969     		ldr	r1, [r3, #24]
 1067              	.LVL67:
2883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* clear previous desc own bit */
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       for(idx = 0; idx < descnbr; idx ++)
 1068              		.loc 1 2885 0
 1069 01dc 0022     		movs	r2, #0
 1070              	.LVL68:
 1071 01de 04E0     		b	.L50
 1072              	.LVL69:
 1073              	.L51:
2886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         CLEAR_BIT(dmatxdesc->DESC3, ETH_DMATXNDESCRF_OWN);
2888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         /* Increment current tx descriptor index */
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         INCR_TX_DESC_INDEX(descidx, 1U);
2891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         /* Get current descriptor address */
2892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         dmatxdesc = (ETH_DMADescTypeDef *)dmatxdesclist->TxDesc[descidx];
 1074              		.loc 1 2892 0 discriminator 2
 1075 01e0 00EB8301 		add	r1, r0, r3, lsl #2
 1076              	.LVL70:
 1077 01e4 8969     		ldr	r1, [r1, #24]
 1078              	.LVL71:
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
 1079              		.loc 1 2885 0 discriminator 2
 1080 01e6 0132     		adds	r2, r2, #1
 1081              	.LVL72:
 1082 01e8 1F46     		mov	r7, r3
 1083              	.LVL73:
 1084              	.L50:
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
 1085              		.loc 1 2885 0 is_stmt 0 discriminator 1
 1086 01ea 9642     		cmp	r6, r2
 1087 01ec 08D9     		bls	.L65
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1088              		.loc 1 2887 0 is_stmt 1
 1089 01ee CB68     		ldr	r3, [r1, #12]
 1090 01f0 23F00043 		bic	r3, r3, #-2147483648
 1091 01f4 CB60     		str	r3, [r1, #12]
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         /* Get current descriptor address */
 1092              		.loc 1 2890 0
 1093 01f6 7B1C     		adds	r3, r7, #1
 1094              	.LVL74:
 1095 01f8 032B     		cmp	r3, #3
 1096 01fa F1D9     		bls	.L51
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         /* Get current descriptor address */
 1097              		.loc 1 2890 0 is_stmt 0 discriminator 1
 1098 01fc FB1E     		subs	r3, r7, #3
 1099              	.LVL75:
 1100 01fe EFE7     		b	.L51
 1101              	.LVL76:
ARM GAS  /tmp/cctf834y.s 			page 72


 1102              	.L65:
2893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
2894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       return HAL_ETH_ERROR_BUSY;
 1103              		.loc 1 2895 0 is_stmt 1
 1104 0200 0220     		movs	r0, #2
 1105              	.LVL77:
 1106 0202 F0BD     		pop	{r4, r5, r6, r7, pc}
 1107              	.LVL78:
 1108              	.L53:
2896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
2897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     descnbr += 1U;
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Get the next Tx buffer in the list */
2901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     txbuffer = (struct __ETH_BufferTypeDef *)txbuffer->next;
2902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set header or buffer 1 address */
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmatxdesc->DESC0, (uint32_t)txbuffer->buffer);
2905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set header or buffer 1 Length */
2906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     MODIFY_REG(dmatxdesc->DESC2, ETH_DMATXNDESCRF_B1L, txbuffer->len);
2907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if (txbuffer->next != NULL)
2909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
2910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get the next Tx buffer in the list */
2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       txbuffer = (struct __ETH_BufferTypeDef *)txbuffer->next;
2912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Set buffer 2 address */
2913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       WRITE_REG(dmatxdesc->DESC1, (uint32_t)txbuffer->buffer);
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Set buffer 2 Length */
2915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       MODIFY_REG(dmatxdesc->DESC2, ETH_DMATXNDESCRF_B2L, (txbuffer->len << 16));
2916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
2917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     else
2918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
2919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       WRITE_REG(dmatxdesc->DESC1, 0x0);
 1109              		.loc 1 2919 0
 1110 0204 0022     		movs	r2, #0
 1111 0206 5A60     		str	r2, [r3, #4]
2920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Set buffer 2 Length */
2921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       MODIFY_REG(dmatxdesc->DESC2, ETH_DMATXNDESCRF_B2L, 0x0U);
 1112              		.loc 1 2921 0
 1113 0208 9D68     		ldr	r5, [r3, #8]
 1114 020a 344A     		ldr	r2, .L68+8
 1115 020c 2A40     		ands	r2, r2, r5
 1116 020e 9A60     		str	r2, [r3, #8]
2901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1117              		.loc 1 2901 0
 1118 0210 6246     		mov	r2, ip
 1119 0212 4DE0     		b	.L54
 1120              	.LVL79:
 1121              	.L55:
2922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
2923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     if(READ_BIT(pTxConfig->Attributes, ETH_TX_PACKETS_FEATURES_TSO) != 0U)
2925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
2926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Set TCP payload length */
2927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       MODIFY_REG(dmatxdesc->DESC3, ETH_DMATXNDESCRF_TPL, pTxConfig->PayloadLen);
2928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Set TCP Segmentation Enabled bit */
ARM GAS  /tmp/cctf834y.s 			page 73


2929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       SET_BIT(dmatxdesc->DESC3, ETH_DMATXNDESCRF_TSE);
2930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
2931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     else
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Set the packet length */
2934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       MODIFY_REG(dmatxdesc->DESC3, ETH_DMATXNDESCRF_FL, pTxConfig->Length);
 1122              		.loc 1 2934 0
 1123 0214 DD68     		ldr	r5, [r3, #12]
 1124 0216 DFF8CCC0 		ldr	ip, .L68+16
 1125 021a 05EA0C0C 		and	ip, r5, ip
 1126 021e 4D68     		ldr	r5, [r1, #4]
 1127 0220 4CEA0505 		orr	r5, ip, r5
 1128 0224 DD60     		str	r5, [r3, #12]
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       if(READ_BIT(pTxConfig->Attributes, ETH_TX_PACKETS_FEATURES_CSUM) != 0U)
 1129              		.loc 1 2936 0
 1130 0226 0D68     		ldr	r5, [r1]
 1131 0228 15F0010F 		tst	r5, #1
 1132 022c 06D0     		beq	.L56
2937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
2938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         /* Checksum Insertion Control */
2939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         MODIFY_REG(dmatxdesc->DESC3, ETH_DMATXNDESCRF_CIC, pTxConfig->ChecksumCtrl);
 1133              		.loc 1 2939 0
 1134 022e DD68     		ldr	r5, [r3, #12]
 1135 0230 25F4403C 		bic	ip, r5, #196608
 1136 0234 4D69     		ldr	r5, [r1, #20]
 1137 0236 4CEA0505 		orr	r5, ip, r5
 1138 023a DD60     		str	r5, [r3, #12]
 1139              	.L56:
2940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
2941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
2942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set Own bit */
2944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(dmatxdesc->DESC3, ETH_DMATXNDESCRF_OWN);
 1140              		.loc 1 2944 0
 1141 023c DD68     		ldr	r5, [r3, #12]
 1142 023e 45F00045 		orr	r5, r5, #-2147483648
 1143 0242 DD60     		str	r5, [r3, #12]
2945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Mark it as NORMAL descriptor */
2946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     CLEAR_BIT(dmatxdesc->DESC3, ETH_DMATXNDESCRF_CTXT);
 1144              		.loc 1 2946 0
 1145 0244 DD68     		ldr	r5, [r3, #12]
 1146 0246 25F08045 		bic	r5, r5, #1073741824
 1147 024a DD60     		str	r5, [r3, #12]
 1148 024c 2546     		mov	r5, r4
 1149              	.LVL80:
 1150              	.L47:
2866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 1151              		.loc 1 2866 0
 1152 024e 9468     		ldr	r4, [r2, #8]
 1153 0250 002C     		cmp	r4, #0
 1154 0252 49D0     		beq	.L66
2869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Increment current tx descriptor index */
 1155              		.loc 1 2869 0
 1156 0254 DC68     		ldr	r4, [r3, #12]
 1157 0256 24F08054 		bic	r4, r4, #268435456
 1158 025a DC60     		str	r4, [r3, #12]
ARM GAS  /tmp/cctf834y.s 			page 74


2871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Get current descriptor address */
 1159              		.loc 1 2871 0
 1160 025c 6C1C     		adds	r4, r5, #1
 1161              	.LVL81:
 1162 025e 032C     		cmp	r4, #3
 1163 0260 00D9     		bls	.L48
2871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Get current descriptor address */
 1164              		.loc 1 2871 0 is_stmt 0 discriminator 1
 1165 0262 EC1E     		subs	r4, r5, #3
 1166              	.LVL82:
 1167              	.L48:
2873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1168              		.loc 1 2873 0 is_stmt 1
 1169 0264 00EB8403 		add	r3, r0, r4, lsl #2
 1170              	.LVL83:
 1171 0268 9B69     		ldr	r3, [r3, #24]
 1172              	.LVL84:
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1173              		.loc 1 2876 0
 1174 026a DD68     		ldr	r5, [r3, #12]
 1175 026c 25F00055 		bic	r5, r5, #536870912
 1176 0270 DD60     		str	r5, [r3, #12]
2879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 1177              		.loc 1 2879 0
 1178 0272 DD68     		ldr	r5, [r3, #12]
 1179 0274 002D     		cmp	r5, #0
 1180 0276 AEDB     		blt	.L67
2898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1181              		.loc 1 2898 0
 1182 0278 0136     		adds	r6, r6, #1
 1183              	.LVL85:
2901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1184              		.loc 1 2901 0
 1185 027a D2F808C0 		ldr	ip, [r2, #8]
 1186              	.LVL86:
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set header or buffer 1 Length */
 1187              		.loc 1 2904 0
 1188 027e DCF80020 		ldr	r2, [ip]
 1189 0282 1A60     		str	r2, [r3]
2906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1190              		.loc 1 2906 0
 1191 0284 9A68     		ldr	r2, [r3, #8]
 1192 0286 144D     		ldr	r5, .L68+4
 1193 0288 1540     		ands	r5, r5, r2
 1194 028a DCF80420 		ldr	r2, [ip, #4]
 1195 028e 2A43     		orrs	r2, r2, r5
 1196 0290 9A60     		str	r2, [r3, #8]
2908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 1197              		.loc 1 2908 0
 1198 0292 DCF80820 		ldr	r2, [ip, #8]
 1199 0296 002A     		cmp	r2, #0
 1200 0298 B4D0     		beq	.L53
 1201              	.LVL87:
2913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Set buffer 2 Length */
 1202              		.loc 1 2913 0
 1203 029a 1568     		ldr	r5, [r2]
 1204 029c 5D60     		str	r5, [r3, #4]
ARM GAS  /tmp/cctf834y.s 			page 75


2915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 1205              		.loc 1 2915 0
 1206 029e 9D68     		ldr	r5, [r3, #8]
 1207 02a0 DFF838C0 		ldr	ip, .L68+8
 1208 02a4 05EA0C0C 		and	ip, r5, ip
 1209 02a8 5568     		ldr	r5, [r2, #4]
 1210 02aa 4CEA0545 		orr	r5, ip, r5, lsl #16
 1211 02ae 9D60     		str	r5, [r3, #8]
 1212              	.L54:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 1213              		.loc 1 2924 0
 1214 02b0 0D68     		ldr	r5, [r1]
 1215 02b2 15F0100F 		tst	r5, #16
 1216 02b6 ADD0     		beq	.L55
2927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Set TCP Segmentation Enabled bit */
 1217              		.loc 1 2927 0
 1218 02b8 DD68     		ldr	r5, [r3, #12]
 1219 02ba DFF824C0 		ldr	ip, .L68+12
 1220 02be 05EA0C0C 		and	ip, r5, ip
 1221 02c2 CD69     		ldr	r5, [r1, #28]
 1222 02c4 4CEA0505 		orr	r5, ip, r5
 1223 02c8 DD60     		str	r5, [r3, #12]
2929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 1224              		.loc 1 2929 0
 1225 02ca DD68     		ldr	r5, [r3, #12]
 1226 02cc 45F48025 		orr	r5, r5, #262144
 1227 02d0 DD60     		str	r5, [r3, #12]
 1228 02d2 B3E7     		b	.L56
 1229              	.L69:
 1230              		.align	2
 1231              	.L68:
 1232 02d4 0000FFFF 		.word	-65536
 1233 02d8 00C0FFFF 		.word	-16384
 1234 02dc FFFF00C0 		.word	-1073676289
 1235 02e0 0000FCFF 		.word	-262144
 1236 02e4 0080FFFF 		.word	-32768
 1237              	.LVL88:
 1238              	.L66:
2947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(ItMode != ((uint32_t)RESET))
 1239              		.loc 1 2949 0
 1240 02e8 BEF1000F 		cmp	lr, #0
 1241 02ec 0AD0     		beq	.L58
2950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set Interrupt on completition bit */
2952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(dmatxdesc->DESC2, ETH_DMATXNDESCRF_IOC);
 1242              		.loc 1 2952 0
 1243 02ee 9A68     		ldr	r2, [r3, #8]
 1244              	.LVL89:
 1245 02f0 42F00042 		orr	r2, r2, #-2147483648
 1246 02f4 9A60     		str	r2, [r3, #8]
 1247              	.L59:
2953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   else
2955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
2956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Clear Interrupt on completition bit */
ARM GAS  /tmp/cctf834y.s 			page 76


2957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     CLEAR_BIT(dmatxdesc->DESC2, ETH_DMATXNDESCRF_IOC);
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
2959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Mark it as LAST descriptor */
2961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   SET_BIT(dmatxdesc->DESC3, ETH_DMATXNDESCRF_LD);
 1248              		.loc 1 2961 0
 1249 02f6 DA68     		ldr	r2, [r3, #12]
 1250 02f8 42F08052 		orr	r2, r2, #268435456
 1251 02fc DA60     		str	r2, [r3, #12]
2962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmatxdesclist->CurTxDesc = descidx;
 1252              		.loc 1 2963 0
 1253 02fe 8562     		str	r5, [r0, #40]
2964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
2965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Return function status */
2966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return HAL_ETH_ERROR_NONE;
 1254              		.loc 1 2966 0
 1255 0300 0020     		movs	r0, #0
 1256              	.LVL90:
 1257 0302 F0BD     		pop	{r4, r5, r6, r7, pc}
 1258              	.LVL91:
 1259              	.L58:
2957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1260              		.loc 1 2957 0
 1261 0304 9A68     		ldr	r2, [r3, #8]
 1262              	.LVL92:
 1263 0306 22F00042 		bic	r2, r2, #-2147483648
 1264 030a 9A60     		str	r2, [r3, #8]
 1265 030c F3E7     		b	.L59
 1266              	.LVL93:
 1267              	.L60:
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1268              		.loc 1 2729 0
 1269 030e 0220     		movs	r0, #2
 1270              	.LVL94:
2967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 1271              		.loc 1 2967 0
 1272 0310 F0BD     		pop	{r4, r5, r6, r7, pc}
 1273              		.cfi_endproc
 1274              	.LFE191:
 1276 0312 00BF     		.section	.text.ETH_MAC_MDIO_ClkConfig,"ax",%progbits
 1277              		.align	1
 1278              		.syntax unified
 1279              		.thumb
 1280              		.thumb_func
 1281              		.fpu fpv5-d16
 1283              	ETH_MAC_MDIO_ClkConfig:
 1284              	.LFB188:
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t tmpreg, hclk;
 1285              		.loc 1 2584 0
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 0
 1288              		@ frame_needed = 0, uses_anonymous_args = 0
 1289              	.LVL95:
 1290 0000 38B5     		push	{r3, r4, r5, lr}
 1291              	.LCFI13:
 1292              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cctf834y.s 			page 77


 1293              		.cfi_offset 3, -16
 1294              		.cfi_offset 4, -12
 1295              		.cfi_offset 5, -8
 1296              		.cfi_offset 14, -4
 1297 0002 0546     		mov	r5, r0
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1298              		.loc 1 2588 0
 1299 0004 0368     		ldr	r3, [r0]
 1300 0006 D3F80042 		ldr	r4, [r3, #512]
 1301              	.LVL96:
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1302              		.loc 1 2591 0
 1303 000a 24F47064 		bic	r4, r4, #3840
 1304              	.LVL97:
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1305              		.loc 1 2594 0
 1306 000e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1307              	.LVL98:
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 1308              		.loc 1 2597 0
 1309 0012 114B     		ldr	r3, .L79
 1310 0014 0344     		add	r3, r3, r0
 1311 0016 114A     		ldr	r2, .L79+4
 1312 0018 9342     		cmp	r3, r2
 1313 001a 11D9     		bls	.L76
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 1314              		.loc 1 2602 0
 1315 001c 104B     		ldr	r3, .L79+8
 1316 001e 0344     		add	r3, r3, r0
 1317 0020 104A     		ldr	r2, .L79+12
 1318 0022 9342     		cmp	r3, r2
 1319 0024 12D9     		bls	.L77
2607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 1320              		.loc 1 2607 0
 1321 0026 104B     		ldr	r3, .L79+16
 1322 0028 0344     		add	r3, r3, r0
 1323 002a 104A     		ldr	r2, .L79+20
 1324 002c 9342     		cmp	r3, r2
 1325 002e 09D9     		bls	.L72
2612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 1326              		.loc 1 2612 0
 1327 0030 0F4B     		ldr	r3, .L79+24
 1328 0032 0344     		add	r3, r3, r0
 1329 0034 0F4A     		ldr	r2, .L79+28
 1330 0036 9342     		cmp	r3, r2
 1331 0038 0BD9     		bls	.L78
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1332              		.loc 1 2620 0
 1333 003a 44F48064 		orr	r4, r4, #1024
 1334              	.LVL99:
 1335 003e 01E0     		b	.L72
 1336              	.L76:
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1337              		.loc 1 2600 0
 1338 0040 44F40074 		orr	r4, r4, #512
 1339              	.LVL100:
 1340              	.L72:
ARM GAS  /tmp/cctf834y.s 			page 78


2624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 1341              		.loc 1 2624 0
 1342 0044 2B68     		ldr	r3, [r5]
 1343 0046 C3F80042 		str	r4, [r3, #512]
 1344 004a 38BD     		pop	{r3, r4, r5, pc}
 1345              	.LVL101:
 1346              	.L77:
2605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1347              		.loc 1 2605 0
 1348 004c 44F44074 		orr	r4, r4, #768
 1349              	.LVL102:
 1350 0050 F8E7     		b	.L72
 1351              	.L78:
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1352              		.loc 1 2615 0
 1353 0052 44F48074 		orr	r4, r4, #256
 1354              	.LVL103:
 1355 0056 F5E7     		b	.L72
 1356              	.L80:
 1357              		.align	2
 1358              	.L79:
 1359 0058 00D3CEFE 		.word	-20000000
 1360 005c BFE1E400 		.word	14999999
 1361 0060 40F1E9FD 		.word	-35000000
 1362 0064 3F787D01 		.word	24999999
 1363 0068 00796CFC 		.word	-60000000
 1364 006c FF596202 		.word	39999999
 1365 0070 001F0AFA 		.word	-100000000
 1366 0074 7FF0FA02 		.word	49999999
 1367              		.cfi_endproc
 1368              	.LFE188:
 1370              		.section	.text.HAL_ETH_MspInit,"ax",%progbits
 1371              		.align	1
 1372              		.weak	HAL_ETH_MspInit
 1373              		.syntax unified
 1374              		.thumb
 1375              		.thumb_func
 1376              		.fpu fpv5-d16
 1378              	HAL_ETH_MspInit:
 1379              	.LFB143:
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 1380              		.loc 1 435 0
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 0
 1383              		@ frame_needed = 0, uses_anonymous_args = 0
 1384              		@ link register save eliminated.
 1385              	.LVL104:
 1386 0000 7047     		bx	lr
 1387              		.cfi_endproc
 1388              	.LFE143:
 1390              		.section	.text.HAL_ETH_Init,"ax",%progbits
 1391              		.align	1
 1392              		.global	HAL_ETH_Init
 1393              		.syntax unified
 1394              		.thumb
 1395              		.thumb_func
 1396              		.fpu fpv5-d16
ARM GAS  /tmp/cctf834y.s 			page 79


 1398              	HAL_ETH_Init:
 1399              	.LFB141:
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t tickstart;
 1400              		.loc 1 277 0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 8
 1403              		@ frame_needed = 0, uses_anonymous_args = 0
 1404              	.LVL105:
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 1405              		.loc 1 280 0
 1406 0000 0028     		cmp	r0, #0
 1407 0002 00F08C80 		beq	.L90
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t tickstart;
 1408              		.loc 1 277 0
 1409 0006 30B5     		push	{r4, r5, lr}
 1410              	.LCFI14:
 1411              		.cfi_def_cfa_offset 12
 1412              		.cfi_offset 4, -12
 1413              		.cfi_offset 5, -8
 1414              		.cfi_offset 14, -4
 1415 0008 83B0     		sub	sp, sp, #12
 1416              	.LCFI15:
 1417              		.cfi_def_cfa_offset 24
 1418 000a 0446     		mov	r4, r0
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 1419              		.loc 1 306 0
 1420 000c 436D     		ldr	r3, [r0, #84]
 1421 000e 8BB3     		cbz	r3, .L95
 1422              	.LVL106:
 1423              	.L84:
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1424              		.loc 1 313 0
 1425 0010 2323     		movs	r3, #35
 1426 0012 6365     		str	r3, [r4, #84]
 1427              	.LBB2:
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1428              		.loc 1 315 0
 1429 0014 434B     		ldr	r3, .L97
 1430 0016 D3F8F420 		ldr	r2, [r3, #244]
 1431 001a 42F00202 		orr	r2, r2, #2
 1432 001e C3F8F420 		str	r2, [r3, #244]
 1433 0022 D3F8F430 		ldr	r3, [r3, #244]
 1434 0026 03F00203 		and	r3, r3, #2
 1435 002a 0193     		str	r3, [sp, #4]
 1436 002c 019B     		ldr	r3, [sp, #4]
 1437              	.LBE2:
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 1438              		.loc 1 317 0
 1439 002e 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 1440 0030 1BBB     		cbnz	r3, .L85
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1441              		.loc 1 319 0
 1442 0032 0020     		movs	r0, #0
 1443 0034 FFF7FEFF 		bl	HAL_SYSCFG_ETHInterfaceSelect
 1444              	.LVL107:
 1445              	.L86:
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
ARM GAS  /tmp/cctf834y.s 			page 80


 1446              		.loc 1 329 0
 1447 0038 2368     		ldr	r3, [r4]
 1448 003a 03F58053 		add	r3, r3, #4096
 1449 003e 1A68     		ldr	r2, [r3]
 1450 0040 42F00102 		orr	r2, r2, #1
 1451 0044 1A60     		str	r2, [r3]
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1452              		.loc 1 332 0
 1453 0046 FFF7FEFF 		bl	HAL_GetTick
 1454              	.LVL108:
 1455 004a 0546     		mov	r5, r0
 1456              	.LVL109:
 1457              	.L87:
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 1458              		.loc 1 335 0
 1459 004c 2368     		ldr	r3, [r4]
 1460 004e 03F58053 		add	r3, r3, #4096
 1461 0052 1B68     		ldr	r3, [r3]
 1462 0054 13F0010F 		tst	r3, #1
 1463 0058 14D0     		beq	.L96
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 1464              		.loc 1 337 0
 1465 005a FFF7FEFF 		bl	HAL_GetTick
 1466              	.LVL110:
 1467 005e 401B     		subs	r0, r0, r5
 1468 0060 B0F5FA7F 		cmp	r0, #500
 1469 0064 F2D9     		bls	.L87
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Set State as Error */
 1470              		.loc 1 340 0
 1471 0066 0423     		movs	r3, #4
 1472 0068 E365     		str	r3, [r4, #92]
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Return Error */
 1473              		.loc 1 342 0
 1474 006a E023     		movs	r3, #224
 1475 006c 6365     		str	r3, [r4, #84]
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 1476              		.loc 1 344 0
 1477 006e 0120     		movs	r0, #1
 1478              	.LVL111:
 1479              	.L83:
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1480              		.loc 1 393 0
 1481 0070 03B0     		add	sp, sp, #12
 1482              	.LCFI16:
 1483              		.cfi_remember_state
 1484              		.cfi_def_cfa_offset 12
 1485              		@ sp needed
 1486 0072 30BD     		pop	{r4, r5, pc}
 1487              	.LVL112:
 1488              	.L95:
 1489              	.LCFI17:
 1490              		.cfi_restore_state
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1491              		.loc 1 309 0
 1492 0074 FFF7FEFF 		bl	HAL_ETH_MspInit
 1493              	.LVL113:
 1494 0078 CAE7     		b	.L84
ARM GAS  /tmp/cctf834y.s 			page 81


 1495              	.L85:
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1496              		.loc 1 323 0
 1497 007a 4FF40000 		mov	r0, #8388608
 1498 007e FFF7FEFF 		bl	HAL_SYSCFG_ETHInterfaceSelect
 1499              	.LVL114:
 1500 0082 D9E7     		b	.L86
 1501              	.LVL115:
 1502              	.L96:
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1503              		.loc 1 349 0
 1504 0084 2046     		mov	r0, r4
 1505 0086 FFF7FEFF 		bl	ETH_MAC_MDIO_ClkConfig
 1506              	.LVL116:
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1507              		.loc 1 352 0
 1508 008a 2568     		ldr	r5, [r4]
 1509              	.LVL117:
 1510 008c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1511              	.LVL118:
 1512 0090 254B     		ldr	r3, .L97+4
 1513 0092 A3FB0023 		umull	r2, r3, r3, r0
 1514 0096 9B0C     		lsrs	r3, r3, #18
 1515 0098 013B     		subs	r3, r3, #1
 1516 009a C5F8DC30 		str	r3, [r5, #220]
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1517              		.loc 1 355 0
 1518 009e 2046     		mov	r0, r4
 1519 00a0 FFF7FEFF 		bl	ETH_MACDMAConfig
 1520              	.LVL119:
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1521              		.loc 1 358 0
 1522 00a4 2268     		ldr	r2, [r4]
 1523 00a6 02F58852 		add	r2, r2, #4352
 1524 00aa 1368     		ldr	r3, [r2]
 1525 00ac 23F4E013 		bic	r3, r3, #1835008
 1526 00b0 43F40023 		orr	r3, r3, #524288
 1527 00b4 1360     		str	r3, [r2]
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 1528              		.loc 1 361 0
 1529 00b6 6369     		ldr	r3, [r4, #20]
 1530 00b8 13F0030F 		tst	r3, #3
 1531 00bc 04D0     		beq	.L89
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Set State as Error */
 1532              		.loc 1 364 0
 1533 00be 0120     		movs	r0, #1
 1534 00c0 E065     		str	r0, [r4, #92]
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Return Error */
 1535              		.loc 1 366 0
 1536 00c2 E023     		movs	r3, #224
 1537 00c4 6365     		str	r3, [r4, #84]
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1538              		.loc 1 368 0
 1539 00c6 D3E7     		b	.L83
 1540              	.L89:
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1541              		.loc 1 372 0
ARM GAS  /tmp/cctf834y.s 			page 82


 1542 00c8 2068     		ldr	r0, [r4]
 1543 00ca 41F20811 		movw	r1, #4360
 1544 00ce 4558     		ldr	r5, [r0, r1]
 1545 00d0 164A     		ldr	r2, .L97+8
 1546 00d2 2A40     		ands	r2, r2, r5
 1547 00d4 42EA4303 		orr	r3, r2, r3, lsl #1
 1548 00d8 4350     		str	r3, [r0, r1]
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1549              		.loc 1 376 0
 1550 00da 2046     		mov	r0, r4
 1551 00dc FFF7FEFF 		bl	ETH_DMATxDescListInit
 1552              	.LVL120:
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1553              		.loc 1 379 0
 1554 00e0 2046     		mov	r0, r4
 1555 00e2 FFF7FEFF 		bl	ETH_DMARxDescListInit
 1556              	.LVL121:
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set MAC addr bits 0 to 31 */
 1557              		.loc 1 383 0
 1558 00e6 2168     		ldr	r1, [r4]
 1559 00e8 6268     		ldr	r2, [r4, #4]
 1560 00ea 5079     		ldrb	r0, [r2, #5]	@ zero_extendqisi2
 1561 00ec 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 1562 00ee 43EA0023 		orr	r3, r3, r0, lsl #8
 1563 00f2 C1F80033 		str	r3, [r1, #768]
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                              ((uint32_t)(heth->Init.MACAddr[1]) << 8) | (uint32_t)heth->Init.MACAdd
 1564              		.loc 1 385 0
 1565 00f6 2168     		ldr	r1, [r4]
 1566 00f8 6268     		ldr	r2, [r4, #4]
 1567 00fa D078     		ldrb	r0, [r2, #3]	@ zero_extendqisi2
 1568 00fc 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 1569 00fe 1B04     		lsls	r3, r3, #16
 1570 0100 43EA0063 		orr	r3, r3, r0, lsl #24
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1571              		.loc 1 386 0
 1572 0104 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                              ((uint32_t)(heth->Init.MACAddr[1]) << 8) | (uint32_t)heth->Init.MACAdd
 1573              		.loc 1 385 0
 1574 0106 43EA0023 		orr	r3, r3, r0, lsl #8
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1575              		.loc 1 386 0
 1576 010a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1577 010c 1343     		orrs	r3, r3, r2
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                              ((uint32_t)(heth->Init.MACAddr[1]) << 8) | (uint32_t)heth->Init.MACAdd
 1578              		.loc 1 385 0
 1579 010e C1F80433 		str	r3, [r1, #772]
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   heth->gState = HAL_ETH_STATE_READY;
 1580              		.loc 1 388 0
 1581 0112 0020     		movs	r0, #0
 1582 0114 E065     		str	r0, [r4, #92]
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   heth->RxState = HAL_ETH_STATE_READY;
 1583              		.loc 1 389 0
 1584 0116 1023     		movs	r3, #16
 1585 0118 6365     		str	r3, [r4, #84]
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1586              		.loc 1 390 0
 1587 011a A365     		str	r3, [r4, #88]
ARM GAS  /tmp/cctf834y.s 			page 83


 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 1588              		.loc 1 392 0
 1589 011c A8E7     		b	.L83
 1590              	.LVL122:
 1591              	.L90:
 1592              	.LCFI18:
 1593              		.cfi_def_cfa_offset 0
 1594              		.cfi_restore 4
 1595              		.cfi_restore 5
 1596              		.cfi_restore 14
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1597              		.loc 1 282 0
 1598 011e 0120     		movs	r0, #1
 1599              	.LVL123:
 1600 0120 7047     		bx	lr
 1601              	.L98:
 1602 0122 00BF     		.align	2
 1603              	.L97:
 1604 0124 00440258 		.word	1476543488
 1605 0128 83DE1B43 		.word	1125899907
 1606 012c 0180FFFF 		.word	-32767
 1607              		.cfi_endproc
 1608              	.LFE141:
 1610              		.section	.text.HAL_ETH_MspDeInit,"ax",%progbits
 1611              		.align	1
 1612              		.weak	HAL_ETH_MspDeInit
 1613              		.syntax unified
 1614              		.thumb
 1615              		.thumb_func
 1616              		.fpu fpv5-d16
 1618              	HAL_ETH_MspDeInit:
 1619              	.LFB144:
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 1620              		.loc 1 450 0
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 0
 1623              		@ frame_needed = 0, uses_anonymous_args = 0
 1624              		@ link register save eliminated.
 1625              	.LVL124:
 1626 0000 7047     		bx	lr
 1627              		.cfi_endproc
 1628              	.LFE144:
 1630              		.section	.text.HAL_ETH_DeInit,"ax",%progbits
 1631              		.align	1
 1632              		.global	HAL_ETH_DeInit
 1633              		.syntax unified
 1634              		.thumb
 1635              		.thumb_func
 1636              		.fpu fpv5-d16
 1638              	HAL_ETH_DeInit:
 1639              	.LFB142:
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
 1640              		.loc 1 402 0
 1641              		.cfi_startproc
 1642              		@ args = 0, pretend = 0, frame = 0
 1643              		@ frame_needed = 0, uses_anonymous_args = 0
 1644              	.LVL125:
ARM GAS  /tmp/cctf834y.s 			page 84


 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set the ETH peripheral state to BUSY */
 1645              		.loc 1 402 0
 1646 0000 10B5     		push	{r4, lr}
 1647              	.LCFI19:
 1648              		.cfi_def_cfa_offset 8
 1649              		.cfi_offset 4, -8
 1650              		.cfi_offset 14, -4
 1651 0002 0446     		mov	r4, r0
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1652              		.loc 1 404 0
 1653 0004 2323     		movs	r3, #35
 1654 0006 4365     		str	r3, [r0, #84]
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1655              		.loc 1 417 0
 1656 0008 FFF7FEFF 		bl	HAL_ETH_MspDeInit
 1657              	.LVL126:
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1658              		.loc 1 422 0
 1659 000c 0020     		movs	r0, #0
 1660 000e 6065     		str	r0, [r4, #84]
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1661              		.loc 1 426 0
 1662 0010 10BD     		pop	{r4, pc}
 1663              		.cfi_endproc
 1664              	.LFE142:
 1666              		.section	.text.HAL_ETH_DescAssignMemory,"ax",%progbits
 1667              		.align	1
 1668              		.global	HAL_ETH_DescAssignMemory
 1669              		.syntax unified
 1670              		.thumb
 1671              		.thumb_func
 1672              		.fpu fpv5-d16
 1674              	HAL_ETH_DescAssignMemory:
 1675              	.LFB145:
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_DMADescTypeDef *dmarxdesc = (ETH_DMADescTypeDef *)heth->RxDescList.RxDesc[Index];
 1676              		.loc 1 691 0
 1677              		.cfi_startproc
 1678              		@ args = 0, pretend = 0, frame = 0
 1679              		@ frame_needed = 0, uses_anonymous_args = 0
 1680              		@ link register save eliminated.
 1681              	.LVL127:
 1682 0000 30B4     		push	{r4, r5}
 1683              	.LCFI20:
 1684              		.cfi_def_cfa_offset 8
 1685              		.cfi_offset 4, -8
 1686              		.cfi_offset 5, -4
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1687              		.loc 1 692 0
 1688 0002 01F10A04 		add	r4, r1, #10
 1689 0006 00EB8404 		add	r4, r0, r4, lsl #2
 1690 000a 6468     		ldr	r4, [r4, #4]
 1691              	.LVL128:
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 1692              		.loc 1 694 0
 1693 000c 0329     		cmp	r1, #3
 1694 000e 94BF     		ite	ls
 1695 0010 0021     		movls	r1, #0
ARM GAS  /tmp/cctf834y.s 			page 85


 1696              	.LVL129:
 1697 0012 0121     		movhi	r1, #1
 1698 0014 002A     		cmp	r2, #0
 1699 0016 08BF     		it	eq
 1700 0018 41F00101 		orreq	r1, r1, #1
 1701 001c 99B9     		cbnz	r1, .L107
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* store buffer address */
 1702              		.loc 1 703 0
 1703 001e 2260     		str	r2, [r4]
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* set buffer address valid bit to RDES3 */
 1704              		.loc 1 705 0
 1705 0020 2261     		str	r2, [r4, #16]
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1706              		.loc 1 707 0
 1707 0022 E268     		ldr	r2, [r4, #12]
 1708              	.LVL130:
 1709 0024 42F08072 		orr	r2, r2, #16777216
 1710 0028 E260     		str	r2, [r4, #12]
 1711              	.LVL131:
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 1712              		.loc 1 709 0
 1713 002a 2BB1     		cbz	r3, .L105
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****      /* store buffer 2 address */
 1714              		.loc 1 712 0
 1715 002c A360     		str	r3, [r4, #8]
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* set buffer 2 address valid bit to RDES3 */
 1716              		.loc 1 714 0
 1717 002e 6361     		str	r3, [r4, #20]
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1718              		.loc 1 716 0
 1719 0030 E368     		ldr	r3, [r4, #12]
 1720              	.LVL132:
 1721 0032 43F00073 		orr	r3, r3, #33554432
 1722 0036 E360     		str	r3, [r4, #12]
 1723              	.LVL133:
 1724              	.L105:
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1725              		.loc 1 719 0
 1726 0038 E368     		ldr	r3, [r4, #12]
 1727 003a 43F00043 		orr	r3, r3, #-2147483648
 1728 003e E360     		str	r3, [r4, #12]
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 1729              		.loc 1 721 0
 1730 0040 0020     		movs	r0, #0
 1731              	.LVL134:
 1732              	.L104:
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1733              		.loc 1 722 0
 1734 0042 30BC     		pop	{r4, r5}
 1735              	.LCFI21:
 1736              		.cfi_remember_state
 1737              		.cfi_restore 5
 1738              		.cfi_restore 4
 1739              		.cfi_def_cfa_offset 0
 1740              	.LVL135:
 1741 0044 7047     		bx	lr
 1742              	.LVL136:
ARM GAS  /tmp/cctf834y.s 			page 86


 1743              	.L107:
 1744              	.LCFI22:
 1745              		.cfi_restore_state
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Return Error */
 1746              		.loc 1 697 0
 1747 0046 0123     		movs	r3, #1
 1748              	.LVL137:
 1749 0048 C365     		str	r3, [r0, #92]
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1750              		.loc 1 699 0
 1751 004a 1846     		mov	r0, r3
 1752              	.LVL138:
 1753 004c F9E7     		b	.L104
 1754              		.cfi_endproc
 1755              	.LFE145:
 1757              		.section	.text.HAL_ETH_Start,"ax",%progbits
 1758              		.align	1
 1759              		.global	HAL_ETH_Start
 1760              		.syntax unified
 1761              		.thumb
 1762              		.thumb_func
 1763              		.fpu fpv5-d16
 1765              	HAL_ETH_Start:
 1766              	.LFB146:
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(heth->gState == HAL_ETH_STATE_READY)
 1767              		.loc 1 750 0
 1768              		.cfi_startproc
 1769              		@ args = 0, pretend = 0, frame = 0
 1770              		@ frame_needed = 0, uses_anonymous_args = 0
 1771              		@ link register save eliminated.
 1772              	.LVL139:
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 1773              		.loc 1 751 0
 1774 0000 436D     		ldr	r3, [r0, #84]
 1775 0002 102B     		cmp	r3, #16
 1776 0004 01D0     		beq	.L111
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1777              		.loc 1 780 0
 1778 0006 0120     		movs	r0, #1
 1779              	.LVL140:
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1780              		.loc 1 782 0
 1781 0008 7047     		bx	lr
 1782              	.LVL141:
 1783              	.L111:
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1784              		.loc 1 753 0
 1785 000a 2323     		movs	r3, #35
 1786 000c 4365     		str	r3, [r0, #84]
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1787              		.loc 1 756 0
 1788 000e 0268     		ldr	r2, [r0]
 1789 0010 1368     		ldr	r3, [r2]
 1790 0012 43F00203 		orr	r3, r3, #2
 1791 0016 1360     		str	r3, [r2]
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1792              		.loc 1 759 0
ARM GAS  /tmp/cctf834y.s 			page 87


 1793 0018 0268     		ldr	r2, [r0]
 1794 001a 1368     		ldr	r3, [r2]
 1795 001c 43F00103 		orr	r3, r3, #1
 1796 0020 1360     		str	r3, [r2]
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1797              		.loc 1 762 0
 1798 0022 0268     		ldr	r2, [r0]
 1799 0024 D2F8003D 		ldr	r3, [r2, #3328]
 1800 0028 43F00103 		orr	r3, r3, #1
 1801 002c C2F8003D 		str	r3, [r2, #3328]
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1802              		.loc 1 765 0
 1803 0030 0168     		ldr	r1, [r0]
 1804 0032 41F20412 		movw	r2, #4356
 1805 0036 8B58     		ldr	r3, [r1, r2]
 1806 0038 43F00103 		orr	r3, r3, #1
 1807 003c 8B50     		str	r3, [r1, r2]
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1808              		.loc 1 768 0
 1809 003e 0168     		ldr	r1, [r0]
 1810 0040 41F20812 		movw	r2, #4360
 1811 0044 8B58     		ldr	r3, [r1, r2]
 1812 0046 43F00103 		orr	r3, r3, #1
 1813 004a 8B50     		str	r3, [r1, r2]
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1814              		.loc 1 771 0
 1815 004c 0368     		ldr	r3, [r0]
 1816 004e 03F58B53 		add	r3, r3, #4448
 1817 0052 1A68     		ldr	r2, [r3]
 1818 0054 42F48172 		orr	r2, r2, #258
 1819 0058 1A60     		str	r2, [r3]
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->RxState = HAL_ETH_STATE_BUSY_RX;
 1820              		.loc 1 773 0
 1821 005a 1023     		movs	r3, #16
 1822 005c 4365     		str	r3, [r0, #84]
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1823              		.loc 1 774 0
 1824 005e 2223     		movs	r3, #34
 1825 0060 8365     		str	r3, [r0, #88]
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1826              		.loc 1 776 0
 1827 0062 0020     		movs	r0, #0
 1828              	.LVL142:
 1829 0064 7047     		bx	lr
 1830              		.cfi_endproc
 1831              	.LFE146:
 1833              		.section	.text.HAL_ETH_Start_IT,"ax",%progbits
 1834              		.align	1
 1835              		.global	HAL_ETH_Start_IT
 1836              		.syntax unified
 1837              		.thumb
 1838              		.thumb_func
 1839              		.fpu fpv5-d16
 1841              	HAL_ETH_Start_IT:
 1842              	.LFB147:
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t descindex = 0, counter;
 1843              		.loc 1 791 0
ARM GAS  /tmp/cctf834y.s 			page 88


 1844              		.cfi_startproc
 1845              		@ args = 0, pretend = 0, frame = 0
 1846              		@ frame_needed = 0, uses_anonymous_args = 0
 1847              		@ link register save eliminated.
 1848              	.LVL143:
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1849              		.loc 1 793 0
 1850 0000 C26A     		ldr	r2, [r0, #44]
 1851              	.LVL144:
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 1852              		.loc 1 795 0
 1853 0002 436D     		ldr	r3, [r0, #84]
 1854 0004 102B     		cmp	r3, #16
 1855 0006 01D0     		beq	.L122
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1856              		.loc 1 843 0
 1857 0008 0120     		movs	r0, #1
 1858              	.LVL145:
 1859 000a 7047     		bx	lr
 1860              	.LVL146:
 1861              	.L122:
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t descindex = 0, counter;
 1862              		.loc 1 791 0
 1863 000c 10B4     		push	{r4}
 1864              	.LCFI23:
 1865              		.cfi_def_cfa_offset 4
 1866              		.cfi_offset 4, -4
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1867              		.loc 1 797 0
 1868 000e 2323     		movs	r3, #35
 1869 0010 4365     		str	r3, [r0, #84]
 1870              	.LVL147:
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 1871              		.loc 1 800 0
 1872 0012 0021     		movs	r1, #0
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_DMADescTypeDef *dmarxdesc = (ETH_DMADescTypeDef *)heth->RxDescList.RxDesc[descindex];
 1873              		.loc 1 792 0
 1874 0014 0C46     		mov	r4, r1
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 1875              		.loc 1 800 0
 1876 0016 06E0     		b	.L114
 1877              	.LVL148:
 1878              	.L115:
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 1879              		.loc 1 804 0 discriminator 2
 1880 0018 03F10A02 		add	r2, r3, #10
 1881              	.LVL149:
 1882 001c 00EB8202 		add	r2, r0, r2, lsl #2
 1883 0020 5268     		ldr	r2, [r2, #4]
 1884              	.LVL150:
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 1885              		.loc 1 800 0 discriminator 2
 1886 0022 0131     		adds	r1, r1, #1
 1887              	.LVL151:
 1888 0024 1C46     		mov	r4, r3
 1889              	.LVL152:
 1890              	.L114:
ARM GAS  /tmp/cctf834y.s 			page 89


 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 1891              		.loc 1 800 0 is_stmt 0 discriminator 1
 1892 0026 0329     		cmp	r1, #3
 1893 0028 08D8     		bhi	.L123
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       INCR_RX_DESC_INDEX(descindex, 1U);
 1894              		.loc 1 802 0 is_stmt 1
 1895 002a D368     		ldr	r3, [r2, #12]
 1896 002c 43F08043 		orr	r3, r3, #1073741824
 1897 0030 D360     		str	r3, [r2, #12]
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       dmarxdesc = (ETH_DMADescTypeDef *)heth->RxDescList.RxDesc[descindex];
 1898              		.loc 1 803 0
 1899 0032 631C     		adds	r3, r4, #1
 1900              	.LVL153:
 1901 0034 032B     		cmp	r3, #3
 1902 0036 EFD9     		bls	.L115
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       dmarxdesc = (ETH_DMADescTypeDef *)heth->RxDescList.RxDesc[descindex];
 1903              		.loc 1 803 0 is_stmt 0 discriminator 1
 1904 0038 E31E     		subs	r3, r4, #3
 1905              	.LVL154:
 1906 003a EDE7     		b	.L115
 1907              	.LVL155:
 1908              	.L123:
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1909              		.loc 1 808 0 is_stmt 1
 1910 003c 0123     		movs	r3, #1
 1911 003e C364     		str	r3, [r0, #76]
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1912              		.loc 1 811 0
 1913 0040 0268     		ldr	r2, [r0]
 1914              	.LVL156:
 1915 0042 1368     		ldr	r3, [r2]
 1916 0044 43F00203 		orr	r3, r3, #2
 1917 0048 1360     		str	r3, [r2]
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1918              		.loc 1 814 0
 1919 004a 0268     		ldr	r2, [r0]
 1920 004c 1368     		ldr	r3, [r2]
 1921 004e 43F00103 		orr	r3, r3, #1
 1922 0052 1360     		str	r3, [r2]
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1923              		.loc 1 817 0
 1924 0054 0268     		ldr	r2, [r0]
 1925 0056 D2F8003D 		ldr	r3, [r2, #3328]
 1926 005a 43F00103 		orr	r3, r3, #1
 1927 005e C2F8003D 		str	r3, [r2, #3328]
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1928              		.loc 1 820 0
 1929 0062 0168     		ldr	r1, [r0]
 1930              	.LVL157:
 1931 0064 41F20412 		movw	r2, #4356
 1932 0068 8B58     		ldr	r3, [r1, r2]
 1933 006a 43F00103 		orr	r3, r3, #1
 1934 006e 8B50     		str	r3, [r1, r2]
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1935              		.loc 1 823 0
 1936 0070 0168     		ldr	r1, [r0]
 1937 0072 41F20812 		movw	r2, #4360
ARM GAS  /tmp/cctf834y.s 			page 90


 1938 0076 8B58     		ldr	r3, [r1, r2]
 1939 0078 43F00103 		orr	r3, r3, #1
 1940 007c 8B50     		str	r3, [r1, r2]
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1941              		.loc 1 826 0
 1942 007e 0368     		ldr	r3, [r0]
 1943 0080 03F58B53 		add	r3, r3, #4448
 1944 0084 1A68     		ldr	r2, [r3]
 1945 0086 42F48172 		orr	r2, r2, #258
 1946 008a 1A60     		str	r2, [r3]
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->RxState = HAL_ETH_STATE_BUSY_RX;
 1947              		.loc 1 828 0
 1948 008c 1023     		movs	r3, #16
 1949 008e 4365     		str	r3, [r0, #84]
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1950              		.loc 1 829 0
 1951 0090 2223     		movs	r3, #34
 1952 0092 8365     		str	r3, [r0, #88]
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                    ETH_DMACIER_FBEE | ETH_DMACIER_AIE));
 1953              		.loc 1 836 0
 1954 0094 0168     		ldr	r1, [r0]
 1955 0096 41F23412 		movw	r2, #4404
 1956 009a 8858     		ldr	r0, [r1, r2]
 1957              	.LVL158:
 1958 009c 4DF24103 		movw	r3, #53313
 1959 00a0 0343     		orrs	r3, r3, r0
 1960 00a2 8B50     		str	r3, [r1, r2]
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 1961              		.loc 1 839 0
 1962 00a4 0020     		movs	r0, #0
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1963              		.loc 1 845 0
 1964 00a6 5DF8044B 		ldr	r4, [sp], #4
 1965              	.LCFI24:
 1966              		.cfi_restore 4
 1967              		.cfi_def_cfa_offset 0
 1968              	.LVL159:
 1969 00aa 7047     		bx	lr
 1970              		.cfi_endproc
 1971              	.LFE147:
 1973              		.section	.text.HAL_ETH_Stop,"ax",%progbits
 1974              		.align	1
 1975              		.global	HAL_ETH_Stop
 1976              		.syntax unified
 1977              		.thumb
 1978              		.thumb_func
 1979              		.fpu fpv5-d16
 1981              	HAL_ETH_Stop:
 1982              	.LFB148:
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(heth->gState != HAL_ETH_STATE_RESET)
 1983              		.loc 1 854 0
 1984              		.cfi_startproc
 1985              		@ args = 0, pretend = 0, frame = 0
 1986              		@ frame_needed = 0, uses_anonymous_args = 0
 1987              		@ link register save eliminated.
 1988              	.LVL160:
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
ARM GAS  /tmp/cctf834y.s 			page 91


 1989              		.loc 1 855 0
 1990 0000 436D     		ldr	r3, [r0, #84]
 1991 0002 2BB3     		cbz	r3, .L126
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1992              		.loc 1 858 0
 1993 0004 2323     		movs	r3, #35
 1994 0006 4365     		str	r3, [r0, #84]
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 1995              		.loc 1 861 0
 1996 0008 0168     		ldr	r1, [r0]
 1997 000a 41F20412 		movw	r2, #4356
 1998 000e 8B58     		ldr	r3, [r1, r2]
 1999 0010 23F00103 		bic	r3, r3, #1
 2000 0014 8B50     		str	r3, [r1, r2]
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2001              		.loc 1 864 0
 2002 0016 0168     		ldr	r1, [r0]
 2003 0018 41F20812 		movw	r2, #4360
 2004 001c 8B58     		ldr	r3, [r1, r2]
 2005 001e 23F00103 		bic	r3, r3, #1
 2006 0022 8B50     		str	r3, [r1, r2]
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2007              		.loc 1 867 0
 2008 0024 0268     		ldr	r2, [r0]
 2009 0026 1368     		ldr	r3, [r2]
 2010 0028 23F00103 		bic	r3, r3, #1
 2011 002c 1360     		str	r3, [r2]
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2012              		.loc 1 870 0
 2013 002e 0268     		ldr	r2, [r0]
 2014 0030 D2F8003D 		ldr	r3, [r2, #3328]
 2015 0034 43F00103 		orr	r3, r3, #1
 2016 0038 C2F8003D 		str	r3, [r2, #3328]
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2017              		.loc 1 873 0
 2018 003c 0268     		ldr	r2, [r0]
 2019 003e 1368     		ldr	r3, [r2]
 2020 0040 23F00203 		bic	r3, r3, #2
 2021 0044 1360     		str	r3, [r2]
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->RxState = HAL_ETH_STATE_READY;
 2022              		.loc 1 875 0
 2023 0046 1023     		movs	r3, #16
 2024 0048 4365     		str	r3, [r0, #84]
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2025              		.loc 1 876 0
 2026 004a 8365     		str	r3, [r0, #88]
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 2027              		.loc 1 879 0
 2028 004c 0020     		movs	r0, #0
 2029              	.LVL161:
 2030 004e 7047     		bx	lr
 2031              	.LVL162:
 2032              	.L126:
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 2033              		.loc 1 883 0
 2034 0050 0120     		movs	r0, #1
 2035              	.LVL163:
ARM GAS  /tmp/cctf834y.s 			page 92


 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2036              		.loc 1 885 0
 2037 0052 7047     		bx	lr
 2038              		.cfi_endproc
 2039              	.LFE148:
 2041              		.section	.text.HAL_ETH_Stop_IT,"ax",%progbits
 2042              		.align	1
 2043              		.global	HAL_ETH_Stop_IT
 2044              		.syntax unified
 2045              		.thumb
 2046              		.thumb_func
 2047              		.fpu fpv5-d16
 2049              	HAL_ETH_Stop_IT:
 2050              	.LFB149:
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_DMADescTypeDef *dmarxdesc = (ETH_DMADescTypeDef *)heth->RxDescList.RxDesc[0];
 2051              		.loc 1 894 0
 2052              		.cfi_startproc
 2053              		@ args = 0, pretend = 0, frame = 0
 2054              		@ frame_needed = 0, uses_anonymous_args = 0
 2055              		@ link register save eliminated.
 2056              	.LVL164:
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t index;
 2057              		.loc 1 895 0
 2058 0000 C16A     		ldr	r1, [r0, #44]
 2059              	.LVL165:
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2060              		.loc 1 898 0
 2061 0002 436D     		ldr	r3, [r0, #84]
 2062 0004 002B     		cmp	r3, #0
 2063 0006 39D0     		beq	.L131
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_DMADescTypeDef *dmarxdesc = (ETH_DMADescTypeDef *)heth->RxDescList.RxDesc[0];
 2064              		.loc 1 894 0
 2065 0008 30B4     		push	{r4, r5}
 2066              	.LCFI25:
 2067              		.cfi_def_cfa_offset 8
 2068              		.cfi_offset 4, -8
 2069              		.cfi_offset 5, -4
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2070              		.loc 1 901 0
 2071 000a 2323     		movs	r3, #35
 2072 000c 4365     		str	r3, [r0, #84]
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2073              		.loc 1 906 0
 2074 000e 0468     		ldr	r4, [r0]
 2075 0010 41F23412 		movw	r2, #4404
 2076 0014 A558     		ldr	r5, [r4, r2]
 2077 0016 1A4B     		ldr	r3, .L136
 2078 0018 2B40     		ands	r3, r3, r5
 2079 001a A350     		str	r3, [r4, r2]
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2080              		.loc 1 909 0
 2081 001c 0468     		ldr	r4, [r0]
 2082 001e 41F20412 		movw	r2, #4356
 2083 0022 A358     		ldr	r3, [r4, r2]
 2084 0024 23F00103 		bic	r3, r3, #1
 2085 0028 A350     		str	r3, [r4, r2]
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
ARM GAS  /tmp/cctf834y.s 			page 93


 2086              		.loc 1 912 0
 2087 002a 0468     		ldr	r4, [r0]
 2088 002c 41F20812 		movw	r2, #4360
 2089 0030 A358     		ldr	r3, [r4, r2]
 2090 0032 23F00103 		bic	r3, r3, #1
 2091 0036 A350     		str	r3, [r4, r2]
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2092              		.loc 1 915 0
 2093 0038 0268     		ldr	r2, [r0]
 2094 003a 1368     		ldr	r3, [r2]
 2095 003c 23F00103 		bic	r3, r3, #1
 2096 0040 1360     		str	r3, [r2]
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2097              		.loc 1 918 0
 2098 0042 0268     		ldr	r2, [r0]
 2099 0044 D2F8003D 		ldr	r3, [r2, #3328]
 2100 0048 43F00103 		orr	r3, r3, #1
 2101 004c C2F8003D 		str	r3, [r2, #3328]
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2102              		.loc 1 921 0
 2103 0050 0268     		ldr	r2, [r0]
 2104 0052 1368     		ldr	r3, [r2]
 2105 0054 23F00203 		bic	r3, r3, #2
 2106 0058 1360     		str	r3, [r2]
 2107              	.LVL166:
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 2108              		.loc 1 924 0
 2109 005a 0022     		movs	r2, #0
 2110 005c 04E0     		b	.L129
 2111              	.LVL167:
 2112              	.L130:
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 2113              		.loc 1 926 0 discriminator 3
 2114 005e CB68     		ldr	r3, [r1, #12]
 2115 0060 23F08043 		bic	r3, r3, #1073741824
 2116 0064 CB60     		str	r3, [r1, #12]
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 2117              		.loc 1 924 0 discriminator 3
 2118 0066 0132     		adds	r2, r2, #1
 2119              	.LVL168:
 2120              	.L129:
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 2121              		.loc 1 924 0 is_stmt 0 discriminator 1
 2122 0068 032A     		cmp	r2, #3
 2123 006a F8D9     		bls	.L130
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2124              		.loc 1 929 0 is_stmt 1
 2125 006c 0023     		movs	r3, #0
 2126 006e C364     		str	r3, [r0, #76]
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     heth->RxState = HAL_ETH_STATE_READY;
 2127              		.loc 1 931 0
 2128 0070 1022     		movs	r2, #16
 2129              	.LVL169:
 2130 0072 4265     		str	r2, [r0, #84]
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2131              		.loc 1 932 0
 2132 0074 8265     		str	r2, [r0, #88]
ARM GAS  /tmp/cctf834y.s 			page 94


 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 2133              		.loc 1 935 0
 2134 0076 1846     		mov	r0, r3
 2135              	.LVL170:
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2136              		.loc 1 941 0
 2137 0078 30BC     		pop	{r4, r5}
 2138              	.LCFI26:
 2139              		.cfi_restore 5
 2140              		.cfi_restore 4
 2141              		.cfi_def_cfa_offset 0
 2142 007a 7047     		bx	lr
 2143              	.LVL171:
 2144              	.L131:
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 2145              		.loc 1 939 0
 2146 007c 0120     		movs	r0, #1
 2147              	.LVL172:
 2148 007e 7047     		bx	lr
 2149              	.L137:
 2150              		.align	2
 2151              	.L136:
 2152 0080 BE7FFFFF 		.word	-32834
 2153              		.cfi_endproc
 2154              	.LFE149:
 2156              		.section	.text.HAL_ETH_Transmit,"ax",%progbits
 2157              		.align	1
 2158              		.global	HAL_ETH_Transmit
 2159              		.syntax unified
 2160              		.thumb
 2161              		.thumb_func
 2162              		.fpu fpv5-d16
 2164              	HAL_ETH_Transmit:
 2165              	.LFB150:
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t tickstart;
 2166              		.loc 1 952 0
 2167              		.cfi_startproc
 2168              		@ args = 0, pretend = 0, frame = 0
 2169              		@ frame_needed = 0, uses_anonymous_args = 0
 2170              	.LVL173:
 2171 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2172              	.LCFI27:
 2173              		.cfi_def_cfa_offset 24
 2174              		.cfi_offset 3, -24
 2175              		.cfi_offset 4, -20
 2176              		.cfi_offset 5, -16
 2177              		.cfi_offset 6, -12
 2178              		.cfi_offset 7, -8
 2179              		.cfi_offset 14, -4
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2180              		.loc 1 956 0
 2181 0002 21B1     		cbz	r1, .L150
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2182              		.loc 1 962 0
 2183 0004 436D     		ldr	r3, [r0, #84]
 2184 0006 102B     		cmp	r3, #16
 2185 0008 07D0     		beq	.L151
ARM GAS  /tmp/cctf834y.s 			page 95


1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 2186              		.loc 1 1016 0
 2187 000a 0120     		movs	r0, #1
 2188              	.LVL174:
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2189              		.loc 1 1018 0
 2190 000c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2191              	.LVL175:
 2192              	.L150:
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
 2193              		.loc 1 958 0
 2194 000e C36D     		ldr	r3, [r0, #92]
 2195 0010 43F00103 		orr	r3, r3, #1
 2196 0014 C365     		str	r3, [r0, #92]
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 2197              		.loc 1 959 0
 2198 0016 0120     		movs	r0, #1
 2199              	.LVL176:
 2200 0018 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2201              	.LVL177:
 2202              	.L151:
 2203 001a 1546     		mov	r5, r2
 2204 001c 0446     		mov	r4, r0
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 2205              		.loc 1 965 0
 2206 001e 0022     		movs	r2, #0
 2207              	.LVL178:
 2208 0020 FFF7FEFF 		bl	ETH_Prepare_Tx_Descriptors
 2209              	.LVL179:
 2210 0024 80BB     		cbnz	r0, .L152
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2211              		.loc 1 972 0
 2212 0026 A36A     		ldr	r3, [r4, #40]
 2213 0028 9A1D     		adds	r2, r3, #6
 2214 002a 54F82260 		ldr	r6, [r4, r2, lsl #2]
 2215              	.LVL180:
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2216              		.loc 1 975 0
 2217 002e 0133     		adds	r3, r3, #1
 2218 0030 A362     		str	r3, [r4, #40]
 2219 0032 032B     		cmp	r3, #3
 2220 0034 01D9     		bls	.L142
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2221              		.loc 1 975 0 is_stmt 0 discriminator 1
 2222 0036 043B     		subs	r3, r3, #4
 2223 0038 A362     		str	r3, [r4, #40]
 2224              	.L142:
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2225              		.loc 1 979 0 is_stmt 1
 2226 003a 2368     		ldr	r3, [r4]
 2227 003c A26A     		ldr	r2, [r4, #40]
 2228 003e 0632     		adds	r2, r2, #6
 2229 0040 54F82220 		ldr	r2, [r4, r2, lsl #2]
 2230 0044 03F58953 		add	r3, r3, #4384
 2231 0048 1A60     		str	r2, [r3]
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2232              		.loc 1 981 0
ARM GAS  /tmp/cctf834y.s 			page 96


 2233 004a FFF7FEFF 		bl	HAL_GetTick
 2234              	.LVL181:
 2235 004e 0746     		mov	r7, r0
 2236              	.LVL182:
 2237              	.L145:
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 2238              		.loc 1 984 0
 2239 0050 F368     		ldr	r3, [r6, #12]
 2240 0052 002B     		cmp	r3, #0
 2241 0054 2ADA     		bge	.L153
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
 2242              		.loc 1 986 0
 2243 0056 2368     		ldr	r3, [r4]
 2244 0058 03F58B51 		add	r1, r3, #4448
 2245 005c 0968     		ldr	r1, [r1]
 2246 005e 11F4805F 		tst	r1, #4096
 2247 0062 17D1     		bne	.L154
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
 2248              		.loc 1 997 0
 2249 0064 B5F1FF3F 		cmp	r5, #-1
 2250 0068 F2D0     		beq	.L145
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         {
 2251              		.loc 1 999 0
 2252 006a FFF7FEFF 		bl	HAL_GetTick
 2253              	.LVL183:
 2254 006e C01B     		subs	r0, r0, r7
 2255 0070 8542     		cmp	r5, r0
 2256 0072 01D3     		bcc	.L146
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         {
 2257              		.loc 1 999 0 is_stmt 0 discriminator 1
 2258 0074 002D     		cmp	r5, #0
 2259 0076 EBD1     		bne	.L145
 2260              	.L146:
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           heth->gState = HAL_ETH_STATE_READY;
 2261              		.loc 1 1001 0 is_stmt 1
 2262 0078 E36D     		ldr	r3, [r4, #92]
 2263 007a 43F00403 		orr	r3, r3, #4
 2264 007e E365     		str	r3, [r4, #92]
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           return HAL_ERROR;
 2265              		.loc 1 1002 0
 2266 0080 1023     		movs	r3, #16
 2267 0082 6365     		str	r3, [r4, #84]
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         }
 2268              		.loc 1 1003 0
 2269 0084 0120     		movs	r0, #1
 2270 0086 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2271              	.LVL184:
 2272              	.L152:
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       return HAL_ERROR;
 2273              		.loc 1 968 0
 2274 0088 E36D     		ldr	r3, [r4, #92]
 2275 008a 43F00203 		orr	r3, r3, #2
 2276 008e E365     		str	r3, [r4, #92]
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 2277              		.loc 1 969 0
 2278 0090 0120     		movs	r0, #1
 2279 0092 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /tmp/cctf834y.s 			page 97


 2280              	.LVL185:
 2281              	.L154:
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         heth->DMAErrorCode = heth->Instance->DMACSR;
 2282              		.loc 1 988 0
 2283 0094 E26D     		ldr	r2, [r4, #92]
 2284 0096 42F00802 		orr	r2, r2, #8
 2285 009a E265     		str	r2, [r4, #92]
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         /* Set ETH HAL State to Ready */
 2286              		.loc 1 989 0
 2287 009c 03F58B53 		add	r3, r3, #4448
 2288 00a0 1B68     		ldr	r3, [r3]
 2289 00a2 2366     		str	r3, [r4, #96]
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         /* Return function status */
 2290              		.loc 1 991 0
 2291 00a4 E023     		movs	r3, #224
 2292 00a6 6365     		str	r3, [r4, #84]
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
 2293              		.loc 1 993 0
 2294 00a8 0120     		movs	r0, #1
 2295 00aa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2296              	.LVL186:
 2297              	.L153:
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2298              		.loc 1 1009 0
 2299 00ac 1023     		movs	r3, #16
 2300 00ae 6365     		str	r3, [r4, #84]
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 2301              		.loc 1 1012 0
 2302 00b0 0020     		movs	r0, #0
 2303 00b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2304              		.cfi_endproc
 2305              	.LFE150:
 2307              		.section	.text.HAL_ETH_Transmit_IT,"ax",%progbits
 2308              		.align	1
 2309              		.global	HAL_ETH_Transmit_IT
 2310              		.syntax unified
 2311              		.thumb
 2312              		.thumb_func
 2313              		.fpu fpv5-d16
 2315              	HAL_ETH_Transmit_IT:
 2316              	.LFB151:
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(pTxConfig == NULL)
 2317              		.loc 1 1028 0
 2318              		.cfi_startproc
 2319              		@ args = 0, pretend = 0, frame = 0
 2320              		@ frame_needed = 0, uses_anonymous_args = 0
 2321              	.LVL187:
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2322              		.loc 1 1029 0
 2323 0000 F9B1     		cbz	r1, .L159
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2324              		.loc 1 1034 0
 2325 0002 436D     		ldr	r3, [r0, #84]
 2326 0004 102B     		cmp	r3, #16
 2327 0006 01D0     		beq	.L165
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 2328              		.loc 1 1055 0
ARM GAS  /tmp/cctf834y.s 			page 98


 2329 0008 0120     		movs	r0, #1
 2330              	.LVL188:
 2331 000a 7047     		bx	lr
 2332              	.LVL189:
 2333              	.L165:
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(pTxConfig == NULL)
 2334              		.loc 1 1028 0
 2335 000c 10B5     		push	{r4, lr}
 2336              	.LCFI28:
 2337              		.cfi_def_cfa_offset 8
 2338              		.cfi_offset 4, -8
 2339              		.cfi_offset 14, -4
 2340 000e 0446     		mov	r4, r0
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 2341              		.loc 1 1037 0
 2342 0010 0122     		movs	r2, #1
 2343 0012 FFF7FEFF 		bl	ETH_Prepare_Tx_Descriptors
 2344              	.LVL190:
 2345 0016 80B9     		cbnz	r0, .L166
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2346              		.loc 1 1044 0
 2347 0018 A36A     		ldr	r3, [r4, #40]
 2348 001a 0133     		adds	r3, r3, #1
 2349 001c A362     		str	r3, [r4, #40]
 2350 001e 032B     		cmp	r3, #3
 2351 0020 01D9     		bls	.L158
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2352              		.loc 1 1044 0 is_stmt 0 discriminator 1
 2353 0022 043B     		subs	r3, r3, #4
 2354 0024 A362     		str	r3, [r4, #40]
 2355              	.L158:
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2356              		.loc 1 1048 0 is_stmt 1
 2357 0026 2368     		ldr	r3, [r4]
 2358 0028 A26A     		ldr	r2, [r4, #40]
 2359 002a 0632     		adds	r2, r2, #6
 2360 002c 54F82220 		ldr	r2, [r4, r2, lsl #2]
 2361 0030 03F58953 		add	r3, r3, #4384
 2362 0034 1A60     		str	r2, [r3]
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2363              		.loc 1 1050 0
 2364 0036 0020     		movs	r0, #0
 2365 0038 10BD     		pop	{r4, pc}
 2366              	.LVL191:
 2367              	.L166:
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       return HAL_ERROR;
 2368              		.loc 1 1039 0
 2369 003a 0223     		movs	r3, #2
 2370 003c E365     		str	r3, [r4, #92]
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 2371              		.loc 1 1040 0
 2372 003e 0120     		movs	r0, #1
 2373 0040 10BD     		pop	{r4, pc}
 2374              	.LVL192:
 2375              	.L159:
 2376              	.LCFI29:
 2377              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cctf834y.s 			page 99


 2378              		.cfi_restore 4
 2379              		.cfi_restore 14
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 2380              		.loc 1 1031 0
 2381 0042 0120     		movs	r0, #1
 2382              	.LVL193:
 2383 0044 7047     		bx	lr
 2384              		.cfi_endproc
 2385              	.LFE151:
 2387              		.section	.text.HAL_ETH_IsRxDataAvailable,"ax",%progbits
 2388              		.align	1
 2389              		.global	HAL_ETH_IsRxDataAvailable
 2390              		.syntax unified
 2391              		.thumb
 2392              		.thumb_func
 2393              		.fpu fpv5-d16
 2395              	HAL_ETH_IsRxDataAvailable:
 2396              	.LFB152:
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_RxDescListTypeDef *dmarxdesclist = &heth->RxDescList;
 2397              		.loc 1 1067 0
 2398              		.cfi_startproc
 2399              		@ args = 0, pretend = 0, frame = 0
 2400              		@ frame_needed = 0, uses_anonymous_args = 0
 2401              		@ link register save eliminated.
 2402              	.LVL194:
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_DMADescTypeDef *dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descidx];
 2403              		.loc 1 1069 0
 2404 0000 C26B     		ldr	r2, [r0, #60]
 2405              	.LVL195:
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t descscancnt = 0;
 2406              		.loc 1 1070 0
 2407 0002 00EB8203 		add	r3, r0, r2, lsl #2
 2408 0006 DB6A     		ldr	r3, [r3, #44]
 2409              	.LVL196:
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2410              		.loc 1 1074 0
 2411 0008 416C     		ldr	r1, [r0, #68]
 2412 000a 0029     		cmp	r1, #0
 2413 000c 74D1     		bne	.L186
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_RxDescListTypeDef *dmarxdesclist = &heth->RxDescList;
 2414              		.loc 1 1067 0
 2415 000e F0B4     		push	{r4, r5, r6, r7}
 2416              	.LCFI30:
 2417              		.cfi_def_cfa_offset 16
 2418              		.cfi_offset 4, -16
 2419              		.cfi_offset 5, -12
 2420              		.cfi_offset 6, -8
 2421              		.cfi_offset 7, -4
 2422 0010 0C46     		mov	r4, r1
 2423 0012 0D46     		mov	r5, r1
 2424 0014 0E46     		mov	r6, r1
 2425 0016 25E0     		b	.L169
 2426              	.LVL197:
 2427              	.L194:
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2428              		.loc 1 1089 0
 2429 0018 0135     		adds	r5, r5, #1
ARM GAS  /tmp/cctf834y.s 			page 100


 2430              	.LVL198:
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
 2431              		.loc 1 1091 0
 2432 001a 012D     		cmp	r5, #1
 2433 001c 18D0     		beq	.L193
 2434              	.LVL199:
 2435              	.L171:
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2436              		.loc 1 1097 0
 2437 001e 531C     		adds	r3, r2, #1
 2438              	.LVL200:
 2439 0020 032B     		cmp	r3, #3
 2440 0022 00D9     		bls	.L172
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2441              		.loc 1 1097 0 is_stmt 0 discriminator 1
 2442 0024 D31E     		subs	r3, r2, #3
 2443              	.LVL201:
 2444              	.L172:
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2445              		.loc 1 1101 0 is_stmt 1
 2446 0026 00EB8302 		add	r2, r0, r3, lsl #2
 2447 002a D26A     		ldr	r2, [r2, #44]
 2448              	.LVL202:
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
 2449              		.loc 1 1103 0
 2450 002c D168     		ldr	r1, [r2, #12]
 2451 002e 0029     		cmp	r1, #0
 2452 0030 09DB     		blt	.L173
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         {
 2453              		.loc 1 1105 0
 2454 0032 D268     		ldr	r2, [r2, #12]
 2455              	.LVL203:
 2456 0034 12F0804F 		tst	r2, #1073741824
 2457 0038 05D0     		beq	.L173
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****           /* Increment current rx descriptor index */
 2458              		.loc 1 1108 0
 2459 003a 0122     		movs	r2, #1
 2460 003c 8264     		str	r2, [r0, #72]
 2461              	.LVL204:
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         }
 2462              		.loc 1 1110 0
 2463 003e 9A18     		adds	r2, r3, r2
 2464              	.LVL205:
 2465 0040 032A     		cmp	r2, #3
 2466 0042 07D9     		bls	.L188
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         }
 2467              		.loc 1 1110 0 is_stmt 0 discriminator 1
 2468 0044 033B     		subs	r3, r3, #3
 2469              	.LVL206:
 2470              	.L173:
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       dmarxdesclist->FirstAppDesc = firstappdescidx;
 2471              		.loc 1 1114 0 is_stmt 1
 2472 0046 C363     		str	r3, [r0, #60]
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       dmarxdesclist->AppDescNbr = appdesccnt;
 2473              		.loc 1 1115 0
 2474 0048 0464     		str	r4, [r0, #64]
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
ARM GAS  /tmp/cctf834y.s 			page 101


 2475              		.loc 1 1116 0
 2476 004a 4564     		str	r5, [r0, #68]
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 2477              		.loc 1 1119 0
 2478 004c 0120     		movs	r0, #1
 2479              	.LVL207:
 2480 004e 51E0     		b	.L168
 2481              	.LVL208:
 2482              	.L193:
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
 2483              		.loc 1 1093 0
 2484 0050 1446     		mov	r4, r2
 2485              	.LVL209:
 2486 0052 E4E7     		b	.L171
 2487              	.LVL210:
 2488              	.L188:
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         }
 2489              		.loc 1 1110 0
 2490 0054 1346     		mov	r3, r2
 2491 0056 F6E7     		b	.L173
 2492              	.LVL211:
 2493              	.L175:
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 2494              		.loc 1 1131 0
 2495 0058 00EB8503 		add	r3, r0, r5, lsl #2
 2496 005c DB6A     		ldr	r3, [r3, #44]
 2497              	.LVL212:
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Increment the number of descriptors to be passed to the application */
 2498              		.loc 1 1124 0
 2499 005e 1446     		mov	r4, r2
 2500 0060 2A46     		mov	r2, r5
 2501              	.LVL213:
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2502              		.loc 1 1126 0
 2503 0062 0125     		movs	r5, #1
 2504              	.LVL214:
 2505              	.L169:
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2506              		.loc 1 1081 0
 2507 0064 DF68     		ldr	r7, [r3, #12]
 2508 0066 002F     		cmp	r7, #0
 2509 0068 19DB     		blt	.L178
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2510              		.loc 1 1081 0 is_stmt 0 discriminator 1
 2511 006a 032E     		cmp	r6, #3
 2512 006c 17D8     		bhi	.L178
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2513              		.loc 1 1083 0 is_stmt 1
 2514 006e 0136     		adds	r6, r6, #1
 2515              	.LVL215:
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 2516              		.loc 1 1086 0
 2517 0070 DF68     		ldr	r7, [r3, #12]
 2518 0072 17F0805F 		tst	r7, #268435456
 2519 0076 CFD1     		bne	.L194
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 2520              		.loc 1 1122 0
ARM GAS  /tmp/cctf834y.s 			page 102


 2521 0078 DB68     		ldr	r3, [r3, #12]
 2522              	.LVL216:
 2523 007a 13F0005F 		tst	r3, #536870912
 2524 007e 04D0     		beq	.L174
 2525              	.LVL217:
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get current descriptor address */
 2526              		.loc 1 1129 0
 2527 0080 551C     		adds	r5, r2, #1
 2528              	.LVL218:
 2529 0082 032D     		cmp	r5, #3
 2530 0084 E8D9     		bls	.L175
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get current descriptor address */
 2531              		.loc 1 1129 0 is_stmt 0 discriminator 1
 2532 0086 D51E     		subs	r5, r2, #3
 2533              	.LVL219:
 2534 0088 E6E7     		b	.L175
 2535              	.LVL220:
 2536              	.L174:
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2537              		.loc 1 1137 0 is_stmt 1
 2538 008a 0135     		adds	r5, r5, #1
 2539              	.LVL221:
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get current descriptor address */
 2540              		.loc 1 1140 0
 2541 008c 571C     		adds	r7, r2, #1
 2542              	.LVL222:
 2543 008e 032F     		cmp	r7, #3
 2544 0090 00D9     		bls	.L177
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get current descriptor address */
 2545              		.loc 1 1140 0 is_stmt 0 discriminator 1
 2546 0092 D71E     		subs	r7, r2, #3
 2547              	.LVL223:
 2548              	.L177:
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 2549              		.loc 1 1142 0 is_stmt 1
 2550 0094 00EB8703 		add	r3, r0, r7, lsl #2
 2551 0098 DB6A     		ldr	r3, [r3, #44]
 2552              	.LVL224:
 2553 009a 3A46     		mov	r2, r7
 2554 009c E2E7     		b	.L169
 2555              	.LVL225:
 2556              	.L178:
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2557              		.loc 1 1147 0
 2558 009e 35B3     		cbz	r5, .L180
 2559              	.LVL226:
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2560              		.loc 1 1150 0
 2561 00a0 00EB8403 		add	r3, r0, r4, lsl #2
 2562              	.LVL227:
 2563 00a4 DB6A     		ldr	r3, [r3, #44]
 2564              	.LVL228:
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 2565              		.loc 1 1152 0
 2566 00a6 04E0     		b	.L181
 2567              	.LVL229:
 2568              	.L184:
ARM GAS  /tmp/cctf834y.s 			page 103


1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 2569              		.loc 1 1173 0 discriminator 2
 2570 00a8 00EB8203 		add	r3, r0, r2, lsl #2
 2571              	.LVL230:
 2572 00ac DB6A     		ldr	r3, [r3, #44]
 2573              	.LVL231:
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 2574              		.loc 1 1152 0 discriminator 2
 2575 00ae 0131     		adds	r1, r1, #1
 2576              	.LVL232:
 2577 00b0 1446     		mov	r4, r2
 2578              	.LVL233:
 2579              	.L181:
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 2580              		.loc 1 1152 0 is_stmt 0 discriminator 1
 2581 00b2 A942     		cmp	r1, r5
 2582 00b4 1BD2     		bcs	.L180
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       WRITE_REG(dmarxdesc->DESC3, ETH_DMARXNDESCRF_BUF1V);
 2583              		.loc 1 1154 0 is_stmt 1
 2584 00b6 1A69     		ldr	r2, [r3, #16]
 2585 00b8 1A60     		str	r2, [r3]
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2586              		.loc 1 1155 0
 2587 00ba 4FF08072 		mov	r2, #16777216
 2588 00be DA60     		str	r2, [r3, #12]
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
 2589              		.loc 1 1157 0
 2590 00c0 5A69     		ldr	r2, [r3, #20]
 2591 00c2 2AB1     		cbz	r2, .L182
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         SET_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCRF_BUF2V);
 2592              		.loc 1 1159 0
 2593 00c4 5A69     		ldr	r2, [r3, #20]
 2594 00c6 9A60     		str	r2, [r3, #8]
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
 2595              		.loc 1 1160 0
 2596 00c8 DA68     		ldr	r2, [r3, #12]
 2597 00ca 42F00072 		orr	r2, r2, #33554432
 2598 00ce DA60     		str	r2, [r3, #12]
 2599              	.L182:
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2600              		.loc 1 1163 0
 2601 00d0 DA68     		ldr	r2, [r3, #12]
 2602 00d2 42F00042 		orr	r2, r2, #-2147483648
 2603 00d6 DA60     		str	r2, [r3, #12]
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
 2604              		.loc 1 1165 0
 2605 00d8 C26C     		ldr	r2, [r0, #76]
 2606 00da 1AB1     		cbz	r2, .L183
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
 2607              		.loc 1 1167 0
 2608 00dc DA68     		ldr	r2, [r3, #12]
 2609 00de 42F08042 		orr	r2, r2, #1073741824
 2610 00e2 DA60     		str	r2, [r3, #12]
 2611              	.L183:
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get descriptor address */
 2612              		.loc 1 1171 0
 2613 00e4 621C     		adds	r2, r4, #1
ARM GAS  /tmp/cctf834y.s 			page 104


 2614              	.LVL234:
 2615 00e6 032A     		cmp	r2, #3
 2616 00e8 DED9     		bls	.L184
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get descriptor address */
 2617              		.loc 1 1171 0 is_stmt 0 discriminator 1
 2618 00ea E21E     		subs	r2, r4, #3
 2619              	.LVL235:
 2620 00ec DCE7     		b	.L184
 2621              	.LVL236:
 2622              	.L180:
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2623              		.loc 1 1178 0 is_stmt 1
 2624 00ee 0023     		movs	r3, #0
 2625              	.LVL237:
 2626 00f0 4364     		str	r3, [r0, #68]
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 2627              		.loc 1 1180 0
 2628 00f2 1846     		mov	r0, r3
 2629              	.LVL238:
 2630              	.L168:
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2631              		.loc 1 1181 0
 2632 00f4 F0BC     		pop	{r4, r5, r6, r7}
 2633              	.LCFI31:
 2634              		.cfi_restore 7
 2635              		.cfi_restore 6
 2636              		.cfi_restore 5
 2637              		.cfi_restore 4
 2638              		.cfi_def_cfa_offset 0
 2639              	.LVL239:
 2640 00f6 7047     		bx	lr
 2641              	.LVL240:
 2642              	.L186:
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 2643              		.loc 1 1077 0
 2644 00f8 0020     		movs	r0, #0
 2645              	.LVL241:
 2646 00fa 7047     		bx	lr
 2647              		.cfi_endproc
 2648              	.LFE152:
 2650              		.section	.text.HAL_ETH_GetRxDataBuffer,"ax",%progbits
 2651              		.align	1
 2652              		.global	HAL_ETH_GetRxDataBuffer
 2653              		.syntax unified
 2654              		.thumb
 2655              		.thumb_func
 2656              		.fpu fpv5-d16
 2658              	HAL_ETH_GetRxDataBuffer:
 2659              	.LFB153:
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_RxDescListTypeDef *dmarxdesclist = &heth->RxDescList;
 2660              		.loc 1 1197 0
 2661              		.cfi_startproc
 2662              		@ args = 0, pretend = 0, frame = 0
 2663              		@ frame_needed = 0, uses_anonymous_args = 0
 2664              	.LVL242:
 2665 0000 70B5     		push	{r4, r5, r6, lr}
 2666              	.LCFI32:
ARM GAS  /tmp/cctf834y.s 			page 105


 2667              		.cfi_def_cfa_offset 16
 2668              		.cfi_offset 4, -16
 2669              		.cfi_offset 5, -12
 2670              		.cfi_offset 6, -8
 2671              		.cfi_offset 14, -4
 2672 0002 0546     		mov	r5, r0
 2673              	.LVL243:
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t index, accumulatedlen = 0, lastdesclen;
 2674              		.loc 1 1199 0
 2675 0004 066C     		ldr	r6, [r0, #64]
 2676              	.LVL244:
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_BufferTypeDef *rxbuff = RxBuffer;
 2677              		.loc 1 1201 0
 2678 0006 00EB8603 		add	r3, r0, r6, lsl #2
 2679 000a DB6A     		ldr	r3, [r3, #44]
 2680              	.LVL245:
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2681              		.loc 1 1204 0
 2682 000c 29B1     		cbz	r1, .L207
 2683 000e 0C46     		mov	r4, r1
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2684              		.loc 1 1210 0
 2685 0010 426C     		ldr	r2, [r0, #68]
 2686 0012 2AB1     		cbz	r2, .L208
 2687              	.LVL246:
 2688              	.L198:
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_RxDescListTypeDef *dmarxdesclist = &heth->RxDescList;
 2689              		.loc 1 1197 0 discriminator 1
 2690 0014 0021     		movs	r1, #0
 2691 0016 0846     		mov	r0, r1
 2692 0018 11E0     		b	.L199
 2693              	.LVL247:
 2694              	.L207:
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     return HAL_ERROR;
 2695              		.loc 1 1206 0
 2696 001a 0120     		movs	r0, #1
 2697              	.LVL248:
 2698 001c E865     		str	r0, [r5, #92]
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 2699              		.loc 1 1207 0
 2700 001e 70BD     		pop	{r4, r5, r6, pc}
 2701              	.LVL249:
 2702              	.L208:
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 2703              		.loc 1 1212 0
 2704 0020 FFF7FEFF 		bl	HAL_ETH_IsRxDataAvailable
 2705              	.LVL250:
 2706 0024 0028     		cmp	r0, #0
 2707 0026 38D0     		beq	.L204
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descidx];
 2708              		.loc 1 1219 0
 2709 0028 2E6C     		ldr	r6, [r5, #64]
 2710              	.LVL251:
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 2711              		.loc 1 1220 0
 2712 002a 05EB8603 		add	r3, r5, r6, lsl #2
 2713 002e DB6A     		ldr	r3, [r3, #44]
ARM GAS  /tmp/cctf834y.s 			page 106


 2714              	.LVL252:
 2715 0030 F0E7     		b	.L198
 2716              	.LVL253:
 2717              	.L201:
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2718              		.loc 1 1250 0 discriminator 2
 2719 0032 05EB8203 		add	r3, r5, r2, lsl #2
 2720              	.LVL254:
 2721 0036 DB6A     		ldr	r3, [r3, #44]
 2722              	.LVL255:
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 2723              		.loc 1 1253 0 discriminator 2
 2724 0038 A468     		ldr	r4, [r4, #8]
 2725              	.LVL256:
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2726              		.loc 1 1225 0 discriminator 2
 2727 003a 0130     		adds	r0, r0, #1
 2728              	.LVL257:
 2729 003c 1646     		mov	r6, r2
 2730              	.LVL258:
 2731              	.L199:
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2732              		.loc 1 1225 0 is_stmt 0 discriminator 1
 2733 003e 6A6C     		ldr	r2, [r5, #68]
 2734 0040 013A     		subs	r2, r2, #1
 2735 0042 9042     		cmp	r0, r2
 2736 0044 12D2     		bcs	.L209
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     rxbuff->len =  heth->Init.RxBuffLen;
 2737              		.loc 1 1228 0 is_stmt 1
 2738 0046 1A69     		ldr	r2, [r3, #16]
 2739 0048 2260     		str	r2, [r4]
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2740              		.loc 1 1229 0
 2741 004a 6A69     		ldr	r2, [r5, #20]
 2742 004c 6260     		str	r2, [r4, #4]
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 2743              		.loc 1 1232 0
 2744 004e 5A69     		ldr	r2, [r3, #20]
 2745 0050 22B1     		cbz	r2, .L200
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get Address and length of the second buffer address */
 2746              		.loc 1 1235 0
 2747 0052 A468     		ldr	r4, [r4, #8]
 2748              	.LVL259:
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       rxbuff->len =  heth->Init.RxBuffLen;
 2749              		.loc 1 1237 0
 2750 0054 5A69     		ldr	r2, [r3, #20]
 2751 0056 2260     		str	r2, [r4]
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 2752              		.loc 1 1238 0
 2753 0058 6A69     		ldr	r2, [r5, #20]
 2754 005a 6260     		str	r2, [r4, #4]
 2755              	.L200:
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2756              		.loc 1 1246 0
 2757 005c D968     		ldr	r1, [r3, #12]
 2758              	.LVL260:
 2759 005e C1F30E01 		ubfx	r1, r1, #0, #15
ARM GAS  /tmp/cctf834y.s 			page 107


 2760              	.LVL261:
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descidx];
 2761              		.loc 1 1249 0
 2762 0062 721C     		adds	r2, r6, #1
 2763              	.LVL262:
 2764 0064 032A     		cmp	r2, #3
 2765 0066 E4D9     		bls	.L201
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descidx];
 2766              		.loc 1 1249 0 is_stmt 0 discriminator 1
 2767 0068 F21E     		subs	r2, r6, #3
 2768              	.LVL263:
 2769 006a E2E7     		b	.L201
 2770              	.LVL264:
 2771              	.L209:
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2772              		.loc 1 1257 0 is_stmt 1
 2773 006c DA68     		ldr	r2, [r3, #12]
 2774 006e C2F30E02 		ubfx	r2, r2, #0, #15
 2775 0072 511A     		subs	r1, r2, r1
 2776              	.LVL265:
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2777              		.loc 1 1260 0
 2778 0074 1A69     		ldr	r2, [r3, #16]
 2779 0076 2260     		str	r2, [r4]
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2780              		.loc 1 1263 0
 2781 0078 6A69     		ldr	r2, [r5, #20]
 2782 007a 9142     		cmp	r1, r2
 2783 007c 0AD9     		bls	.L210
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2784              		.loc 1 1268 0
 2785 007e 5869     		ldr	r0, [r3, #20]
 2786              	.LVL266:
 2787 0080 68B1     		cbz	r0, .L205
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Point to next buffer */
 2788              		.loc 1 1271 0
 2789 0082 6260     		str	r2, [r4, #4]
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     /* Get the Address the Length of the second buffer address */
 2790              		.loc 1 1273 0
 2791 0084 A268     		ldr	r2, [r4, #8]
 2792              	.LVL267:
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     rxbuff->len =  lastdesclen - (heth->Init.RxBuffLen);
 2793              		.loc 1 1275 0
 2794 0086 5B69     		ldr	r3, [r3, #20]
 2795              	.LVL268:
 2796 0088 1360     		str	r3, [r2]
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 2797              		.loc 1 1276 0
 2798 008a 6B69     		ldr	r3, [r5, #20]
 2799 008c C91A     		subs	r1, r1, r3
 2800              	.LVL269:
 2801 008e 5160     		str	r1, [r2, #4]
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 2802              		.loc 1 1283 0
 2803 0090 0020     		movs	r0, #0
 2804 0092 70BD     		pop	{r4, r5, r6, pc}
 2805              	.LVL270:
ARM GAS  /tmp/cctf834y.s 			page 108


 2806              	.L210:
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 2807              		.loc 1 1265 0
 2808 0094 6160     		str	r1, [r4, #4]
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 2809              		.loc 1 1283 0
 2810 0096 0020     		movs	r0, #0
 2811              	.LVL271:
 2812 0098 70BD     		pop	{r4, r5, r6, pc}
 2813              	.LVL272:
 2814              	.L204:
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 2815              		.loc 1 1215 0
 2816 009a 0120     		movs	r0, #1
 2817 009c 70BD     		pop	{r4, r5, r6, pc}
 2818              	.LVL273:
 2819              	.L205:
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 2820              		.loc 1 1280 0
 2821 009e 0120     		movs	r0, #1
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2822              		.loc 1 1284 0
 2823 00a0 70BD     		pop	{r4, r5, r6, pc}
 2824              		.cfi_endproc
 2825              	.LFE153:
 2827              		.section	.text.HAL_ETH_GetRxDataLength,"ax",%progbits
 2828              		.align	1
 2829              		.global	HAL_ETH_GetRxDataLength
 2830              		.syntax unified
 2831              		.thumb
 2832              		.thumb_func
 2833              		.fpu fpv5-d16
 2835              	HAL_ETH_GetRxDataLength:
 2836              	.LFB154:
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_RxDescListTypeDef *dmarxdesclist = &heth->RxDescList;
 2837              		.loc 1 1294 0
 2838              		.cfi_startproc
 2839              		@ args = 0, pretend = 0, frame = 0
 2840              		@ frame_needed = 0, uses_anonymous_args = 0
 2841              	.LVL274:
 2842 0000 70B5     		push	{r4, r5, r6, lr}
 2843              	.LCFI33:
 2844              		.cfi_def_cfa_offset 16
 2845              		.cfi_offset 4, -16
 2846              		.cfi_offset 5, -12
 2847              		.cfi_offset 6, -8
 2848              		.cfi_offset 14, -4
 2849 0002 0446     		mov	r4, r0
 2850 0004 0E46     		mov	r6, r1
 2851              	.LVL275:
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   __IO const ETH_DMADescTypeDef *dmarxdesc;
 2852              		.loc 1 1296 0
 2853 0006 056C     		ldr	r5, [r0, #64]
 2854              	.LVL276:
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2855              		.loc 1 1299 0
 2856 0008 436C     		ldr	r3, [r0, #68]
ARM GAS  /tmp/cctf834y.s 			page 109


 2857 000a 73B1     		cbz	r3, .L217
 2858              	.LVL277:
 2859              	.L212:
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Point to last descriptor */
 2860              		.loc 1 1309 0
 2861 000c 636C     		ldr	r3, [r4, #68]
 2862 000e 2B44     		add	r3, r3, r5
 2863 0010 5A1E     		subs	r2, r3, #1
 2864              	.LVL278:
 2865 0012 032A     		cmp	r2, #3
 2866 0014 00D9     		bls	.L214
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Point to last descriptor */
 2867              		.loc 1 1309 0 is_stmt 0 discriminator 1
 2868 0016 5A1F     		subs	r2, r3, #5
 2869              	.LVL279:
 2870              	.L214:
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2871              		.loc 1 1311 0 is_stmt 1
 2872 0018 04EB8204 		add	r4, r4, r2, lsl #2
 2873              	.LVL280:
 2874 001c E36A     		ldr	r3, [r4, #44]
 2875              	.LVL281:
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2876              		.loc 1 1313 0
 2877 001e DB68     		ldr	r3, [r3, #12]
 2878              	.LVL282:
 2879 0020 C3F30E03 		ubfx	r3, r3, #0, #15
 2880 0024 3360     		str	r3, [r6]
 2881              	.LVL283:
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 2882              		.loc 1 1315 0
 2883 0026 0020     		movs	r0, #0
 2884 0028 70BD     		pop	{r4, r5, r6, pc}
 2885              	.LVL284:
 2886              	.L217:
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 2887              		.loc 1 1301 0
 2888 002a FFF7FEFF 		bl	HAL_ETH_IsRxDataAvailable
 2889              	.LVL285:
 2890 002e 0028     		cmp	r0, #0
 2891 0030 ECD1     		bne	.L212
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 2892              		.loc 1 1304 0
 2893 0032 0120     		movs	r0, #1
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2894              		.loc 1 1316 0
 2895 0034 70BD     		pop	{r4, r5, r6, pc}
 2896              		.cfi_endproc
 2897              	.LFE154:
 2899              		.section	.text.HAL_ETH_GetRxDataInfo,"ax",%progbits
 2900              		.align	1
 2901              		.global	HAL_ETH_GetRxDataInfo
 2902              		.syntax unified
 2903              		.thumb
 2904              		.thumb_func
 2905              		.fpu fpv5-d16
 2907              	HAL_ETH_GetRxDataInfo:
ARM GAS  /tmp/cctf834y.s 			page 110


 2908              	.LFB155:
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_RxDescListTypeDef *dmarxdesclist = &heth->RxDescList;
 2909              		.loc 1 1326 0
 2910              		.cfi_startproc
 2911              		@ args = 0, pretend = 0, frame = 0
 2912              		@ frame_needed = 0, uses_anonymous_args = 0
 2913              	.LVL286:
 2914 0000 70B5     		push	{r4, r5, r6, lr}
 2915              	.LCFI34:
 2916              		.cfi_def_cfa_offset 16
 2917              		.cfi_offset 4, -16
 2918              		.cfi_offset 5, -12
 2919              		.cfi_offset 6, -8
 2920              		.cfi_offset 14, -4
 2921 0002 0446     		mov	r4, r0
 2922 0004 0E46     		mov	r6, r1
 2923              	.LVL287:
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   __IO const ETH_DMADescTypeDef *dmarxdesc;
 2924              		.loc 1 1328 0
 2925 0006 056C     		ldr	r5, [r0, #64]
 2926              	.LVL288:
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2927              		.loc 1 1331 0
 2928 0008 436C     		ldr	r3, [r0, #68]
 2929 000a A3B1     		cbz	r3, .L229
 2930              	.LVL289:
 2931              	.L219:
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Point to last descriptor */
 2932              		.loc 1 1341 0
 2933 000c 626C     		ldr	r2, [r4, #68]
 2934 000e 2A44     		add	r2, r2, r5
 2935 0010 531E     		subs	r3, r2, #1
 2936              	.LVL290:
 2937 0012 032B     		cmp	r3, #3
 2938 0014 00D9     		bls	.L221
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Point to last descriptor */
 2939              		.loc 1 1341 0 is_stmt 0 discriminator 1
 2940 0016 531F     		subs	r3, r2, #5
 2941              	.LVL291:
 2942              	.L221:
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2943              		.loc 1 1343 0 is_stmt 1
 2944 0018 04EB8303 		add	r3, r4, r3, lsl #2
 2945              	.LVL292:
 2946 001c DB6A     		ldr	r3, [r3, #44]
 2947              	.LVL293:
1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 2948              		.loc 1 1345 0
 2949 001e DA68     		ldr	r2, [r3, #12]
 2950 0020 12F4004F 		tst	r2, #32768
 2951 0024 0DD0     		beq	.L222
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 2952              		.loc 1 1347 0
 2953 0026 DB68     		ldr	r3, [r3, #12]
 2954              	.LVL294:
 2955 0028 03F0FC73 		and	r3, r3, #33030144
 2956 002c 7362     		str	r3, [r6, #36]
ARM GAS  /tmp/cctf834y.s 			page 111


 2957              	.L223:
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2958              		.loc 1 1384 0
 2959 002e 636C     		ldr	r3, [r4, #68]
 2960 0030 3360     		str	r3, [r6]
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 2961              		.loc 1 1386 0
 2962 0032 0020     		movs	r0, #0
 2963 0034 70BD     		pop	{r4, r5, r6, pc}
 2964              	.LVL295:
 2965              	.L229:
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 2966              		.loc 1 1333 0
 2967 0036 FFF7FEFF 		bl	HAL_ETH_IsRxDataAvailable
 2968              	.LVL296:
 2969 003a 0028     		cmp	r0, #0
 2970 003c E6D1     		bne	.L219
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 2971              		.loc 1 1336 0
 2972 003e 0120     		movs	r0, #1
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 2973              		.loc 1 1387 0
 2974 0040 70BD     		pop	{r4, r5, r6, pc}
 2975              	.LVL297:
 2976              	.L222:
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 2977              		.loc 1 1351 0
 2978 0042 DA68     		ldr	r2, [r3, #12]
 2979 0044 12F0007F 		tst	r2, #33554432
 2980 0048 08D0     		beq	.L224
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
 2981              		.loc 1 1354 0
 2982 004a DA68     		ldr	r2, [r3, #12]
 2983 004c 02F4E022 		and	r2, r2, #458752
 2984 0050 B2F5A02F 		cmp	r2, #327680
 2985 0054 23D0     		beq	.L230
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
 2986              		.loc 1 1361 0
 2987 0056 1A68     		ldr	r2, [r3]
 2988 0058 92B2     		uxth	r2, r2
 2989 005a 7260     		str	r2, [r6, #4]
 2990              	.L224:
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 2991              		.loc 1 1365 0
 2992 005c DA68     		ldr	r2, [r3, #12]
 2993 005e 12F0806F 		tst	r2, #67108864
 2994 0062 0BD0     		beq	.L226
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get Header type */
 2995              		.loc 1 1368 0
 2996 0064 5A68     		ldr	r2, [r3, #4]
 2997 0066 02F00302 		and	r2, r2, #3
 2998 006a 7261     		str	r2, [r6, #20]
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get Checksum status */
 2999              		.loc 1 1370 0
 3000 006c 5A68     		ldr	r2, [r3, #4]
 3001 006e 02F03002 		and	r2, r2, #48
 3002 0072 3261     		str	r2, [r6, #16]
ARM GAS  /tmp/cctf834y.s 			page 112


1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 3003              		.loc 1 1372 0
 3004 0074 5A68     		ldr	r2, [r3, #4]
 3005 0076 02F0C802 		and	r2, r2, #200
 3006 007a F260     		str	r2, [r6, #12]
 3007              	.L226:
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 3008              		.loc 1 1375 0
 3009 007c DA68     		ldr	r2, [r3, #12]
 3010 007e 12F0006F 		tst	r2, #134217728
 3011 0082 D4D0     		beq	.L223
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       RxPacketInfo->L3FilterStatus = READ_BIT(dmarxdesc->DESC2,  (ETH_DMARXNDESCWBF_L3FM | ETH_DMAR
 3012              		.loc 1 1377 0
 3013 0084 9A68     		ldr	r2, [r3, #8]
 3014 0086 02F4F022 		and	r2, r2, #491520
 3015 008a B261     		str	r2, [r6, #24]
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       RxPacketInfo->L4FilterStatus = READ_BIT(dmarxdesc->DESC2, (ETH_DMARXNDESCWBF_L4FM | ETH_DMARX
 3016              		.loc 1 1378 0
 3017 008c 9A68     		ldr	r2, [r3, #8]
 3018 008e 02F02052 		and	r2, r2, #671088640
 3019 0092 F261     		str	r2, [r6, #28]
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 3020              		.loc 1 1379 0
 3021 0094 9B68     		ldr	r3, [r3, #8]
 3022              	.LVL298:
 3023 0096 03F04053 		and	r3, r3, #805306368
 3024 009a 3362     		str	r3, [r6, #32]
 3025 009c C7E7     		b	.L223
 3026              	.LVL299:
 3027              	.L230:
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****         RxPacketInfo->InnerVlanTag = READ_BIT(dmarxdesc->DESC0, ETH_DMARXNDESCWBF_IVT) >> 16;
 3028              		.loc 1 1356 0
 3029 009e 1A68     		ldr	r2, [r3]
 3030 00a0 92B2     		uxth	r2, r2
 3031 00a2 7260     		str	r2, [r6, #4]
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
 3032              		.loc 1 1357 0
 3033 00a4 1A68     		ldr	r2, [r3]
 3034 00a6 120C     		lsrs	r2, r2, #16
 3035 00a8 B260     		str	r2, [r6, #8]
 3036 00aa D7E7     		b	.L224
 3037              		.cfi_endproc
 3038              	.LFE155:
 3040              		.section	.text.HAL_ETH_BuildRxDescriptors,"ax",%progbits
 3041              		.align	1
 3042              		.global	HAL_ETH_BuildRxDescriptors
 3043              		.syntax unified
 3044              		.thumb
 3045              		.thumb_func
 3046              		.fpu fpv5-d16
 3048              	HAL_ETH_BuildRxDescriptors:
 3049              	.LFB156:
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   ETH_RxDescListTypeDef *dmarxdesclist = &heth->RxDescList;
 3050              		.loc 1 1399 0
 3051              		.cfi_startproc
 3052              		@ args = 0, pretend = 0, frame = 0
 3053              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cctf834y.s 			page 113


 3054              		@ link register save eliminated.
 3055              	.LVL300:
 3056 0000 30B4     		push	{r4, r5}
 3057              	.LCFI35:
 3058              		.cfi_def_cfa_offset 8
 3059              		.cfi_offset 4, -8
 3060              		.cfi_offset 5, -4
 3061              	.LVL301:
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   __IO ETH_DMADescTypeDef *dmarxdesc = (ETH_DMADescTypeDef *)dmarxdesclist->RxDesc[descindex];
 3062              		.loc 1 1401 0
 3063 0002 046C     		ldr	r4, [r0, #64]
 3064              	.LVL302:
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t totalappdescnbr = dmarxdesclist->AppDescNbr;
 3065              		.loc 1 1402 0
 3066 0004 00EB8403 		add	r3, r0, r4, lsl #2
 3067 0008 DB6A     		ldr	r3, [r3, #44]
 3068              	.LVL303:
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t descscan;
 3069              		.loc 1 1403 0
 3070 000a 456C     		ldr	r5, [r0, #68]
 3071              	.LVL304:
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3072              		.loc 1 1406 0
 3073 000c 002D     		cmp	r5, #0
 3074 000e 34D0     		beq	.L240
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3075              		.loc 1 1412 0
 3076 0010 826C     		ldr	r2, [r0, #72]
 3077 0012 02B1     		cbz	r2, .L233
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 3078              		.loc 1 1415 0
 3079 0014 0135     		adds	r5, r5, #1
 3080              	.LVL305:
 3081              	.L233:
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3082              		.loc 1 1418 0
 3083 0016 0022     		movs	r2, #0
 3084 0018 04E0     		b	.L234
 3085              	.LVL306:
 3086              	.L238:
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 3087              		.loc 1 1441 0
 3088 001a 00EB8103 		add	r3, r0, r1, lsl #2
 3089              	.LVL307:
 3090 001e DB6A     		ldr	r3, [r3, #44]
 3091              	.LVL308:
 3092 0020 0C46     		mov	r4, r1
 3093              	.LVL309:
 3094              	.L237:
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3095              		.loc 1 1418 0 discriminator 2
 3096 0022 0132     		adds	r2, r2, #1
 3097              	.LVL310:
 3098              	.L234:
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3099              		.loc 1 1418 0 is_stmt 0 discriminator 1
 3100 0024 9542     		cmp	r5, r2
ARM GAS  /tmp/cctf834y.s 			page 114


 3101 0026 1FD9     		bls	.L242
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     WRITE_REG(dmarxdesc->DESC3, ETH_DMARXNDESCRF_BUF1V);
 3102              		.loc 1 1420 0 is_stmt 1
 3103 0028 1969     		ldr	r1, [r3, #16]
 3104 002a 1960     		str	r1, [r3]
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3105              		.loc 1 1421 0
 3106 002c 4FF08071 		mov	r1, #16777216
 3107 0030 D960     		str	r1, [r3, #12]
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 3108              		.loc 1 1423 0
 3109 0032 5969     		ldr	r1, [r3, #20]
 3110 0034 29B1     		cbz	r1, .L235
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       SET_BIT(dmarxdesc->DESC3, ETH_DMARXNDESCRF_BUF2V);
 3111              		.loc 1 1425 0
 3112 0036 5969     		ldr	r1, [r3, #20]
 3113 0038 9960     		str	r1, [r3, #8]
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 3114              		.loc 1 1426 0
 3115 003a D968     		ldr	r1, [r3, #12]
 3116 003c 41F00071 		orr	r1, r1, #33554432
 3117 0040 D960     		str	r1, [r3, #12]
 3118              	.L235:
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3119              		.loc 1 1429 0
 3120 0042 D968     		ldr	r1, [r3, #12]
 3121 0044 41F00041 		orr	r1, r1, #-2147483648
 3122 0048 D960     		str	r1, [r3, #12]
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 3123              		.loc 1 1431 0
 3124 004a C16C     		ldr	r1, [r0, #76]
 3125 004c 19B1     		cbz	r1, .L236
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 3126              		.loc 1 1433 0
 3127 004e D968     		ldr	r1, [r3, #12]
 3128 0050 41F08041 		orr	r1, r1, #1073741824
 3129 0054 D960     		str	r1, [r3, #12]
 3130              	.L236:
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 3131              		.loc 1 1436 0
 3132 0056 416C     		ldr	r1, [r0, #68]
 3133 0058 0139     		subs	r1, r1, #1
 3134 005a 8A42     		cmp	r2, r1
 3135 005c E1D2     		bcs	.L237
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get descriptor address */
 3136              		.loc 1 1439 0
 3137 005e 611C     		adds	r1, r4, #1
 3138              	.LVL311:
 3139 0060 0329     		cmp	r1, #3
 3140 0062 DAD9     		bls	.L238
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       /* Get descriptor address */
 3141              		.loc 1 1439 0 is_stmt 0 discriminator 1
 3142 0064 E11E     		subs	r1, r4, #3
 3143              	.LVL312:
 3144 0066 D8E7     		b	.L238
 3145              	.LVL313:
 3146              	.L242:
ARM GAS  /tmp/cctf834y.s 			page 115


1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3147              		.loc 1 1446 0 is_stmt 1
 3148 0068 0168     		ldr	r1, [r0]
 3149 006a 41F22812 		movw	r2, #4392
 3150              	.LVL314:
 3151 006e 8B50     		str	r3, [r1, r2]
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3152              		.loc 1 1449 0
 3153 0070 0023     		movs	r3, #0
 3154              	.LVL315:
 3155 0072 4364     		str	r3, [r0, #68]
 3156              	.LVL316:
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 3157              		.loc 1 1451 0
 3158 0074 1846     		mov	r0, r3
 3159              	.LVL317:
 3160              	.L232:
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3161              		.loc 1 1452 0
 3162 0076 30BC     		pop	{r4, r5}
 3163              	.LCFI36:
 3164              		.cfi_remember_state
 3165              		.cfi_restore 5
 3166              		.cfi_restore 4
 3167              		.cfi_def_cfa_offset 0
 3168              	.LVL318:
 3169 0078 7047     		bx	lr
 3170              	.LVL319:
 3171              	.L240:
 3172              	.LCFI37:
 3173              		.cfi_restore_state
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 3174              		.loc 1 1409 0
 3175 007a 0120     		movs	r0, #1
 3176              	.LVL320:
 3177 007c FBE7     		b	.L232
 3178              		.cfi_endproc
 3179              	.LFE156:
 3181              		.section	.text.HAL_ETH_TxCpltCallback,"ax",%progbits
 3182              		.align	1
 3183              		.weak	HAL_ETH_TxCpltCallback
 3184              		.syntax unified
 3185              		.thumb
 3186              		.thumb_func
 3187              		.fpu fpv5-d16
 3189              	HAL_ETH_TxCpltCallback:
 3190              	.LFB158:
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 3191              		.loc 1 1651 0
 3192              		.cfi_startproc
 3193              		@ args = 0, pretend = 0, frame = 0
 3194              		@ frame_needed = 0, uses_anonymous_args = 0
 3195              		@ link register save eliminated.
 3196              	.LVL321:
 3197 0000 7047     		bx	lr
 3198              		.cfi_endproc
 3199              	.LFE158:
ARM GAS  /tmp/cctf834y.s 			page 116


 3201              		.section	.text.HAL_ETH_RxCpltCallback,"ax",%progbits
 3202              		.align	1
 3203              		.weak	HAL_ETH_RxCpltCallback
 3204              		.syntax unified
 3205              		.thumb
 3206              		.thumb_func
 3207              		.fpu fpv5-d16
 3209              	HAL_ETH_RxCpltCallback:
 3210              	.LFB159:
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 3211              		.loc 1 1666 0
 3212              		.cfi_startproc
 3213              		@ args = 0, pretend = 0, frame = 0
 3214              		@ frame_needed = 0, uses_anonymous_args = 0
 3215              		@ link register save eliminated.
 3216              	.LVL322:
 3217 0000 7047     		bx	lr
 3218              		.cfi_endproc
 3219              	.LFE159:
 3221              		.section	.text.HAL_ETH_DMAErrorCallback,"ax",%progbits
 3222              		.align	1
 3223              		.weak	HAL_ETH_DMAErrorCallback
 3224              		.syntax unified
 3225              		.thumb
 3226              		.thumb_func
 3227              		.fpu fpv5-d16
 3229              	HAL_ETH_DMAErrorCallback:
 3230              	.LFB160:
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 3231              		.loc 1 1681 0
 3232              		.cfi_startproc
 3233              		@ args = 0, pretend = 0, frame = 0
 3234              		@ frame_needed = 0, uses_anonymous_args = 0
 3235              		@ link register save eliminated.
 3236              	.LVL323:
 3237 0000 7047     		bx	lr
 3238              		.cfi_endproc
 3239              	.LFE160:
 3241              		.section	.text.HAL_ETH_MACErrorCallback,"ax",%progbits
 3242              		.align	1
 3243              		.weak	HAL_ETH_MACErrorCallback
 3244              		.syntax unified
 3245              		.thumb
 3246              		.thumb_func
 3247              		.fpu fpv5-d16
 3249              	HAL_ETH_MACErrorCallback:
 3250              	.LFB161:
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 3251              		.loc 1 1696 0
 3252              		.cfi_startproc
 3253              		@ args = 0, pretend = 0, frame = 0
 3254              		@ frame_needed = 0, uses_anonymous_args = 0
 3255              		@ link register save eliminated.
 3256              	.LVL324:
 3257 0000 7047     		bx	lr
 3258              		.cfi_endproc
 3259              	.LFE161:
ARM GAS  /tmp/cctf834y.s 			page 117


 3261              		.section	.text.HAL_ETH_PMTCallback,"ax",%progbits
 3262              		.align	1
 3263              		.weak	HAL_ETH_PMTCallback
 3264              		.syntax unified
 3265              		.thumb
 3266              		.thumb_func
 3267              		.fpu fpv5-d16
 3269              	HAL_ETH_PMTCallback:
 3270              	.LFB162:
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 3271              		.loc 1 1711 0
 3272              		.cfi_startproc
 3273              		@ args = 0, pretend = 0, frame = 0
 3274              		@ frame_needed = 0, uses_anonymous_args = 0
 3275              		@ link register save eliminated.
 3276              	.LVL325:
 3277 0000 7047     		bx	lr
 3278              		.cfi_endproc
 3279              	.LFE162:
 3281              		.section	.text.HAL_ETH_EEECallback,"ax",%progbits
 3282              		.align	1
 3283              		.weak	HAL_ETH_EEECallback
 3284              		.syntax unified
 3285              		.thumb
 3286              		.thumb_func
 3287              		.fpu fpv5-d16
 3289              	HAL_ETH_EEECallback:
 3290              	.LFB163:
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 3291              		.loc 1 1726 0
 3292              		.cfi_startproc
 3293              		@ args = 0, pretend = 0, frame = 0
 3294              		@ frame_needed = 0, uses_anonymous_args = 0
 3295              		@ link register save eliminated.
 3296              	.LVL326:
 3297 0000 7047     		bx	lr
 3298              		.cfi_endproc
 3299              	.LFE163:
 3301              		.section	.text.HAL_ETH_WakeUpCallback,"ax",%progbits
 3302              		.align	1
 3303              		.weak	HAL_ETH_WakeUpCallback
 3304              		.syntax unified
 3305              		.thumb
 3306              		.thumb_func
 3307              		.fpu fpv5-d16
 3309              	HAL_ETH_WakeUpCallback:
 3310              	.LFB164:
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Prevent unused argument(s) compilation warning */
 3311              		.loc 1 1741 0
 3312              		.cfi_startproc
 3313              		@ args = 0, pretend = 0, frame = 0
 3314              		@ frame_needed = 0, uses_anonymous_args = 0
 3315              		@ link register save eliminated.
 3316              	.LVL327:
 3317 0000 7047     		bx	lr
 3318              		.cfi_endproc
 3319              	.LFE164:
ARM GAS  /tmp/cctf834y.s 			page 118


 3321              		.section	.text.HAL_ETH_IRQHandler,"ax",%progbits
 3322              		.align	1
 3323              		.global	HAL_ETH_IRQHandler
 3324              		.syntax unified
 3325              		.thumb
 3326              		.thumb_func
 3327              		.fpu fpv5-d16
 3329              	HAL_ETH_IRQHandler:
 3330              	.LFB157:
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Packet received */
 3331              		.loc 1 1462 0
 3332              		.cfi_startproc
 3333              		@ args = 0, pretend = 0, frame = 0
 3334              		@ frame_needed = 0, uses_anonymous_args = 0
 3335              	.LVL328:
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Packet received */
 3336              		.loc 1 1462 0
 3337 0000 10B5     		push	{r4, lr}
 3338              	.LCFI38:
 3339              		.cfi_def_cfa_offset 8
 3340              		.cfi_offset 4, -8
 3341              		.cfi_offset 14, -4
 3342 0002 0446     		mov	r4, r0
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3343              		.loc 1 1464 0
 3344 0004 0368     		ldr	r3, [r0]
 3345 0006 03F58B52 		add	r2, r3, #4448
 3346 000a 1268     		ldr	r2, [r2]
 3347 000c 12F0400F 		tst	r2, #64
 3348 0010 05D0     		beq	.L251
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 3349              		.loc 1 1466 0
 3350 0012 41F23412 		movw	r2, #4404
 3351 0016 9B58     		ldr	r3, [r3, r2]
 3352 0018 13F0400F 		tst	r3, #64
 3353 001c 52D1     		bne	.L261
 3354              	.LVL329:
 3355              	.L251:
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3356              		.loc 1 1483 0
 3357 001e 2368     		ldr	r3, [r4]
 3358 0020 03F58B52 		add	r2, r3, #4448
 3359 0024 1268     		ldr	r2, [r2]
 3360 0026 12F0010F 		tst	r2, #1
 3361 002a 05D0     		beq	.L252
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 3362              		.loc 1 1485 0
 3363 002c 41F23412 		movw	r2, #4404
 3364 0030 9B58     		ldr	r3, [r3, r2]
 3365 0032 13F0010F 		tst	r3, #1
 3366 0036 4ED1     		bne	.L262
 3367              	.L252:
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3368              		.loc 1 1502 0
 3369 0038 2368     		ldr	r3, [r4]
 3370 003a 03F58B52 		add	r2, r3, #4448
 3371 003e 1268     		ldr	r2, [r2]
ARM GAS  /tmp/cctf834y.s 			page 119


 3372 0040 12F4804F 		tst	r2, #16384
 3373 0044 24D0     		beq	.L253
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 3374              		.loc 1 1504 0
 3375 0046 41F23412 		movw	r2, #4404
 3376 004a 9A58     		ldr	r2, [r3, r2]
 3377 004c 12F4804F 		tst	r2, #16384
 3378 0050 1ED0     		beq	.L253
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3379              		.loc 1 1506 0
 3380 0052 E26D     		ldr	r2, [r4, #92]
 3381 0054 42F00802 		orr	r2, r2, #8
 3382 0058 E265     		str	r2, [r4, #92]
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       {
 3383              		.loc 1 1509 0
 3384 005a 03F58B52 		add	r2, r3, #4448
 3385 005e 1268     		ldr	r2, [r2]
 3386 0060 12F4805F 		tst	r2, #4096
 3387 0064 41D0     		beq	.L254
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3388              		.loc 1 1512 0
 3389 0066 03F58B52 		add	r2, r3, #4448
 3390 006a 1268     		ldr	r2, [r2]
 3391 006c 22F46F62 		bic	r2, r2, #3824
 3392 0070 22F00D02 		bic	r2, r2, #13
 3393 0074 D204     		lsls	r2, r2, #19
 3394 0076 D20C     		lsrs	r2, r2, #19
 3395 0078 2266     		str	r2, [r4, #96]
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3396              		.loc 1 1515 0
 3397 007a 41F23411 		movw	r1, #4404
 3398 007e 5A58     		ldr	r2, [r3, r1]
 3399 0080 22F44042 		bic	r2, r2, #49152
 3400 0084 5A50     		str	r2, [r3, r1]
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****       }
 3401              		.loc 1 1518 0
 3402 0086 E023     		movs	r3, #224
 3403 0088 6365     		str	r3, [r4, #84]
 3404              	.L255:
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif  /* USE_HAL_ETH_REGISTER_CALLBACKS */
 3405              		.loc 1 1535 0
 3406 008a 2046     		mov	r0, r4
 3407 008c FFF7FEFF 		bl	HAL_ETH_DMAErrorCallback
 3408              	.LVL330:
 3409              	.L253:
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3410              		.loc 1 1542 0
 3411 0090 2268     		ldr	r2, [r4]
 3412 0092 D2F8B030 		ldr	r3, [r2, #176]
 3413 0096 03F4C043 		and	r3, r3, #24576
 3414 009a B3F5C04F 		cmp	r3, #24576
 3415 009e 2ED0     		beq	.L263
 3416              	.L256:
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3417              		.loc 1 1561 0
 3418 00a0 2368     		ldr	r3, [r4]
 3419 00a2 D3F8B020 		ldr	r2, [r3, #176]
ARM GAS  /tmp/cctf834y.s 			page 120


 3420 00a6 12F0100F 		tst	r2, #16
 3421 00aa 33D1     		bne	.L264
 3422              	.L257:
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3423              		.loc 1 1578 0
 3424 00ac 2368     		ldr	r3, [r4]
 3425 00ae D3F8B020 		ldr	r2, [r3, #176]
 3426 00b2 12F0200F 		tst	r2, #32
 3427 00b6 38D1     		bne	.L265
 3428              	.L258:
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3429              		.loc 1 1629 0
 3430 00b8 254B     		ldr	r3, .L267
 3431 00ba 9B6A     		ldr	r3, [r3, #40]
 3432 00bc 13F4800F 		tst	r3, #4194304
 3433 00c0 3ED1     		bne	.L266
 3434              	.L250:
 3435 00c2 10BD     		pop	{r4, pc}
 3436              	.LVL331:
 3437              	.L261:
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif  /* USE_HAL_ETH_REGISTER_CALLBACKS */
 3438              		.loc 1 1474 0
 3439 00c4 FFF7FEFF 		bl	HAL_ETH_RxCpltCallback
 3440              	.LVL332:
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 3441              		.loc 1 1478 0
 3442 00c8 2368     		ldr	r3, [r4]
 3443 00ca 03F58B53 		add	r3, r3, #4448
 3444 00ce 48F24002 		movw	r2, #32832
 3445 00d2 1A60     		str	r2, [r3]
 3446 00d4 A3E7     		b	.L251
 3447              	.L262:
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif  /* USE_HAL_ETH_REGISTER_CALLBACKS */
 3448              		.loc 1 1492 0
 3449 00d6 2046     		mov	r0, r4
 3450 00d8 FFF7FEFF 		bl	HAL_ETH_TxCpltCallback
 3451              	.LVL333:
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 3452              		.loc 1 1496 0
 3453 00dc 2368     		ldr	r3, [r4]
 3454 00de 03F58B53 		add	r3, r3, #4448
 3455 00e2 48F20102 		movw	r2, #32769
 3456 00e6 1A60     		str	r2, [r3]
 3457 00e8 A6E7     		b	.L252
 3458              	.L254:
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                                        ETH_DMACSR_RBU | ETH_DMACSR_AIS));
 3459              		.loc 1 1523 0
 3460 00ea 03F58B53 		add	r3, r3, #4448
 3461 00ee 1A68     		ldr	r2, [r3]
 3462 00f0 02F4CD42 		and	r2, r2, #26240
 3463 00f4 2266     		str	r2, [r4, #96]
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                     ETH_DMACSR_RBU | ETH_DMACSR_AIS));
 3464              		.loc 1 1527 0
 3465 00f6 4FF4CD42 		mov	r2, #26240
 3466 00fa 1A60     		str	r2, [r3]
 3467 00fc C5E7     		b	.L255
 3468              	.L263:
ARM GAS  /tmp/cctf834y.s 			page 121


1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3469              		.loc 1 1545 0
 3470 00fe D2F8B830 		ldr	r3, [r2, #184]
 3471 0102 6366     		str	r3, [r4, #100]
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3472              		.loc 1 1547 0
 3473 0104 E023     		movs	r3, #224
 3474 0106 6365     		str	r3, [r4, #84]
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif  /* USE_HAL_ETH_REGISTER_CALLBACKS */
 3475              		.loc 1 1554 0
 3476 0108 2046     		mov	r0, r4
 3477 010a FFF7FEFF 		bl	HAL_ETH_MACErrorCallback
 3478              	.LVL334:
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 3479              		.loc 1 1557 0
 3480 010e 0023     		movs	r3, #0
 3481 0110 6366     		str	r3, [r4, #100]
 3482 0112 C5E7     		b	.L256
 3483              	.L264:
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3484              		.loc 1 1564 0
 3485 0114 D3F8C030 		ldr	r3, [r3, #192]
 3486 0118 03F06003 		and	r3, r3, #96
 3487 011c A366     		str	r3, [r4, #104]
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif  /* USE_HAL_ETH_REGISTER_CALLBACKS */
 3488              		.loc 1 1571 0
 3489 011e 2046     		mov	r0, r4
 3490 0120 FFF7FEFF 		bl	HAL_ETH_PMTCallback
 3491              	.LVL335:
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 3492              		.loc 1 1574 0
 3493 0124 0023     		movs	r3, #0
 3494 0126 A366     		str	r3, [r4, #104]
 3495 0128 C0E7     		b	.L257
 3496              	.L265:
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3497              		.loc 1 1581 0
 3498 012a D3F8C030 		ldr	r3, [r3, #192]
 3499 012e 03F00F03 		and	r3, r3, #15
 3500 0132 E366     		str	r3, [r4, #108]
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif  /* USE_HAL_ETH_REGISTER_CALLBACKS */
 3501              		.loc 1 1588 0
 3502 0134 2046     		mov	r0, r4
 3503 0136 FFF7FEFF 		bl	HAL_ETH_EEECallback
 3504              	.LVL336:
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 3505              		.loc 1 1591 0
 3506 013a 0023     		movs	r3, #0
 3507 013c E366     		str	r3, [r4, #108]
 3508 013e BBE7     		b	.L258
 3509              	.L266:
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #if (USE_HAL_ETH_REGISTER_CALLBACKS == 1)
 3510              		.loc 1 1632 0
 3511 0140 4FF48002 		mov	r2, #4194304
 3512 0144 024B     		ldr	r3, .L267
 3513 0146 9A62     		str	r2, [r3, #40]
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** #endif
ARM GAS  /tmp/cctf834y.s 			page 122


 3514              		.loc 1 1638 0
 3515 0148 2046     		mov	r0, r4
 3516 014a FFF7FEFF 		bl	HAL_ETH_WakeUpCallback
 3517              	.LVL337:
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3518              		.loc 1 1642 0
 3519 014e B8E7     		b	.L250
 3520              	.L268:
 3521              		.align	2
 3522              	.L267:
 3523 0150 80000058 		.word	1476395136
 3524              		.cfi_endproc
 3525              	.LFE157:
 3527              		.section	.text.HAL_ETH_ReadPHYRegister,"ax",%progbits
 3528              		.align	1
 3529              		.global	HAL_ETH_ReadPHYRegister
 3530              		.syntax unified
 3531              		.thumb
 3532              		.thumb_func
 3533              		.fpu fpv5-d16
 3535              	HAL_ETH_ReadPHYRegister:
 3536              	.LFB165:
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t tmpreg, tickstart;
 3537              		.loc 1 1759 0
 3538              		.cfi_startproc
 3539              		@ args = 0, pretend = 0, frame = 0
 3540              		@ frame_needed = 0, uses_anonymous_args = 0
 3541              	.LVL338:
 3542 0000 70B5     		push	{r4, r5, r6, lr}
 3543              	.LCFI39:
 3544              		.cfi_def_cfa_offset 16
 3545              		.cfi_offset 4, -16
 3546              		.cfi_offset 5, -12
 3547              		.cfi_offset 6, -8
 3548              		.cfi_offset 14, -4
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3549              		.loc 1 1763 0
 3550 0002 0668     		ldr	r6, [r0]
 3551 0004 D6F80042 		ldr	r4, [r6, #512]
 3552 0008 14F0010F 		tst	r4, #1
 3553 000c 01D0     		beq	.L276
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 3554              		.loc 1 1765 0
 3555 000e 0120     		movs	r0, #1
 3556              	.LVL339:
 3557 0010 70BD     		pop	{r4, r5, r6, pc}
 3558              	.LVL340:
 3559              	.L276:
 3560 0012 1D46     		mov	r5, r3
 3561 0014 0446     		mov	r4, r0
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3562              		.loc 1 1769 0
 3563 0016 D6F80032 		ldr	r3, [r6, #512]
 3564              	.LVL341:
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(tmpreg, ETH_MACMDIOAR_RDA, (PHYReg << 16));
 3565              		.loc 1 1777 0
 3566 001a 23F07873 		bic	r3, r3, #65011712
ARM GAS  /tmp/cctf834y.s 			page 123


 3567              	.LVL342:
 3568 001e 43EA4151 		orr	r1, r3, r1, lsl #21
 3569              	.LVL343:
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(tmpreg, ETH_MACMDIOAR_MOC, ETH_MACMDIOAR_MOC_RD);
 3570              		.loc 1 1778 0
 3571 0022 21F4F811 		bic	r1, r1, #2031616
 3572              	.LVL344:
 3573 0026 41EA0242 		orr	r2, r1, r2, lsl #16
 3574              	.LVL345:
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3575              		.loc 1 1780 0
 3576 002a 42F00D02 		orr	r2, r2, #13
 3577              	.LVL346:
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3578              		.loc 1 1783 0
 3579 002e C6F80022 		str	r2, [r6, #512]
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3580              		.loc 1 1785 0
 3581 0032 FFF7FEFF 		bl	HAL_GetTick
 3582              	.LVL347:
 3583 0036 0646     		mov	r6, r0
 3584              	.LVL348:
 3585              	.L271:
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3586              		.loc 1 1788 0
 3587 0038 2268     		ldr	r2, [r4]
 3588 003a D2F80012 		ldr	r1, [r2, #512]
 3589 003e 11F0010F 		tst	r1, #1
 3590 0042 07D0     		beq	.L277
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 3591              		.loc 1 1790 0
 3592 0044 FFF7FEFF 		bl	HAL_GetTick
 3593              	.LVL349:
 3594 0048 801B     		subs	r0, r0, r6
 3595 004a B0F57A7F 		cmp	r0, #1000
 3596 004e F3D9     		bls	.L271
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 3597              		.loc 1 1792 0
 3598 0050 0120     		movs	r0, #1
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3599              		.loc 1 1800 0
 3600 0052 70BD     		pop	{r4, r5, r6, pc}
 3601              	.LVL350:
 3602              	.L277:
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3603              		.loc 1 1797 0
 3604 0054 D2F80432 		ldr	r3, [r2, #516]
 3605 0058 9BB2     		uxth	r3, r3
 3606 005a 2B60     		str	r3, [r5]
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 3607              		.loc 1 1799 0
 3608 005c 0020     		movs	r0, #0
 3609 005e 70BD     		pop	{r4, r5, r6, pc}
 3610              		.cfi_endproc
 3611              	.LFE165:
 3613              		.section	.text.HAL_ETH_WritePHYRegister,"ax",%progbits
 3614              		.align	1
ARM GAS  /tmp/cctf834y.s 			page 124


 3615              		.global	HAL_ETH_WritePHYRegister
 3616              		.syntax unified
 3617              		.thumb
 3618              		.thumb_func
 3619              		.fpu fpv5-d16
 3621              	HAL_ETH_WritePHYRegister:
 3622              	.LFB166:
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t tmpreg, tickstart;
 3623              		.loc 1 1813 0
 3624              		.cfi_startproc
 3625              		@ args = 0, pretend = 0, frame = 0
 3626              		@ frame_needed = 0, uses_anonymous_args = 0
 3627              	.LVL351:
 3628 0000 38B5     		push	{r3, r4, r5, lr}
 3629              	.LCFI40:
 3630              		.cfi_def_cfa_offset 16
 3631              		.cfi_offset 3, -16
 3632              		.cfi_offset 4, -12
 3633              		.cfi_offset 5, -8
 3634              		.cfi_offset 14, -4
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3635              		.loc 1 1817 0
 3636 0002 0568     		ldr	r5, [r0]
 3637 0004 D5F80042 		ldr	r4, [r5, #512]
 3638 0008 14F0010F 		tst	r4, #1
 3639 000c 01D0     		beq	.L285
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 3640              		.loc 1 1819 0
 3641 000e 0120     		movs	r0, #1
 3642              	.LVL352:
 3643 0010 38BD     		pop	{r3, r4, r5, pc}
 3644              	.LVL353:
 3645              	.L285:
 3646 0012 0446     		mov	r4, r0
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3647              		.loc 1 1823 0
 3648 0014 D5F80002 		ldr	r0, [r5, #512]
 3649              	.LVL354:
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(tmpreg, ETH_MACMDIOAR_RDA, (PHYReg << 16));
 3650              		.loc 1 1831 0
 3651 0018 20F07870 		bic	r0, r0, #65011712
 3652              	.LVL355:
 3653 001c 40EA4151 		orr	r1, r0, r1, lsl #21
 3654              	.LVL356:
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   MODIFY_REG(tmpreg, ETH_MACMDIOAR_MOC, ETH_MACMDIOAR_MOC_WR);
 3655              		.loc 1 1832 0
 3656 0020 21F4F811 		bic	r1, r1, #2031616
 3657              	.LVL357:
 3658 0024 41EA0242 		orr	r2, r1, r2, lsl #16
 3659              	.LVL358:
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   SET_BIT(tmpreg, ETH_MACMDIOAR_MB);
 3660              		.loc 1 1833 0
 3661 0028 22F00C02 		bic	r2, r2, #12
 3662              	.LVL359:
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3663              		.loc 1 1834 0
 3664 002c 42F00502 		orr	r2, r2, #5
ARM GAS  /tmp/cctf834y.s 			page 125


 3665              	.LVL360:
 3666 0030 9BB2     		uxth	r3, r3
 3667              	.LVL361:
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3668              		.loc 1 1838 0
 3669 0032 0C49     		ldr	r1, .L287
 3670 0034 C1F80432 		str	r3, [r1, #516]
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3671              		.loc 1 1841 0
 3672 0038 C1F80022 		str	r2, [r1, #512]
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3673              		.loc 1 1843 0
 3674 003c FFF7FEFF 		bl	HAL_GetTick
 3675              	.LVL362:
 3676 0040 0546     		mov	r5, r0
 3677              	.LVL363:
 3678              	.L280:
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3679              		.loc 1 1846 0
 3680 0042 2368     		ldr	r3, [r4]
 3681 0044 D3F80032 		ldr	r3, [r3, #512]
 3682 0048 13F0010F 		tst	r3, #1
 3683 004c 07D0     		beq	.L286
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     {
 3684              		.loc 1 1848 0
 3685 004e FFF7FEFF 		bl	HAL_GetTick
 3686              	.LVL364:
 3687 0052 401B     		subs	r0, r0, r5
 3688 0054 B0F57A7F 		cmp	r0, #1000
 3689 0058 F3D9     		bls	.L280
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     }
 3690              		.loc 1 1850 0
 3691 005a 0120     		movs	r0, #1
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3692              		.loc 1 1855 0
 3693 005c 38BD     		pop	{r3, r4, r5, pc}
 3694              	.LVL365:
 3695              	.L286:
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 3696              		.loc 1 1854 0
 3697 005e 0020     		movs	r0, #0
 3698 0060 38BD     		pop	{r3, r4, r5, pc}
 3699              	.LVL366:
 3700              	.L288:
 3701 0062 00BF     		.align	2
 3702              	.L287:
 3703 0064 00800240 		.word	1073905664
 3704              		.cfi_endproc
 3705              	.LFE166:
 3707              		.section	.text.HAL_ETH_GetMACConfig,"ax",%progbits
 3708              		.align	1
 3709              		.global	HAL_ETH_GetMACConfig
 3710              		.syntax unified
 3711              		.thumb
 3712              		.thumb_func
 3713              		.fpu fpv5-d16
 3715              	HAL_ETH_GetMACConfig:
ARM GAS  /tmp/cctf834y.s 			page 126


 3716              	.LFB167:
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if (macconf == NULL)
 3717              		.loc 1 1884 0
 3718              		.cfi_startproc
 3719              		@ args = 0, pretend = 0, frame = 0
 3720              		@ frame_needed = 0, uses_anonymous_args = 0
 3721              		@ link register save eliminated.
 3722              	.LVL367:
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3723              		.loc 1 1885 0
 3724 0000 0029     		cmp	r1, #0
 3725 0002 00F0EE80 		beq	.L291
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->DeferralCheck = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_DC)>> 4) > 0U) ? ENABLE : DI
 3726              		.loc 1 1891 0
 3727 0006 0268     		ldr	r2, [r0]
 3728 0008 1268     		ldr	r2, [r2]
 3729 000a 02F00C02 		and	r2, r2, #12
 3730 000e CA62     		str	r2, [r1, #44]
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->BackOffLimit = READ_BIT(heth->Instance->MACCR, ETH_MACCR_BL);
 3731              		.loc 1 1892 0
 3732 0010 0268     		ldr	r2, [r0]
 3733 0012 1268     		ldr	r2, [r2]
 3734 0014 C2F30012 		ubfx	r2, r2, #4, #1
 3735 0018 81F82820 		strb	r2, [r1, #40]
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->RetryTransmission = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_DR) >> 8) == 0U) ? ENABL
 3736              		.loc 1 1893 0
 3737 001c 0268     		ldr	r2, [r0]
 3738 001e 1268     		ldr	r2, [r2]
 3739 0020 02F06002 		and	r2, r2, #96
 3740 0024 4A62     		str	r2, [r1, #36]
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->CarrierSenseDuringTransmit = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_DCRS) >> 9) > 0
 3741              		.loc 1 1894 0
 3742 0026 0268     		ldr	r2, [r0]
 3743 0028 1268     		ldr	r2, [r2]
 3744 002a 12F4807F 		tst	r2, #256
 3745 002e 0CBF     		ite	eq
 3746 0030 0122     		moveq	r2, #1
 3747 0032 0022     		movne	r2, #0
 3748 0034 81F82020 		strb	r2, [r1, #32]
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->ReceiveOwn = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_DO) >> 10) == 0U) ? ENABLE : DI
 3749              		.loc 1 1895 0
 3750 0038 0268     		ldr	r2, [r0]
 3751 003a 1268     		ldr	r2, [r2]
 3752 003c C2F34022 		ubfx	r2, r2, #9, #1
 3753 0040 CA77     		strb	r2, [r1, #31]
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->CarrierSenseBeforeTransmit = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_ECRSFD) >> 11) 
 3754              		.loc 1 1896 0
 3755 0042 0268     		ldr	r2, [r0]
 3756 0044 1268     		ldr	r2, [r2]
 3757 0046 12F4806F 		tst	r2, #1024
 3758 004a 0CBF     		ite	eq
 3759 004c 0122     		moveq	r2, #1
 3760 004e 0022     		movne	r2, #0
 3761 0050 8A77     		strb	r2, [r1, #30]
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->LoopbackMode = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_LM) >> 12) > 0U) ? ENABLE : D
 3762              		.loc 1 1897 0
 3763 0052 0268     		ldr	r2, [r0]
ARM GAS  /tmp/cctf834y.s 			page 127


 3764 0054 1268     		ldr	r2, [r2]
 3765 0056 C2F3C022 		ubfx	r2, r2, #11, #1
 3766 005a 4A77     		strb	r2, [r1, #29]
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->DuplexMode = READ_BIT(heth->Instance->MACCR, ETH_MACCR_DM);
 3767              		.loc 1 1898 0
 3768 005c 0268     		ldr	r2, [r0]
 3769 005e 1268     		ldr	r2, [r2]
 3770 0060 C2F30032 		ubfx	r2, r2, #12, #1
 3771 0064 0A77     		strb	r2, [r1, #28]
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->Speed = READ_BIT(heth->Instance->MACCR, ETH_MACCR_FES);
 3772              		.loc 1 1899 0
 3773 0066 0268     		ldr	r2, [r0]
 3774 0068 1268     		ldr	r2, [r2]
 3775 006a 02F40052 		and	r2, r2, #8192
 3776 006e 8A61     		str	r2, [r1, #24]
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->JumboPacket = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_JE) >> 16) > 0U) ? ENABLE : DI
 3777              		.loc 1 1900 0
 3778 0070 0268     		ldr	r2, [r0]
 3779 0072 1268     		ldr	r2, [r2]
 3780 0074 02F48042 		and	r2, r2, #16384
 3781 0078 4A61     		str	r2, [r1, #20]
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->Jabber = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_JD) >>17) == 0U) ? ENABLE : DISABLE
 3782              		.loc 1 1901 0
 3783 007a 0268     		ldr	r2, [r0]
 3784 007c 1268     		ldr	r2, [r2]
 3785 007e C2F30042 		ubfx	r2, r2, #16, #1
 3786 0082 8A74     		strb	r2, [r1, #18]
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->Watchdog = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_WD) >>19) == 0U) ? ENABLE : DISAB
 3787              		.loc 1 1902 0
 3788 0084 0268     		ldr	r2, [r0]
 3789 0086 1268     		ldr	r2, [r2]
 3790 0088 12F4003F 		tst	r2, #131072
 3791 008c 0CBF     		ite	eq
 3792 008e 0122     		moveq	r2, #1
 3793 0090 0022     		movne	r2, #0
 3794 0092 4A74     		strb	r2, [r1, #17]
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->AutomaticPadCRCStrip = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_ACS) >> 20) > 0U) ? E
 3795              		.loc 1 1903 0
 3796 0094 0268     		ldr	r2, [r0]
 3797 0096 1268     		ldr	r2, [r2]
 3798 0098 12F4002F 		tst	r2, #524288
 3799 009c 0CBF     		ite	eq
 3800 009e 0122     		moveq	r2, #1
 3801 00a0 0022     		movne	r2, #0
 3802 00a2 0A74     		strb	r2, [r1, #16]
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->CRCStripTypePacket = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_CST) >> 21) > 0U) ? ENA
 3803              		.loc 1 1904 0
 3804 00a4 0268     		ldr	r2, [r0]
 3805 00a6 1268     		ldr	r2, [r2]
 3806 00a8 C2F30052 		ubfx	r2, r2, #20, #1
 3807 00ac CA73     		strb	r2, [r1, #15]
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->Support2KPacket = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_S2KP) >> 22) > 0U) ? ENABL
 3808              		.loc 1 1905 0
 3809 00ae 0268     		ldr	r2, [r0]
 3810 00b0 1268     		ldr	r2, [r2]
 3811 00b2 C2F34052 		ubfx	r2, r2, #21, #1
 3812 00b6 8A73     		strb	r2, [r1, #14]
ARM GAS  /tmp/cctf834y.s 			page 128


1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->GiantPacketSizeLimitControl = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_GPSLCE) >> 23)
 3813              		.loc 1 1906 0
 3814 00b8 0268     		ldr	r2, [r0]
 3815 00ba 1268     		ldr	r2, [r2]
 3816 00bc C2F38052 		ubfx	r2, r2, #22, #1
 3817 00c0 4A73     		strb	r2, [r1, #13]
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->InterPacketGapVal = READ_BIT(heth->Instance->MACCR, ETH_MACCR_IPG);
 3818              		.loc 1 1907 0
 3819 00c2 0268     		ldr	r2, [r0]
 3820 00c4 1268     		ldr	r2, [r2]
 3821 00c6 C2F3C052 		ubfx	r2, r2, #23, #1
 3822 00ca 0A73     		strb	r2, [r1, #12]
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->ChecksumOffload = ((READ_BIT(heth->Instance->MACCR, ETH_MACCR_IPC) >> 27) > 0U) ? ENABLE
 3823              		.loc 1 1908 0
 3824 00cc 0268     		ldr	r2, [r0]
 3825 00ce 1268     		ldr	r2, [r2]
 3826 00d0 02F0E062 		and	r2, r2, #117440512
 3827 00d4 8A60     		str	r2, [r1, #8]
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->SourceAddrControl = READ_BIT(heth->Instance->MACCR, ETH_MACCR_SARC);
 3828              		.loc 1 1909 0
 3829 00d6 0268     		ldr	r2, [r0]
 3830 00d8 1268     		ldr	r2, [r2]
 3831 00da C2F3C062 		ubfx	r2, r2, #27, #1
 3832 00de 0A71     		strb	r2, [r1, #4]
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3833              		.loc 1 1910 0
 3834 00e0 0268     		ldr	r2, [r0]
 3835 00e2 1268     		ldr	r2, [r2]
 3836 00e4 02F0E042 		and	r2, r2, #1879048192
 3837 00e8 0A60     		str	r2, [r1]
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->CRCCheckingRxPackets = ((READ_BIT(heth->Instance->MACECR, ETH_MACECR_DCRCC) >> 16) == 0U
 3838              		.loc 1 1912 0
 3839 00ea 0268     		ldr	r2, [r0]
 3840 00ec 5268     		ldr	r2, [r2, #4]
 3841 00ee C2F30D02 		ubfx	r2, r2, #0, #14
 3842 00f2 4A63     		str	r2, [r1, #52]
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->SlowProtocolDetect = ((READ_BIT(heth->Instance->MACECR, ETH_MACECR_SPEN) >> 17) > 0U) ? 
 3843              		.loc 1 1913 0
 3844 00f4 0268     		ldr	r2, [r0]
 3845 00f6 5268     		ldr	r2, [r2, #4]
 3846 00f8 12F4803F 		tst	r2, #65536
 3847 00fc 0CBF     		ite	eq
 3848 00fe 0122     		moveq	r2, #1
 3849 0100 0022     		movne	r2, #0
 3850 0102 81F83220 		strb	r2, [r1, #50]
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->UnicastSlowProtocolPacketDetect = ((READ_BIT(heth->Instance->MACECR, ETH_MACECR_USP) >> 
 3851              		.loc 1 1914 0
 3852 0106 0268     		ldr	r2, [r0]
 3853 0108 5268     		ldr	r2, [r2, #4]
 3854 010a C2F34042 		ubfx	r2, r2, #17, #1
 3855 010e 81F83120 		strb	r2, [r1, #49]
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->ExtendedInterPacketGap = ((READ_BIT(heth->Instance->MACECR, ETH_MACECR_EIPGEN) >> 24) > 
 3856              		.loc 1 1915 0
 3857 0112 0268     		ldr	r2, [r0]
 3858 0114 5268     		ldr	r2, [r2, #4]
 3859 0116 C2F38042 		ubfx	r2, r2, #18, #1
 3860 011a 81F83020 		strb	r2, [r1, #48]
ARM GAS  /tmp/cctf834y.s 			page 129


1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->ExtendedInterPacketGapVal = READ_BIT(heth->Instance->MACECR, ETH_MACECR_EIPG) >> 25;
 3861              		.loc 1 1916 0
 3862 011e 0268     		ldr	r2, [r0]
 3863 0120 5268     		ldr	r2, [r2, #4]
 3864 0122 C2F30062 		ubfx	r2, r2, #24, #1
 3865 0126 81F83820 		strb	r2, [r1, #56]
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3866              		.loc 1 1917 0
 3867 012a 0268     		ldr	r2, [r0]
 3868 012c 5268     		ldr	r2, [r2, #4]
 3869 012e C2F34462 		ubfx	r2, r2, #25, #5
 3870 0132 CA63     		str	r2, [r1, #60]
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->WatchdogTimeout = READ_BIT(heth->Instance->MACWTR, ETH_MACWTR_WTO);
 3871              		.loc 1 1920 0
 3872 0134 0268     		ldr	r2, [r0]
 3873 0136 D268     		ldr	r2, [r2, #12]
 3874 0138 C2F30022 		ubfx	r2, r2, #8, #1
 3875 013c 81F84020 		strb	r2, [r1, #64]
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3876              		.loc 1 1921 0
 3877 0140 0268     		ldr	r2, [r0]
 3878 0142 D268     		ldr	r2, [r2, #12]
 3879 0144 02F00F02 		and	r2, r2, #15
 3880 0148 4A64     		str	r2, [r1, #68]
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->ZeroQuantaPause = ((READ_BIT(heth->Instance->MACTFCR, ETH_MACTFCR_DZPQ) >> 7) == 0U) ? E
 3881              		.loc 1 1923 0
 3882 014a 0268     		ldr	r2, [r0]
 3883 014c 126F     		ldr	r2, [r2, #112]
 3884 014e C2F34002 		ubfx	r2, r2, #1, #1
 3885 0152 81F85420 		strb	r2, [r1, #84]
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->PauseLowThreshold = READ_BIT(heth->Instance->MACTFCR, ETH_MACTFCR_PLT);
 3886              		.loc 1 1924 0
 3887 0156 0268     		ldr	r2, [r0]
 3888 0158 126F     		ldr	r2, [r2, #112]
 3889 015a 12F0800F 		tst	r2, #128
 3890 015e 0CBF     		ite	eq
 3891 0160 0122     		moveq	r2, #1
 3892 0162 0022     		movne	r2, #0
 3893 0164 81F84C20 		strb	r2, [r1, #76]
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->PauseTime = (READ_BIT(heth->Instance->MACTFCR, ETH_MACTFCR_PT) >> 16);
 3894              		.loc 1 1925 0
 3895 0168 0268     		ldr	r2, [r0]
 3896 016a 126F     		ldr	r2, [r2, #112]
 3897 016c 02F07002 		and	r2, r2, #112
 3898 0170 0A65     		str	r2, [r1, #80]
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3899              		.loc 1 1926 0
 3900 0172 0268     		ldr	r2, [r0]
 3901 0174 126F     		ldr	r2, [r2, #112]
 3902 0176 120C     		lsrs	r2, r2, #16
 3903 0178 8A64     		str	r2, [r1, #72]
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->UnicastPausePacketDetect = ((READ_BIT(heth->Instance->MACRFCR, ETH_MACRFCR_UP) >> 1) > 0
 3904              		.loc 1 1929 0
 3905 017a 0268     		ldr	r2, [r0]
 3906 017c D2F89020 		ldr	r2, [r2, #144]
 3907 0180 02F00102 		and	r2, r2, #1
 3908 0184 81F85620 		strb	r2, [r1, #86]
ARM GAS  /tmp/cctf834y.s 			page 130


1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3909              		.loc 1 1930 0
 3910 0188 0268     		ldr	r2, [r0]
 3911 018a D2F89020 		ldr	r2, [r2, #144]
 3912 018e C2F34002 		ubfx	r2, r2, #1, #1
 3913 0192 81F85520 		strb	r2, [r1, #85]
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3914              		.loc 1 1932 0
 3915 0196 0268     		ldr	r2, [r0]
 3916 0198 D2F8002D 		ldr	r2, [r2, #3328]
 3917 019c 02F07202 		and	r2, r2, #114
 3918 01a0 8A65     		str	r2, [r1, #88]
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->ForwardRxUndersizedGoodPacket = ((READ_BIT(heth->Instance->MTLRQOMR, ETH_MTLRQOMR_FUP) >
 3919              		.loc 1 1934 0
 3920 01a2 0268     		ldr	r2, [r0]
 3921 01a4 D2F8302D 		ldr	r2, [r2, #3376]
 3922 01a8 02F02302 		and	r2, r2, #35
 3923 01ac CA65     		str	r2, [r1, #92]
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->ForwardRxErrorPacket = ((READ_BIT(heth->Instance->MTLRQOMR, ETH_MTLRQOMR_FEP) >> 4) > 0U
 3924              		.loc 1 1935 0
 3925 01ae 0268     		ldr	r2, [r0]
 3926 01b0 D2F8302D 		ldr	r2, [r2, #3376]
 3927 01b4 C2F3C002 		ubfx	r2, r2, #3, #1
 3928 01b8 81F86220 		strb	r2, [r1, #98]
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   macconf->DropTCPIPChecksumErrorPacket = ((READ_BIT(heth->Instance->MTLRQOMR, ETH_MTLRQOMR_DISTCPE
 3929              		.loc 1 1936 0
 3930 01bc 0268     		ldr	r2, [r0]
 3931 01be D2F8302D 		ldr	r2, [r2, #3376]
 3932 01c2 C2F30012 		ubfx	r2, r2, #4, #1
 3933 01c6 81F86120 		strb	r2, [r1, #97]
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3934              		.loc 1 1937 0
 3935 01ca 0268     		ldr	r2, [r0]
 3936 01cc D2F8302D 		ldr	r2, [r2, #3376]
 3937 01d0 12F0400F 		tst	r2, #64
 3938 01d4 0CBF     		ite	eq
 3939 01d6 0122     		moveq	r2, #1
 3940 01d8 0022     		movne	r2, #0
 3941 01da 81F86020 		strb	r2, [r1, #96]
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 3942              		.loc 1 1939 0
 3943 01de 0020     		movs	r0, #0
 3944              	.LVL368:
 3945 01e0 7047     		bx	lr
 3946              	.LVL369:
 3947              	.L291:
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 3948              		.loc 1 1887 0
 3949 01e2 0120     		movs	r0, #1
 3950              	.LVL370:
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3951              		.loc 1 1940 0
 3952 01e4 7047     		bx	lr
 3953              		.cfi_endproc
 3954              	.LFE167:
 3956              		.section	.text.HAL_ETH_GetDMAConfig,"ax",%progbits
 3957              		.align	1
ARM GAS  /tmp/cctf834y.s 			page 131


 3958              		.global	HAL_ETH_GetDMAConfig
 3959              		.syntax unified
 3960              		.thumb
 3961              		.thumb_func
 3962              		.fpu fpv5-d16
 3964              	HAL_ETH_GetDMAConfig:
 3965              	.LFB168:
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if (dmaconf == NULL)
 3966              		.loc 1 1951 0
 3967              		.cfi_startproc
 3968              		@ args = 0, pretend = 0, frame = 0
 3969              		@ frame_needed = 0, uses_anonymous_args = 0
 3970              		@ link register save eliminated.
 3971              	.LVL371:
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 3972              		.loc 1 1952 0
 3973 0000 0B46     		mov	r3, r1
 3974 0002 0029     		cmp	r1, #0
 3975 0004 4BD0     		beq	.L294
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaconf->BurstMode = READ_BIT(heth->Instance->DMASBMR, ETH_DMASBMR_FB | ETH_DMASBMR_MB);
 3976              		.loc 1 1957 0
 3977 0006 0168     		ldr	r1, [r0]
 3978              	.LVL372:
 3979 0008 41F20402 		movw	r2, #4100
 3980 000c 8958     		ldr	r1, [r1, r2]
 3981 000e C1F30031 		ubfx	r1, r1, #12, #1
 3982 0012 1971     		strb	r1, [r3, #4]
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaconf->RebuildINCRxBurst = ((READ_BIT(heth->Instance->DMASBMR, ETH_DMASBMR_RB)>> 15) > 0U) ? EN
 3983              		.loc 1 1958 0
 3984 0014 0168     		ldr	r1, [r0]
 3985 0016 8958     		ldr	r1, [r1, r2]
 3986 0018 21F47F51 		bic	r1, r1, #16320
 3987 001c 21F03E01 		bic	r1, r1, #62
 3988 0020 4904     		lsls	r1, r1, #17
 3989 0022 490C     		lsrs	r1, r1, #17
 3990 0024 9960     		str	r1, [r3, #8]
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3991              		.loc 1 1959 0
 3992 0026 0168     		ldr	r1, [r0]
 3993 0028 8A58     		ldr	r2, [r1, r2]
 3994 002a C2F3C032 		ubfx	r2, r2, #15, #1
 3995 002e 1A73     		strb	r2, [r3, #12]
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 3996              		.loc 1 1961 0
 3997 0030 0268     		ldr	r2, [r0]
 3998 0032 02F58052 		add	r2, r2, #4096
 3999 0036 1268     		ldr	r2, [r2]
 4000 0038 22F4FF62 		bic	r2, r2, #2040
 4001 003c 22F00502 		bic	r2, r2, #5
 4002 0040 5204     		lsls	r2, r2, #17
 4003 0042 520C     		lsrs	r2, r2, #17
 4004 0044 1A60     		str	r2, [r3]
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaconf->MaximumSegmentSize = READ_BIT(heth->Instance->DMACCR, ETH_DMACCR_MSS);
 4005              		.loc 1 1963 0
 4006 0046 0268     		ldr	r2, [r0]
 4007 0048 02F58852 		add	r2, r2, #4352
 4008 004c 1268     		ldr	r2, [r2]
ARM GAS  /tmp/cctf834y.s 			page 132


 4009 004e C2F30042 		ubfx	r2, r2, #16, #1
 4010 0052 5A73     		strb	r2, [r3, #13]
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4011              		.loc 1 1964 0
 4012 0054 0268     		ldr	r2, [r0]
 4013 0056 02F58852 		add	r2, r2, #4352
 4014 005a 1268     		ldr	r2, [r2]
 4015 005c C2F30D02 		ubfx	r2, r2, #0, #14
 4016 0060 1A62     		str	r2, [r3, #32]
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaconf->RxDMABurstLength = READ_BIT(heth->Instance->DMACRCR, ETH_DMACRCR_RPBL);
 4017              		.loc 1 1966 0
 4018 0062 0268     		ldr	r2, [r0]
 4019 0064 41F20811 		movw	r1, #4360
 4020 0068 5258     		ldr	r2, [r2, r1]
 4021 006a D20F     		lsrs	r2, r2, #31
 4022 006c 1A77     		strb	r2, [r3, #28]
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4023              		.loc 1 1967 0
 4024 006e 0268     		ldr	r2, [r0]
 4025 0070 5258     		ldr	r2, [r2, r1]
 4026 0072 02F47C12 		and	r2, r2, #4128768
 4027 0076 9A61     		str	r2, [r3, #24]
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaconf->TCPSegmentation = ((READ_BIT(heth->Instance->DMACTCR, ETH_DMACTCR_TSE) >> 12) > 0U) ? EN
 4028              		.loc 1 1969 0
 4029 0078 0168     		ldr	r1, [r0]
 4030 007a 41F20412 		movw	r2, #4356
 4031 007e 8958     		ldr	r1, [r1, r2]
 4032 0080 C1F30011 		ubfx	r1, r1, #4, #1
 4033 0084 1975     		strb	r1, [r3, #20]
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   dmaconf->TxDMABurstLength = READ_BIT(heth->Instance->DMACTCR, ETH_DMACTCR_TPBL);
 4034              		.loc 1 1970 0
 4035 0086 0168     		ldr	r1, [r0]
 4036 0088 8958     		ldr	r1, [r1, r2]
 4037 008a C1F30031 		ubfx	r1, r1, #12, #1
 4038 008e 5977     		strb	r1, [r3, #29]
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4039              		.loc 1 1971 0
 4040 0090 0168     		ldr	r1, [r0]
 4041 0092 8A58     		ldr	r2, [r1, r2]
 4042 0094 02F47C12 		and	r2, r2, #4128768
 4043 0098 1A61     		str	r2, [r3, #16]
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 4044              		.loc 1 1973 0
 4045 009a 0020     		movs	r0, #0
 4046              	.LVL373:
 4047 009c 7047     		bx	lr
 4048              	.LVL374:
 4049              	.L294:
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4050              		.loc 1 1954 0
 4051 009e 0120     		movs	r0, #1
 4052              	.LVL375:
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4053              		.loc 1 1974 0
 4054 00a0 7047     		bx	lr
 4055              		.cfi_endproc
 4056              	.LFE168:
ARM GAS  /tmp/cctf834y.s 			page 133


 4058              		.section	.text.HAL_ETH_SetMACConfig,"ax",%progbits
 4059              		.align	1
 4060              		.global	HAL_ETH_SetMACConfig
 4061              		.syntax unified
 4062              		.thumb
 4063              		.thumb_func
 4064              		.fpu fpv5-d16
 4066              	HAL_ETH_SetMACConfig:
 4067              	.LFB169:
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(macconf == NULL)
 4068              		.loc 1 1985 0
 4069              		.cfi_startproc
 4070              		@ args = 0, pretend = 0, frame = 0
 4071              		@ frame_needed = 0, uses_anonymous_args = 0
 4072              	.LVL376:
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 4073              		.loc 1 1986 0
 4074 0000 49B1     		cbz	r1, .L297
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(macconf == NULL)
 4075              		.loc 1 1985 0
 4076 0002 08B5     		push	{r3, lr}
 4077              	.LCFI41:
 4078              		.cfi_def_cfa_offset 8
 4079              		.cfi_offset 3, -8
 4080              		.cfi_offset 14, -4
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 4081              		.loc 1 1991 0
 4082 0004 836D     		ldr	r3, [r0, #88]
 4083 0006 102B     		cmp	r3, #16
 4084 0008 01D0     		beq	.L303
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4085              		.loc 1 1999 0
 4086 000a 0120     		movs	r0, #1
 4087              	.LVL377:
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4088              		.loc 1 2001 0
 4089 000c 08BD     		pop	{r3, pc}
 4090              	.LVL378:
 4091              	.L303:
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4092              		.loc 1 1993 0
 4093 000e FFF7FEFF 		bl	ETH_SetMACConfig
 4094              	.LVL379:
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4095              		.loc 1 1995 0
 4096 0012 0020     		movs	r0, #0
 4097 0014 08BD     		pop	{r3, pc}
 4098              	.LVL380:
 4099              	.L297:
 4100              	.LCFI42:
 4101              		.cfi_def_cfa_offset 0
 4102              		.cfi_restore 3
 4103              		.cfi_restore 14
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4104              		.loc 1 1988 0
 4105 0016 0120     		movs	r0, #1
 4106              	.LVL381:
ARM GAS  /tmp/cctf834y.s 			page 134


 4107 0018 7047     		bx	lr
 4108              		.cfi_endproc
 4109              	.LFE169:
 4111              		.section	.text.HAL_ETH_SetDMAConfig,"ax",%progbits
 4112              		.align	1
 4113              		.global	HAL_ETH_SetDMAConfig
 4114              		.syntax unified
 4115              		.thumb
 4116              		.thumb_func
 4117              		.fpu fpv5-d16
 4119              	HAL_ETH_SetDMAConfig:
 4120              	.LFB170:
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(dmaconf == NULL)
 4121              		.loc 1 2012 0
 4122              		.cfi_startproc
 4123              		@ args = 0, pretend = 0, frame = 0
 4124              		@ frame_needed = 0, uses_anonymous_args = 0
 4125              	.LVL382:
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 4126              		.loc 1 2013 0
 4127 0000 49B1     		cbz	r1, .L306
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(dmaconf == NULL)
 4128              		.loc 1 2012 0
 4129 0002 08B5     		push	{r3, lr}
 4130              	.LCFI43:
 4131              		.cfi_def_cfa_offset 8
 4132              		.cfi_offset 3, -8
 4133              		.cfi_offset 14, -4
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 4134              		.loc 1 2018 0
 4135 0004 836D     		ldr	r3, [r0, #88]
 4136 0006 102B     		cmp	r3, #16
 4137 0008 01D0     		beq	.L312
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4138              		.loc 1 2026 0
 4139 000a 0120     		movs	r0, #1
 4140              	.LVL383:
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4141              		.loc 1 2028 0
 4142 000c 08BD     		pop	{r3, pc}
 4143              	.LVL384:
 4144              	.L312:
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4145              		.loc 1 2020 0
 4146 000e FFF7FEFF 		bl	ETH_SetDMAConfig
 4147              	.LVL385:
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4148              		.loc 1 2022 0
 4149 0012 0020     		movs	r0, #0
 4150 0014 08BD     		pop	{r3, pc}
 4151              	.LVL386:
 4152              	.L306:
 4153              	.LCFI44:
 4154              		.cfi_def_cfa_offset 0
 4155              		.cfi_restore 3
 4156              		.cfi_restore 14
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
ARM GAS  /tmp/cctf834y.s 			page 135


 4157              		.loc 1 2015 0
 4158 0016 0120     		movs	r0, #1
 4159              	.LVL387:
 4160 0018 7047     		bx	lr
 4161              		.cfi_endproc
 4162              	.LFE170:
 4164              		.section	.text.HAL_ETH_SetMDIOClockRange,"ax",%progbits
 4165              		.align	1
 4166              		.global	HAL_ETH_SetMDIOClockRange
 4167              		.syntax unified
 4168              		.thumb
 4169              		.thumb_func
 4170              		.fpu fpv5-d16
 4172              	HAL_ETH_SetMDIOClockRange:
 4173              	.LFB171:
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t tmpreg, hclk;
 4174              		.loc 1 2037 0
 4175              		.cfi_startproc
 4176              		@ args = 0, pretend = 0, frame = 0
 4177              		@ frame_needed = 0, uses_anonymous_args = 0
 4178              	.LVL388:
 4179 0000 38B5     		push	{r3, r4, r5, lr}
 4180              	.LCFI45:
 4181              		.cfi_def_cfa_offset 16
 4182              		.cfi_offset 3, -16
 4183              		.cfi_offset 4, -12
 4184              		.cfi_offset 5, -8
 4185              		.cfi_offset 14, -4
 4186 0002 0546     		mov	r5, r0
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4187              		.loc 1 2041 0
 4188 0004 0368     		ldr	r3, [r0]
 4189 0006 D3F80042 		ldr	r4, [r3, #512]
 4190              	.LVL389:
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4191              		.loc 1 2044 0
 4192 000a 24F47064 		bic	r4, r4, #3840
 4193              	.LVL390:
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4194              		.loc 1 2047 0
 4195 000e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 4196              	.LVL391:
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 4197              		.loc 1 2050 0
 4198 0012 114B     		ldr	r3, .L322
 4199 0014 0344     		add	r3, r3, r0
 4200 0016 114A     		ldr	r2, .L322+4
 4201 0018 9342     		cmp	r3, r2
 4202 001a 11D9     		bls	.L319
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 4203              		.loc 1 2055 0
 4204 001c 104B     		ldr	r3, .L322+8
 4205 001e 0344     		add	r3, r3, r0
 4206 0020 104A     		ldr	r2, .L322+12
 4207 0022 9342     		cmp	r3, r2
 4208 0024 12D9     		bls	.L320
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
ARM GAS  /tmp/cctf834y.s 			page 136


 4209              		.loc 1 2060 0
 4210 0026 104B     		ldr	r3, .L322+16
 4211 0028 0344     		add	r3, r3, r0
 4212 002a 104A     		ldr	r2, .L322+20
 4213 002c 9342     		cmp	r3, r2
 4214 002e 09D9     		bls	.L315
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 4215              		.loc 1 2065 0
 4216 0030 0F4B     		ldr	r3, .L322+24
 4217 0032 0344     		add	r3, r3, r0
 4218 0034 0F4A     		ldr	r2, .L322+28
 4219 0036 9342     		cmp	r3, r2
 4220 0038 0BD9     		bls	.L321
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4221              		.loc 1 2073 0
 4222 003a 44F48064 		orr	r4, r4, #1024
 4223              	.LVL392:
 4224 003e 01E0     		b	.L315
 4225              	.L319:
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4226              		.loc 1 2053 0
 4227 0040 44F40074 		orr	r4, r4, #512
 4228              	.LVL393:
 4229              	.L315:
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 4230              		.loc 1 2077 0
 4231 0044 2B68     		ldr	r3, [r5]
 4232 0046 C3F80042 		str	r4, [r3, #512]
 4233 004a 38BD     		pop	{r3, r4, r5, pc}
 4234              	.LVL394:
 4235              	.L320:
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4236              		.loc 1 2058 0
 4237 004c 44F44074 		orr	r4, r4, #768
 4238              	.LVL395:
 4239 0050 F8E7     		b	.L315
 4240              	.L321:
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4241              		.loc 1 2068 0
 4242 0052 44F48074 		orr	r4, r4, #256
 4243              	.LVL396:
 4244 0056 F5E7     		b	.L315
 4245              	.L323:
 4246              		.align	2
 4247              	.L322:
 4248 0058 00D3CEFE 		.word	-20000000
 4249 005c BFE1E400 		.word	14999999
 4250 0060 40F1E9FD 		.word	-35000000
 4251 0064 3F787D01 		.word	24999999
 4252 0068 00796CFC 		.word	-60000000
 4253 006c FF596202 		.word	39999999
 4254 0070 001F0AFA 		.word	-100000000
 4255 0074 7FF0FA02 		.word	49999999
 4256              		.cfi_endproc
 4257              	.LFE171:
 4259              		.section	.text.HAL_ETH_SetMACFilterConfig,"ax",%progbits
 4260              		.align	1
ARM GAS  /tmp/cctf834y.s 			page 137


 4261              		.global	HAL_ETH_SetMACFilterConfig
 4262              		.syntax unified
 4263              		.thumb
 4264              		.thumb_func
 4265              		.fpu fpv5-d16
 4267              	HAL_ETH_SetMACFilterConfig:
 4268              	.LFB172:
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t filterconfig;
 4269              		.loc 1 2089 0
 4270              		.cfi_startproc
 4271              		@ args = 0, pretend = 0, frame = 0
 4272              		@ frame_needed = 0, uses_anonymous_args = 0
 4273              		@ link register save eliminated.
 4274              	.LVL397:
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 4275              		.loc 1 2092 0
 4276 0000 0A46     		mov	r2, r1
 4277 0002 41B3     		cbz	r1, .L327
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                   ((uint32_t)pFilterConfig->HashUnicast << 1) |
 4278              		.loc 1 2097 0
 4279 0004 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                     ((uint32_t)pFilterConfig->HashMulticast << 2)  |
 4280              		.loc 1 2098 0
 4281 0006 C978     		ldrb	r1, [r1, #3]	@ zero_extendqisi2
 4282              	.LVL398:
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                   ((uint32_t)pFilterConfig->HashUnicast << 1) |
 4283              		.loc 1 2097 0
 4284 0008 43EA4103 		orr	r3, r3, r1, lsl #1
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                       ((uint32_t)pFilterConfig->DestAddrInverseFiltering << 3) |
 4285              		.loc 1 2099 0
 4286 000c 1179     		ldrb	r1, [r2, #4]	@ zero_extendqisi2
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                     ((uint32_t)pFilterConfig->HashMulticast << 2)  |
 4287              		.loc 1 2098 0
 4288 000e 43EA8103 		orr	r3, r3, r1, lsl #2
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                         ((uint32_t)pFilterConfig->PassAllMulticast << 4) |
 4289              		.loc 1 2100 0
 4290 0012 117A     		ldrb	r1, [r2, #8]	@ zero_extendqisi2
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                       ((uint32_t)pFilterConfig->DestAddrInverseFiltering << 3) |
 4291              		.loc 1 2099 0
 4292 0014 43EAC103 		orr	r3, r3, r1, lsl #3
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                           ((uint32_t)((pFilterConfig->BroadcastFilter == DISABLE) ? 1U : 0U) << 5) 
 4293              		.loc 1 2101 0
 4294 0018 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                         ((uint32_t)pFilterConfig->PassAllMulticast << 4) |
 4295              		.loc 1 2100 0
 4296 001a 43EA0111 		orr	r1, r3, r1, lsl #4
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                             ((uint32_t)pFilterConfig->SrcAddrInverseFiltering << 8) |
 4297              		.loc 1 2102 0
 4298 001e 537A     		ldrb	r3, [r2, #9]	@ zero_extendqisi2
 4299 0020 BBB9     		cbnz	r3, .L328
 4300 0022 2023     		movs	r3, #32
 4301              	.L326:
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                           ((uint32_t)((pFilterConfig->BroadcastFilter == DISABLE) ? 1U : 0U) << 5) 
 4302              		.loc 1 2101 0
 4303 0024 0B43     		orrs	r3, r3, r1
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                               ((uint32_t)pFilterConfig->SrcAddrFiltering << 9) |
 4304              		.loc 1 2103 0
ARM GAS  /tmp/cctf834y.s 			page 138


 4305 0026 D179     		ldrb	r1, [r2, #7]	@ zero_extendqisi2
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                             ((uint32_t)pFilterConfig->SrcAddrInverseFiltering << 8) |
 4306              		.loc 1 2102 0
 4307 0028 43EA0123 		orr	r3, r3, r1, lsl #8
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                 ((uint32_t)pFilterConfig->HachOrPerfectFilter << 10) |
 4308              		.loc 1 2104 0
 4309 002c 9179     		ldrb	r1, [r2, #6]	@ zero_extendqisi2
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                               ((uint32_t)pFilterConfig->SrcAddrFiltering << 9) |
 4310              		.loc 1 2103 0
 4311 002e 43EA4123 		orr	r3, r3, r1, lsl #9
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                   ((uint32_t)pFilterConfig->ReceiveAllMode << 31) |
 4312              		.loc 1 2105 0
 4313 0032 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                 ((uint32_t)pFilterConfig->HachOrPerfectFilter << 10) |
 4314              		.loc 1 2104 0
 4315 0034 43EA8123 		orr	r3, r3, r1, lsl #10
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                     pFilterConfig->ControlPacketsFilter);
 4316              		.loc 1 2106 0
 4317 0038 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                   ((uint32_t)pFilterConfig->ReceiveAllMode << 31) |
 4318              		.loc 1 2105 0
 4319 003a 43EAC173 		orr	r3, r3, r1, lsl #31
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4320              		.loc 1 2107 0
 4321 003e D268     		ldr	r2, [r2, #12]
 4322              	.LVL399:
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                   ((uint32_t)pFilterConfig->HashUnicast << 1) |
 4323              		.loc 1 2097 0
 4324 0040 1343     		orrs	r3, r3, r2
 4325              	.LVL400:
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4326              		.loc 1 2109 0
 4327 0042 0168     		ldr	r1, [r0]
 4328 0044 8868     		ldr	r0, [r1, #8]
 4329              	.LVL401:
 4330 0046 054A     		ldr	r2, .L329
 4331 0048 0240     		ands	r2, r2, r0
 4332 004a 1343     		orrs	r3, r3, r2
 4333              	.LVL402:
 4334 004c 8B60     		str	r3, [r1, #8]
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 4335              		.loc 1 2111 0
 4336 004e 0020     		movs	r0, #0
 4337 0050 7047     		bx	lr
 4338              	.LVL403:
 4339              	.L328:
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                             ((uint32_t)pFilterConfig->SrcAddrInverseFiltering << 8) |
 4340              		.loc 1 2102 0
 4341 0052 0023     		movs	r3, #0
 4342 0054 E6E7     		b	.L326
 4343              	.LVL404:
 4344              	.L327:
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4345              		.loc 1 2094 0
 4346 0056 0120     		movs	r0, #1
 4347              	.LVL405:
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
ARM GAS  /tmp/cctf834y.s 			page 139


 4348              		.loc 1 2112 0
 4349 0058 7047     		bx	lr
 4350              	.L330:
 4351 005a 00BF     		.align	2
 4352              	.L329:
 4353 005c 00F8FF7F 		.word	2147481600
 4354              		.cfi_endproc
 4355              	.LFE172:
 4357              		.section	.text.HAL_ETH_GetMACFilterConfig,"ax",%progbits
 4358              		.align	1
 4359              		.global	HAL_ETH_GetMACFilterConfig
 4360              		.syntax unified
 4361              		.thumb
 4362              		.thumb_func
 4363              		.fpu fpv5-d16
 4365              	HAL_ETH_GetMACFilterConfig:
 4366              	.LFB173:
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(pFilterConfig == NULL)
 4367              		.loc 1 2123 0
 4368              		.cfi_startproc
 4369              		@ args = 0, pretend = 0, frame = 0
 4370              		@ frame_needed = 0, uses_anonymous_args = 0
 4371              		@ link register save eliminated.
 4372              	.LVL406:
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 4373              		.loc 1 2124 0
 4374 0000 0029     		cmp	r1, #0
 4375 0002 3AD0     		beq	.L333
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->HashUnicast = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_HUC) >> 1) > 0U) ? ENA
 4376              		.loc 1 2129 0
 4377 0004 0268     		ldr	r2, [r0]
 4378 0006 9268     		ldr	r2, [r2, #8]
 4379 0008 02F00102 		and	r2, r2, #1
 4380 000c 0A70     		strb	r2, [r1]
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->HashMulticast = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_HMC) >> 2) > 0U) ? E
 4381              		.loc 1 2130 0
 4382 000e 0268     		ldr	r2, [r0]
 4383 0010 9268     		ldr	r2, [r2, #8]
 4384 0012 C2F34002 		ubfx	r2, r2, #1, #1
 4385 0016 CA70     		strb	r2, [r1, #3]
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->DestAddrInverseFiltering = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_DAIF) >> 
 4386              		.loc 1 2131 0
 4387 0018 0268     		ldr	r2, [r0]
 4388 001a 9268     		ldr	r2, [r2, #8]
 4389 001c C2F38002 		ubfx	r2, r2, #2, #1
 4390 0020 0A71     		strb	r2, [r1, #4]
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->PassAllMulticast = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_PM) >> 4) > 0U) ?
 4391              		.loc 1 2132 0
 4392 0022 0268     		ldr	r2, [r0]
 4393 0024 9268     		ldr	r2, [r2, #8]
 4394 0026 C2F3C002 		ubfx	r2, r2, #3, #1
 4395 002a 0A72     		strb	r2, [r1, #8]
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->BroadcastFilter = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_DBF) >> 5) == 0U) 
 4396              		.loc 1 2133 0
 4397 002c 0268     		ldr	r2, [r0]
 4398 002e 9268     		ldr	r2, [r2, #8]
 4399 0030 C2F30012 		ubfx	r2, r2, #4, #1
ARM GAS  /tmp/cctf834y.s 			page 140


 4400 0034 4A71     		strb	r2, [r1, #5]
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->ControlPacketsFilter = READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_PCF);
 4401              		.loc 1 2134 0
 4402 0036 0268     		ldr	r2, [r0]
 4403 0038 9268     		ldr	r2, [r2, #8]
 4404 003a 12F0200F 		tst	r2, #32
 4405 003e 0CBF     		ite	eq
 4406 0040 0122     		moveq	r2, #1
 4407 0042 0022     		movne	r2, #0
 4408 0044 4A72     		strb	r2, [r1, #9]
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->SrcAddrInverseFiltering = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_SAIF) >> 8
 4409              		.loc 1 2135 0
 4410 0046 0268     		ldr	r2, [r0]
 4411 0048 9268     		ldr	r2, [r2, #8]
 4412 004a 02F0C002 		and	r2, r2, #192
 4413 004e CA60     		str	r2, [r1, #12]
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->SrcAddrFiltering = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_SAF) >> 9) > 0U) 
 4414              		.loc 1 2136 0
 4415 0050 0268     		ldr	r2, [r0]
 4416 0052 9268     		ldr	r2, [r2, #8]
 4417 0054 C2F30022 		ubfx	r2, r2, #8, #1
 4418 0058 CA71     		strb	r2, [r1, #7]
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->HachOrPerfectFilter = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_HPF) >> 10) > 
 4419              		.loc 1 2137 0
 4420 005a 0268     		ldr	r2, [r0]
 4421 005c 9268     		ldr	r2, [r2, #8]
 4422 005e C2F34022 		ubfx	r2, r2, #9, #1
 4423 0062 8A71     		strb	r2, [r1, #6]
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   pFilterConfig->ReceiveAllMode = ((READ_BIT(heth->Instance->MACPFR, ETH_MACPFR_RA) >> 31) > 0U) ? 
 4424              		.loc 1 2138 0
 4425 0064 0268     		ldr	r2, [r0]
 4426 0066 9268     		ldr	r2, [r2, #8]
 4427 0068 C2F38022 		ubfx	r2, r2, #10, #1
 4428 006c 8A70     		strb	r2, [r1, #2]
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4429              		.loc 1 2139 0
 4430 006e 0268     		ldr	r2, [r0]
 4431 0070 9268     		ldr	r2, [r2, #8]
 4432 0072 D20F     		lsrs	r2, r2, #31
 4433 0074 4A70     		strb	r2, [r1, #1]
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 4434              		.loc 1 2141 0
 4435 0076 0020     		movs	r0, #0
 4436              	.LVL407:
 4437 0078 7047     		bx	lr
 4438              	.LVL408:
 4439              	.L333:
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4440              		.loc 1 2126 0
 4441 007a 0120     		movs	r0, #1
 4442              	.LVL409:
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4443              		.loc 1 2142 0
 4444 007c 7047     		bx	lr
 4445              		.cfi_endproc
 4446              	.LFE173:
 4448              		.section	.text.HAL_ETH_SetSourceMACAddrMatch,"ax",%progbits
ARM GAS  /tmp/cctf834y.s 			page 141


 4449              		.align	1
 4450              		.global	HAL_ETH_SetSourceMACAddrMatch
 4451              		.syntax unified
 4452              		.thumb
 4453              		.thumb_func
 4454              		.fpu fpv5-d16
 4456              	HAL_ETH_SetSourceMACAddrMatch:
 4457              	.LFB174:
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t macaddrhr, macaddrlr;
 4458              		.loc 1 2157 0
 4459              		.cfi_startproc
 4460              		@ args = 0, pretend = 0, frame = 0
 4461              		@ frame_needed = 0, uses_anonymous_args = 0
 4462              		@ link register save eliminated.
 4463              	.LVL410:
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 4464              		.loc 1 2160 0
 4465 0000 EAB1     		cbz	r2, .L336
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t macaddrhr, macaddrlr;
 4466              		.loc 1 2157 0
 4467 0002 30B4     		push	{r4, r5}
 4468              	.LCFI46:
 4469              		.cfi_def_cfa_offset 8
 4470              		.cfi_offset 4, -8
 4471              		.cfi_offset 5, -4
 4472 0004 1446     		mov	r4, r2
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Get mac addr low reg offset */
 4473              		.loc 1 2166 0
 4474 0006 0268     		ldr	r2, [r0]
 4475              	.LVL411:
 4476 0008 02F54070 		add	r0, r2, #768
 4477              	.LVL412:
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4478              		.loc 1 2168 0
 4479 000c 02F54172 		add	r2, r2, #772
 4480              	.LVL413:
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* Set MAC addr bits 0 to 31 */
 4481              		.loc 1 2171 0
 4482 0010 6579     		ldrb	r5, [r4, #5]	@ zero_extendqisi2
 4483 0012 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4484 0014 43EA0523 		orr	r3, r3, r5, lsl #8
 4485 0018 4350     		str	r3, [r0, r1]
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                    ((uint32_t)(pMACAddr[1]) << 8) | (uint32_t)pMACAddr[0]);
 4486              		.loc 1 2173 0
 4487 001a E578     		ldrb	r5, [r4, #3]	@ zero_extendqisi2
 4488 001c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 4489 001e 1B04     		lsls	r3, r3, #16
 4490 0020 43EA0563 		orr	r3, r3, r5, lsl #24
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4491              		.loc 1 2174 0
 4492 0024 6578     		ldrb	r5, [r4, #1]	@ zero_extendqisi2
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                    ((uint32_t)(pMACAddr[1]) << 8) | (uint32_t)pMACAddr[0]);
 4493              		.loc 1 2173 0
 4494 0026 43EA0523 		orr	r3, r3, r5, lsl #8
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4495              		.loc 1 2174 0
 4496 002a 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
ARM GAS  /tmp/cctf834y.s 			page 142


 4497              	.LVL414:
 4498 002c 2343     		orrs	r3, r3, r4
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                                    ((uint32_t)(pMACAddr[1]) << 8) | (uint32_t)pMACAddr[0]);
 4499              		.loc 1 2173 0
 4500 002e 8B50     		str	r3, [r1, r2]
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4501              		.loc 1 2177 0
 4502 0030 4358     		ldr	r3, [r0, r1]
 4503 0032 43F04043 		orr	r3, r3, #-1073741824
 4504 0036 4350     		str	r3, [r0, r1]
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 4505              		.loc 1 2179 0
 4506 0038 0020     		movs	r0, #0
 4507              	.LVL415:
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4508              		.loc 1 2180 0
 4509 003a 30BC     		pop	{r4, r5}
 4510              	.LCFI47:
 4511              		.cfi_restore 5
 4512              		.cfi_restore 4
 4513              		.cfi_def_cfa_offset 0
 4514 003c 7047     		bx	lr
 4515              	.LVL416:
 4516              	.L336:
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4517              		.loc 1 2162 0
 4518 003e 0120     		movs	r0, #1
 4519              	.LVL417:
 4520 0040 7047     		bx	lr
 4521              		.cfi_endproc
 4522              	.LFE174:
 4524              		.section	.text.HAL_ETH_SetHashTable,"ax",%progbits
 4525              		.align	1
 4526              		.global	HAL_ETH_SetHashTable
 4527              		.syntax unified
 4528              		.thumb
 4529              		.thumb_func
 4530              		.fpu fpv5-d16
 4532              	HAL_ETH_SetHashTable:
 4533              	.LFB175:
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(pHashTable == NULL)
 4534              		.loc 1 2191 0
 4535              		.cfi_startproc
 4536              		@ args = 0, pretend = 0, frame = 0
 4537              		@ frame_needed = 0, uses_anonymous_args = 0
 4538              		@ link register save eliminated.
 4539              	.LVL418:
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 4540              		.loc 1 2192 0
 4541 0000 0B46     		mov	r3, r1
 4542 0002 39B1     		cbz	r1, .L343
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   heth->Instance->MACHT1R = pHashTable[1];
 4543              		.loc 1 2197 0
 4544 0004 0268     		ldr	r2, [r0]
 4545 0006 0968     		ldr	r1, [r1]
 4546              	.LVL419:
 4547 0008 1161     		str	r1, [r2, #16]
ARM GAS  /tmp/cctf834y.s 			page 143


2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4548              		.loc 1 2198 0
 4549 000a 0268     		ldr	r2, [r0]
 4550 000c 5B68     		ldr	r3, [r3, #4]
 4551              	.LVL420:
 4552 000e 5361     		str	r3, [r2, #20]
2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 4553              		.loc 1 2200 0
 4554 0010 0020     		movs	r0, #0
 4555              	.LVL421:
 4556 0012 7047     		bx	lr
 4557              	.LVL422:
 4558              	.L343:
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4559              		.loc 1 2194 0
 4560 0014 0120     		movs	r0, #1
 4561              	.LVL423:
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4562              		.loc 1 2201 0
 4563 0016 7047     		bx	lr
 4564              		.cfi_endproc
 4565              	.LFE175:
 4567              		.section	.text.HAL_ETH_SetRxVLANIdentifier,"ax",%progbits
 4568              		.align	1
 4569              		.global	HAL_ETH_SetRxVLANIdentifier
 4570              		.syntax unified
 4571              		.thumb
 4572              		.thumb_func
 4573              		.fpu fpv5-d16
 4575              	HAL_ETH_SetRxVLANIdentifier:
 4576              	.LFB176:
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   if(ComparisonBits == ETH_VLANTAGCOMPARISON_16BIT)
 4577              		.loc 1 2213 0
 4578              		.cfi_startproc
 4579              		@ args = 0, pretend = 0, frame = 0
 4580              		@ frame_needed = 0, uses_anonymous_args = 0
 4581              		@ link register save eliminated.
 4582              	.LVL424:
 4583 0000 10B4     		push	{r4}
 4584              	.LCFI48:
 4585              		.cfi_def_cfa_offset 4
 4586              		.cfi_offset 4, -4
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 4587              		.loc 1 2214 0
 4588 0002 69B1     		cbz	r1, .L348
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     SET_BIT(heth->Instance->MACVTR, ETH_MACVTR_ETV);
 4589              		.loc 1 2221 0
 4590 0004 0168     		ldr	r1, [r0]
 4591              	.LVL425:
 4592 0006 0C6D     		ldr	r4, [r1, #80]
 4593 0008 0B4B     		ldr	r3, .L349
 4594 000a 2340     		ands	r3, r3, r4
 4595 000c 1A43     		orrs	r2, r2, r3
 4596              	.LVL426:
 4597 000e 0A65     		str	r2, [r1, #80]
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4598              		.loc 1 2222 0
ARM GAS  /tmp/cctf834y.s 			page 144


 4599 0010 0268     		ldr	r2, [r0]
 4600 0012 136D     		ldr	r3, [r2, #80]
 4601 0014 43F48033 		orr	r3, r3, #65536
 4602 0018 1365     		str	r3, [r2, #80]
 4603              	.L344:
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4604              		.loc 1 2224 0
 4605 001a 5DF8044B 		ldr	r4, [sp], #4
 4606              	.LCFI49:
 4607              		.cfi_remember_state
 4608              		.cfi_restore 4
 4609              		.cfi_def_cfa_offset 0
 4610 001e 7047     		bx	lr
 4611              	.LVL427:
 4612              	.L348:
 4613              	.LCFI50:
 4614              		.cfi_restore_state
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****     CLEAR_BIT(heth->Instance->MACVTR, ETH_MACVTR_ETV);
 4615              		.loc 1 2216 0
 4616 0020 0168     		ldr	r1, [r0]
 4617              	.LVL428:
 4618 0022 0C6D     		ldr	r4, [r1, #80]
 4619 0024 054B     		ldr	r3, .L349+4
 4620 0026 2340     		ands	r3, r3, r4
 4621 0028 1A43     		orrs	r2, r2, r3
 4622              	.LVL429:
 4623 002a 0A65     		str	r2, [r1, #80]
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4624              		.loc 1 2217 0
 4625 002c 0268     		ldr	r2, [r0]
 4626 002e 136D     		ldr	r3, [r2, #80]
 4627 0030 23F48033 		bic	r3, r3, #65536
 4628 0034 1365     		str	r3, [r2, #80]
 4629 0036 F0E7     		b	.L344
 4630              	.L350:
 4631              		.align	2
 4632              	.L349:
 4633 0038 00F0FFFF 		.word	-4096
 4634 003c 0000FFFF 		.word	-65536
 4635              		.cfi_endproc
 4636              	.LFE176:
 4638              		.section	.text.HAL_ETH_EnterPowerDownMode,"ax",%progbits
 4639              		.align	1
 4640              		.global	HAL_ETH_EnterPowerDownMode
 4641              		.syntax unified
 4642              		.thumb
 4643              		.thumb_func
 4644              		.fpu fpv5-d16
 4646              	HAL_ETH_EnterPowerDownMode:
 4647              	.LFB177:
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t powerdownconfig;
 4648              		.loc 1 2235 0
 4649              		.cfi_startproc
 4650              		@ args = 0, pretend = 0, frame = 0
 4651              		@ frame_needed = 0, uses_anonymous_args = 0
 4652              		@ link register save eliminated.
 4653              	.LVL430:
ARM GAS  /tmp/cctf834y.s 			page 145


2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                      ((uint32_t)pPowerDownConfig->WakeUpPacket << 2) |
 4654              		.loc 1 2238 0
 4655 0000 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                        ((uint32_t)pPowerDownConfig->GlobalUnicast << 9) |
 4656              		.loc 1 2239 0
 4657 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 4658 0004 9B00     		lsls	r3, r3, #2
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                      ((uint32_t)pPowerDownConfig->WakeUpPacket << 2) |
 4659              		.loc 1 2238 0
 4660 0006 43EA4203 		orr	r3, r3, r2, lsl #1
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                          ((uint32_t)pPowerDownConfig->WakeUpForward << 10) |
 4661              		.loc 1 2240 0
 4662 000a 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                        ((uint32_t)pPowerDownConfig->GlobalUnicast << 9) |
 4663              		.loc 1 2239 0
 4664 000c 43EA4223 		orr	r3, r3, r2, lsl #9
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                            ETH_MACPCSR_PWRDWN);
 4665              		.loc 1 2241 0
 4666 0010 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                          ((uint32_t)pPowerDownConfig->WakeUpForward << 10) |
 4667              		.loc 1 2240 0
 4668 0012 43EA8223 		orr	r3, r3, r2, lsl #10
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****                      ((uint32_t)pPowerDownConfig->WakeUpPacket << 2) |
 4669              		.loc 1 2238 0
 4670 0016 43F00103 		orr	r3, r3, #1
 4671              	.LVL431:
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4672              		.loc 1 2245 0
 4673 001a 0168     		ldr	r1, [r0]
 4674              	.LVL432:
 4675 001c D1F8B420 		ldr	r2, [r1, #180]
 4676 0020 42F01002 		orr	r2, r2, #16
 4677 0024 C1F8B420 		str	r2, [r1, #180]
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 4678              		.loc 1 2247 0
 4679 0028 0168     		ldr	r1, [r0]
 4680 002a D1F8C000 		ldr	r0, [r1, #192]
 4681              	.LVL433:
 4682 002e 034A     		ldr	r2, .L352
 4683 0030 0240     		ands	r2, r2, r0
 4684 0032 1343     		orrs	r3, r3, r2
 4685              	.LVL434:
 4686 0034 C1F8C030 		str	r3, [r1, #192]
 4687 0038 7047     		bx	lr
 4688              	.L353:
 4689 003a 00BF     		.align	2
 4690              	.L352:
 4691 003c F8F9FFFF 		.word	-1544
 4692              		.cfi_endproc
 4693              	.LFE177:
 4695              		.section	.text.HAL_ETH_ExitPowerDownMode,"ax",%progbits
 4696              		.align	1
 4697              		.global	HAL_ETH_ExitPowerDownMode
 4698              		.syntax unified
 4699              		.thumb
 4700              		.thumb_func
 4701              		.fpu fpv5-d16
ARM GAS  /tmp/cctf834y.s 			page 146


 4703              	HAL_ETH_ExitPowerDownMode:
 4704              	.LFB178:
2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   /* clear wake up sources */
 4705              		.loc 1 2257 0
 4706              		.cfi_startproc
 4707              		@ args = 0, pretend = 0, frame = 0
 4708              		@ frame_needed = 0, uses_anonymous_args = 0
 4709              		@ link register save eliminated.
 4710              	.LVL435:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4711              		.loc 1 2259 0
 4712 0000 0268     		ldr	r2, [r0]
 4713 0002 D2F8C010 		ldr	r1, [r2, #192]
 4714 0006 0C4B     		ldr	r3, .L356
 4715 0008 0B40     		ands	r3, r3, r1
 4716 000a C2F8C030 		str	r3, [r2, #192]
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 4717              		.loc 1 2261 0
 4718 000e 0368     		ldr	r3, [r0]
 4719 0010 D3F8C020 		ldr	r2, [r3, #192]
 4720 0014 12F0010F 		tst	r2, #1
 4721 0018 05D0     		beq	.L355
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4722              		.loc 1 2264 0
 4723 001a D3F8C020 		ldr	r2, [r3, #192]
 4724 001e 22F00102 		bic	r2, r2, #1
 4725 0022 C3F8C020 		str	r2, [r3, #192]
 4726              	.L355:
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 4727              		.loc 1 2268 0
 4728 0026 0268     		ldr	r2, [r0]
 4729 0028 D2F8B430 		ldr	r3, [r2, #180]
 4730 002c 23F01003 		bic	r3, r3, #16
 4731 0030 C2F8B430 		str	r3, [r2, #180]
 4732 0034 7047     		bx	lr
 4733              	.L357:
 4734 0036 00BF     		.align	2
 4735              	.L356:
 4736 0038 F9F9FFFF 		.word	-1543
 4737              		.cfi_endproc
 4738              	.LFE178:
 4740              		.section	.text.HAL_ETH_SetWakeUpFilter,"ax",%progbits
 4741              		.align	1
 4742              		.global	HAL_ETH_SetWakeUpFilter
 4743              		.syntax unified
 4744              		.thumb
 4745              		.thumb_func
 4746              		.fpu fpv5-d16
 4748              	HAL_ETH_SetWakeUpFilter:
 4749              	.LFB179:
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t regindex;
 4750              		.loc 1 2280 0
 4751              		.cfi_startproc
 4752              		@ args = 0, pretend = 0, frame = 0
 4753              		@ frame_needed = 0, uses_anonymous_args = 0
 4754              		@ link register save eliminated.
 4755              	.LVL436:
ARM GAS  /tmp/cctf834y.s 			page 147


2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 4756              		.loc 1 2283 0
 4757 0000 A9B1     		cbz	r1, .L362
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   uint32_t regindex;
 4758              		.loc 1 2280 0
 4759 0002 30B4     		push	{r4, r5}
 4760              	.LCFI51:
 4761              		.cfi_def_cfa_offset 8
 4762              		.cfi_offset 4, -8
 4763              		.cfi_offset 5, -4
 4764 0004 0D46     		mov	r5, r1
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4765              		.loc 1 2289 0
 4766 0006 0168     		ldr	r1, [r0]
 4767              	.LVL437:
 4768 0008 D1F8C030 		ldr	r3, [r1, #192]
 4769 000c 43F00043 		orr	r3, r3, #-2147483648
 4770 0010 C1F8C030 		str	r3, [r1, #192]
 4771              	.LVL438:
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 4772              		.loc 1 2292 0
 4773 0014 0023     		movs	r3, #0
 4774 0016 05E0     		b	.L360
 4775              	.LVL439:
 4776              	.L361:
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4777              		.loc 1 2295 0 discriminator 3
 4778 0018 0168     		ldr	r1, [r0]
 4779 001a 55F82340 		ldr	r4, [r5, r3, lsl #2]
 4780 001e C1F8C440 		str	r4, [r1, #196]
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 4781              		.loc 1 2292 0 discriminator 3
 4782 0022 0133     		adds	r3, r3, #1
 4783              	.LVL440:
 4784              	.L360:
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   {
 4785              		.loc 1 2292 0 is_stmt 0 discriminator 1
 4786 0024 9342     		cmp	r3, r2
 4787 0026 F7D3     		bcc	.L361
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 4788              		.loc 1 2298 0 is_stmt 1
 4789 0028 0020     		movs	r0, #0
 4790              	.LVL441:
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4791              		.loc 1 2299 0
 4792 002a 30BC     		pop	{r4, r5}
 4793              	.LCFI52:
 4794              		.cfi_restore 5
 4795              		.cfi_restore 4
 4796              		.cfi_def_cfa_offset 0
 4797              	.LVL442:
 4798 002c 7047     		bx	lr
 4799              	.LVL443:
 4800              	.L362:
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   }
 4801              		.loc 1 2285 0
 4802 002e 0120     		movs	r0, #1
ARM GAS  /tmp/cctf834y.s 			page 148


 4803              	.LVL444:
 4804 0030 7047     		bx	lr
 4805              		.cfi_endproc
 4806              	.LFE179:
 4808              		.section	.text.HAL_ETH_GetState,"ax",%progbits
 4809              		.align	1
 4810              		.global	HAL_ETH_GetState
 4811              		.syntax unified
 4812              		.thumb
 4813              		.thumb_func
 4814              		.fpu fpv5-d16
 4816              	HAL_ETH_GetState:
 4817              	.LFB180:
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   HAL_ETH_StateTypeDef ret;
 4818              		.loc 1 2329 0
 4819              		.cfi_startproc
 4820              		@ args = 0, pretend = 0, frame = 0
 4821              		@ frame_needed = 0, uses_anonymous_args = 0
 4822              		@ link register save eliminated.
 4823              	.LVL445:
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   HAL_ETH_StateTypeDef rxstate =heth->RxState;
 4824              		.loc 1 2331 0
 4825 0000 426D     		ldr	r2, [r0, #84]
 4826              	.LVL446:
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4827              		.loc 1 2332 0
 4828 0002 806D     		ldr	r0, [r0, #88]
 4829              	.LVL447:
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4830              		.loc 1 2337 0
 4831 0004 1043     		orrs	r0, r0, r2
 4832              	.LVL448:
 4833 0006 7047     		bx	lr
 4834              		.cfi_endproc
 4835              	.LFE180:
 4837              		.section	.text.HAL_ETH_GetError,"ax",%progbits
 4838              		.align	1
 4839              		.global	HAL_ETH_GetError
 4840              		.syntax unified
 4841              		.thumb
 4842              		.thumb_func
 4843              		.fpu fpv5-d16
 4845              	HAL_ETH_GetError:
 4846              	.LFB181:
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return heth->ErrorCode;
 4847              		.loc 1 2346 0
 4848              		.cfi_startproc
 4849              		@ args = 0, pretend = 0, frame = 0
 4850              		@ frame_needed = 0, uses_anonymous_args = 0
 4851              		@ link register save eliminated.
 4852              	.LVL449:
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 4853              		.loc 1 2347 0
 4854 0000 C06D     		ldr	r0, [r0, #92]
 4855              	.LVL450:
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4856              		.loc 1 2348 0
ARM GAS  /tmp/cctf834y.s 			page 149


 4857 0002 7047     		bx	lr
 4858              		.cfi_endproc
 4859              	.LFE181:
 4861              		.section	.text.HAL_ETH_GetDMAError,"ax",%progbits
 4862              		.align	1
 4863              		.global	HAL_ETH_GetDMAError
 4864              		.syntax unified
 4865              		.thumb
 4866              		.thumb_func
 4867              		.fpu fpv5-d16
 4869              	HAL_ETH_GetDMAError:
 4870              	.LFB182:
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return heth->DMAErrorCode;
 4871              		.loc 1 2357 0
 4872              		.cfi_startproc
 4873              		@ args = 0, pretend = 0, frame = 0
 4874              		@ frame_needed = 0, uses_anonymous_args = 0
 4875              		@ link register save eliminated.
 4876              	.LVL451:
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 4877              		.loc 1 2358 0
 4878 0000 006E     		ldr	r0, [r0, #96]
 4879              	.LVL452:
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4880              		.loc 1 2359 0
 4881 0002 7047     		bx	lr
 4882              		.cfi_endproc
 4883              	.LFE182:
 4885              		.section	.text.HAL_ETH_GetMACError,"ax",%progbits
 4886              		.align	1
 4887              		.global	HAL_ETH_GetMACError
 4888              		.syntax unified
 4889              		.thumb
 4890              		.thumb_func
 4891              		.fpu fpv5-d16
 4893              	HAL_ETH_GetMACError:
 4894              	.LFB183:
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return heth->MACErrorCode;
 4895              		.loc 1 2368 0
 4896              		.cfi_startproc
 4897              		@ args = 0, pretend = 0, frame = 0
 4898              		@ frame_needed = 0, uses_anonymous_args = 0
 4899              		@ link register save eliminated.
 4900              	.LVL453:
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 4901              		.loc 1 2369 0
 4902 0000 406E     		ldr	r0, [r0, #100]
 4903              	.LVL454:
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4904              		.loc 1 2370 0
 4905 0002 7047     		bx	lr
 4906              		.cfi_endproc
 4907              	.LFE183:
 4909              		.section	.text.HAL_ETH_GetMACWakeUpSource,"ax",%progbits
 4910              		.align	1
 4911              		.global	HAL_ETH_GetMACWakeUpSource
 4912              		.syntax unified
ARM GAS  /tmp/cctf834y.s 			page 150


 4913              		.thumb
 4914              		.thumb_func
 4915              		.fpu fpv5-d16
 4917              	HAL_ETH_GetMACWakeUpSource:
 4918              	.LFB184:
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c ****   return heth->MACWakeUpEvent;
 4919              		.loc 1 2379 0
 4920              		.cfi_startproc
 4921              		@ args = 0, pretend = 0, frame = 0
 4922              		@ frame_needed = 0, uses_anonymous_args = 0
 4923              		@ link register save eliminated.
 4924              	.LVL455:
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** }
 4925              		.loc 1 2380 0
 4926 0000 806E     		ldr	r0, [r0, #104]
 4927              	.LVL456:
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_eth.c **** 
 4928              		.loc 1 2381 0
 4929 0002 7047     		bx	lr
 4930              		.cfi_endproc
 4931              	.LFE184:
 4933              		.text
 4934              	.Letext0:
 4935              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 4936              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 4937              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 4938              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 4939              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 4940              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 4941              		.file 8 "/usr/include/newlib/sys/lock.h"
 4942              		.file 9 "/usr/include/newlib/sys/_types.h"
 4943              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 4944              		.file 11 "/usr/include/newlib/sys/reent.h"
 4945              		.file 12 "/usr/include/newlib/math.h"
 4946              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 4947              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_eth.h"
 4948              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 4949              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 4950              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
ARM GAS  /tmp/cctf834y.s 			page 151


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_eth.c
     /tmp/cctf834y.s:17     .text.ETH_SetMACConfig:0000000000000000 $t
     /tmp/cctf834y.s:23     .text.ETH_SetMACConfig:0000000000000000 ETH_SetMACConfig
     /tmp/cctf834y.s:314    .text.ETH_SetMACConfig:00000000000001ac $d
     /tmp/cctf834y.s:319    .text.ETH_SetDMAConfig:0000000000000000 $t
     /tmp/cctf834y.s:325    .text.ETH_SetDMAConfig:0000000000000000 ETH_SetDMAConfig
     /tmp/cctf834y.s:437    .text.ETH_SetDMAConfig:0000000000000084 $d
     /tmp/cctf834y.s:446    .text.ETH_MACDMAConfig:0000000000000000 $t
     /tmp/cctf834y.s:452    .text.ETH_MACDMAConfig:0000000000000000 ETH_MACDMAConfig
     /tmp/cctf834y.s:599    .text.ETH_DMATxDescListInit:0000000000000000 $t
     /tmp/cctf834y.s:605    .text.ETH_DMATxDescListInit:0000000000000000 ETH_DMATxDescListInit
     /tmp/cctf834y.s:679    .text.ETH_DMARxDescListInit:0000000000000000 $t
     /tmp/cctf834y.s:685    .text.ETH_DMARxDescListInit:0000000000000000 ETH_DMARxDescListInit
     /tmp/cctf834y.s:773    .text.ETH_Prepare_Tx_Descriptors:0000000000000000 $t
     /tmp/cctf834y.s:779    .text.ETH_Prepare_Tx_Descriptors:0000000000000000 ETH_Prepare_Tx_Descriptors
     /tmp/cctf834y.s:1232   .text.ETH_Prepare_Tx_Descriptors:00000000000002d4 $d
     /tmp/cctf834y.s:1240   .text.ETH_Prepare_Tx_Descriptors:00000000000002e8 $t
     /tmp/cctf834y.s:1277   .text.ETH_MAC_MDIO_ClkConfig:0000000000000000 $t
     /tmp/cctf834y.s:1283   .text.ETH_MAC_MDIO_ClkConfig:0000000000000000 ETH_MAC_MDIO_ClkConfig
     /tmp/cctf834y.s:1359   .text.ETH_MAC_MDIO_ClkConfig:0000000000000058 $d
     /tmp/cctf834y.s:1371   .text.HAL_ETH_MspInit:0000000000000000 $t
     /tmp/cctf834y.s:1378   .text.HAL_ETH_MspInit:0000000000000000 HAL_ETH_MspInit
     /tmp/cctf834y.s:1391   .text.HAL_ETH_Init:0000000000000000 $t
     /tmp/cctf834y.s:1398   .text.HAL_ETH_Init:0000000000000000 HAL_ETH_Init
     /tmp/cctf834y.s:1604   .text.HAL_ETH_Init:0000000000000124 $d
     /tmp/cctf834y.s:1611   .text.HAL_ETH_MspDeInit:0000000000000000 $t
     /tmp/cctf834y.s:1618   .text.HAL_ETH_MspDeInit:0000000000000000 HAL_ETH_MspDeInit
     /tmp/cctf834y.s:1631   .text.HAL_ETH_DeInit:0000000000000000 $t
     /tmp/cctf834y.s:1638   .text.HAL_ETH_DeInit:0000000000000000 HAL_ETH_DeInit
     /tmp/cctf834y.s:1667   .text.HAL_ETH_DescAssignMemory:0000000000000000 $t
     /tmp/cctf834y.s:1674   .text.HAL_ETH_DescAssignMemory:0000000000000000 HAL_ETH_DescAssignMemory
     /tmp/cctf834y.s:1758   .text.HAL_ETH_Start:0000000000000000 $t
     /tmp/cctf834y.s:1765   .text.HAL_ETH_Start:0000000000000000 HAL_ETH_Start
     /tmp/cctf834y.s:1834   .text.HAL_ETH_Start_IT:0000000000000000 $t
     /tmp/cctf834y.s:1841   .text.HAL_ETH_Start_IT:0000000000000000 HAL_ETH_Start_IT
     /tmp/cctf834y.s:1974   .text.HAL_ETH_Stop:0000000000000000 $t
     /tmp/cctf834y.s:1981   .text.HAL_ETH_Stop:0000000000000000 HAL_ETH_Stop
     /tmp/cctf834y.s:2042   .text.HAL_ETH_Stop_IT:0000000000000000 $t
     /tmp/cctf834y.s:2049   .text.HAL_ETH_Stop_IT:0000000000000000 HAL_ETH_Stop_IT
     /tmp/cctf834y.s:2152   .text.HAL_ETH_Stop_IT:0000000000000080 $d
     /tmp/cctf834y.s:2157   .text.HAL_ETH_Transmit:0000000000000000 $t
     /tmp/cctf834y.s:2164   .text.HAL_ETH_Transmit:0000000000000000 HAL_ETH_Transmit
     /tmp/cctf834y.s:2308   .text.HAL_ETH_Transmit_IT:0000000000000000 $t
     /tmp/cctf834y.s:2315   .text.HAL_ETH_Transmit_IT:0000000000000000 HAL_ETH_Transmit_IT
     /tmp/cctf834y.s:2388   .text.HAL_ETH_IsRxDataAvailable:0000000000000000 $t
     /tmp/cctf834y.s:2395   .text.HAL_ETH_IsRxDataAvailable:0000000000000000 HAL_ETH_IsRxDataAvailable
     /tmp/cctf834y.s:2651   .text.HAL_ETH_GetRxDataBuffer:0000000000000000 $t
     /tmp/cctf834y.s:2658   .text.HAL_ETH_GetRxDataBuffer:0000000000000000 HAL_ETH_GetRxDataBuffer
     /tmp/cctf834y.s:2828   .text.HAL_ETH_GetRxDataLength:0000000000000000 $t
     /tmp/cctf834y.s:2835   .text.HAL_ETH_GetRxDataLength:0000000000000000 HAL_ETH_GetRxDataLength
     /tmp/cctf834y.s:2900   .text.HAL_ETH_GetRxDataInfo:0000000000000000 $t
     /tmp/cctf834y.s:2907   .text.HAL_ETH_GetRxDataInfo:0000000000000000 HAL_ETH_GetRxDataInfo
     /tmp/cctf834y.s:3041   .text.HAL_ETH_BuildRxDescriptors:0000000000000000 $t
     /tmp/cctf834y.s:3048   .text.HAL_ETH_BuildRxDescriptors:0000000000000000 HAL_ETH_BuildRxDescriptors
     /tmp/cctf834y.s:3182   .text.HAL_ETH_TxCpltCallback:0000000000000000 $t
     /tmp/cctf834y.s:3189   .text.HAL_ETH_TxCpltCallback:0000000000000000 HAL_ETH_TxCpltCallback
ARM GAS  /tmp/cctf834y.s 			page 152


     /tmp/cctf834y.s:3202   .text.HAL_ETH_RxCpltCallback:0000000000000000 $t
     /tmp/cctf834y.s:3209   .text.HAL_ETH_RxCpltCallback:0000000000000000 HAL_ETH_RxCpltCallback
     /tmp/cctf834y.s:3222   .text.HAL_ETH_DMAErrorCallback:0000000000000000 $t
     /tmp/cctf834y.s:3229   .text.HAL_ETH_DMAErrorCallback:0000000000000000 HAL_ETH_DMAErrorCallback
     /tmp/cctf834y.s:3242   .text.HAL_ETH_MACErrorCallback:0000000000000000 $t
     /tmp/cctf834y.s:3249   .text.HAL_ETH_MACErrorCallback:0000000000000000 HAL_ETH_MACErrorCallback
     /tmp/cctf834y.s:3262   .text.HAL_ETH_PMTCallback:0000000000000000 $t
     /tmp/cctf834y.s:3269   .text.HAL_ETH_PMTCallback:0000000000000000 HAL_ETH_PMTCallback
     /tmp/cctf834y.s:3282   .text.HAL_ETH_EEECallback:0000000000000000 $t
     /tmp/cctf834y.s:3289   .text.HAL_ETH_EEECallback:0000000000000000 HAL_ETH_EEECallback
     /tmp/cctf834y.s:3302   .text.HAL_ETH_WakeUpCallback:0000000000000000 $t
     /tmp/cctf834y.s:3309   .text.HAL_ETH_WakeUpCallback:0000000000000000 HAL_ETH_WakeUpCallback
     /tmp/cctf834y.s:3322   .text.HAL_ETH_IRQHandler:0000000000000000 $t
     /tmp/cctf834y.s:3329   .text.HAL_ETH_IRQHandler:0000000000000000 HAL_ETH_IRQHandler
     /tmp/cctf834y.s:3523   .text.HAL_ETH_IRQHandler:0000000000000150 $d
     /tmp/cctf834y.s:3528   .text.HAL_ETH_ReadPHYRegister:0000000000000000 $t
     /tmp/cctf834y.s:3535   .text.HAL_ETH_ReadPHYRegister:0000000000000000 HAL_ETH_ReadPHYRegister
     /tmp/cctf834y.s:3614   .text.HAL_ETH_WritePHYRegister:0000000000000000 $t
     /tmp/cctf834y.s:3621   .text.HAL_ETH_WritePHYRegister:0000000000000000 HAL_ETH_WritePHYRegister
     /tmp/cctf834y.s:3703   .text.HAL_ETH_WritePHYRegister:0000000000000064 $d
     /tmp/cctf834y.s:3708   .text.HAL_ETH_GetMACConfig:0000000000000000 $t
     /tmp/cctf834y.s:3715   .text.HAL_ETH_GetMACConfig:0000000000000000 HAL_ETH_GetMACConfig
     /tmp/cctf834y.s:3957   .text.HAL_ETH_GetDMAConfig:0000000000000000 $t
     /tmp/cctf834y.s:3964   .text.HAL_ETH_GetDMAConfig:0000000000000000 HAL_ETH_GetDMAConfig
     /tmp/cctf834y.s:4059   .text.HAL_ETH_SetMACConfig:0000000000000000 $t
     /tmp/cctf834y.s:4066   .text.HAL_ETH_SetMACConfig:0000000000000000 HAL_ETH_SetMACConfig
     /tmp/cctf834y.s:4112   .text.HAL_ETH_SetDMAConfig:0000000000000000 $t
     /tmp/cctf834y.s:4119   .text.HAL_ETH_SetDMAConfig:0000000000000000 HAL_ETH_SetDMAConfig
     /tmp/cctf834y.s:4165   .text.HAL_ETH_SetMDIOClockRange:0000000000000000 $t
     /tmp/cctf834y.s:4172   .text.HAL_ETH_SetMDIOClockRange:0000000000000000 HAL_ETH_SetMDIOClockRange
     /tmp/cctf834y.s:4248   .text.HAL_ETH_SetMDIOClockRange:0000000000000058 $d
     /tmp/cctf834y.s:4260   .text.HAL_ETH_SetMACFilterConfig:0000000000000000 $t
     /tmp/cctf834y.s:4267   .text.HAL_ETH_SetMACFilterConfig:0000000000000000 HAL_ETH_SetMACFilterConfig
     /tmp/cctf834y.s:4353   .text.HAL_ETH_SetMACFilterConfig:000000000000005c $d
     /tmp/cctf834y.s:4358   .text.HAL_ETH_GetMACFilterConfig:0000000000000000 $t
     /tmp/cctf834y.s:4365   .text.HAL_ETH_GetMACFilterConfig:0000000000000000 HAL_ETH_GetMACFilterConfig
     /tmp/cctf834y.s:4449   .text.HAL_ETH_SetSourceMACAddrMatch:0000000000000000 $t
     /tmp/cctf834y.s:4456   .text.HAL_ETH_SetSourceMACAddrMatch:0000000000000000 HAL_ETH_SetSourceMACAddrMatch
     /tmp/cctf834y.s:4525   .text.HAL_ETH_SetHashTable:0000000000000000 $t
     /tmp/cctf834y.s:4532   .text.HAL_ETH_SetHashTable:0000000000000000 HAL_ETH_SetHashTable
     /tmp/cctf834y.s:4568   .text.HAL_ETH_SetRxVLANIdentifier:0000000000000000 $t
     /tmp/cctf834y.s:4575   .text.HAL_ETH_SetRxVLANIdentifier:0000000000000000 HAL_ETH_SetRxVLANIdentifier
     /tmp/cctf834y.s:4633   .text.HAL_ETH_SetRxVLANIdentifier:0000000000000038 $d
     /tmp/cctf834y.s:4639   .text.HAL_ETH_EnterPowerDownMode:0000000000000000 $t
     /tmp/cctf834y.s:4646   .text.HAL_ETH_EnterPowerDownMode:0000000000000000 HAL_ETH_EnterPowerDownMode
     /tmp/cctf834y.s:4691   .text.HAL_ETH_EnterPowerDownMode:000000000000003c $d
     /tmp/cctf834y.s:4696   .text.HAL_ETH_ExitPowerDownMode:0000000000000000 $t
     /tmp/cctf834y.s:4703   .text.HAL_ETH_ExitPowerDownMode:0000000000000000 HAL_ETH_ExitPowerDownMode
     /tmp/cctf834y.s:4736   .text.HAL_ETH_ExitPowerDownMode:0000000000000038 $d
     /tmp/cctf834y.s:4741   .text.HAL_ETH_SetWakeUpFilter:0000000000000000 $t
     /tmp/cctf834y.s:4748   .text.HAL_ETH_SetWakeUpFilter:0000000000000000 HAL_ETH_SetWakeUpFilter
     /tmp/cctf834y.s:4809   .text.HAL_ETH_GetState:0000000000000000 $t
     /tmp/cctf834y.s:4816   .text.HAL_ETH_GetState:0000000000000000 HAL_ETH_GetState
     /tmp/cctf834y.s:4838   .text.HAL_ETH_GetError:0000000000000000 $t
     /tmp/cctf834y.s:4845   .text.HAL_ETH_GetError:0000000000000000 HAL_ETH_GetError
     /tmp/cctf834y.s:4862   .text.HAL_ETH_GetDMAError:0000000000000000 $t
     /tmp/cctf834y.s:4869   .text.HAL_ETH_GetDMAError:0000000000000000 HAL_ETH_GetDMAError
ARM GAS  /tmp/cctf834y.s 			page 153


     /tmp/cctf834y.s:4886   .text.HAL_ETH_GetMACError:0000000000000000 $t
     /tmp/cctf834y.s:4893   .text.HAL_ETH_GetMACError:0000000000000000 HAL_ETH_GetMACError
     /tmp/cctf834y.s:4910   .text.HAL_ETH_GetMACWakeUpSource:0000000000000000 $t
     /tmp/cctf834y.s:4917   .text.HAL_ETH_GetMACWakeUpSource:0000000000000000 HAL_ETH_GetMACWakeUpSource
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_GetHCLKFreq
HAL_SYSCFG_ETHInterfaceSelect
HAL_GetTick
