ARM GAS  /tmp/ccOZpyKy.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"mem.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.plug_holes,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	plug_holes:
  24              	.LFB158:
  25              		.file 1 "Middlewares/Third_Party/LwIP/src/core/mem.c"
   1:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
   2:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @file
   3:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Dynamic memory manager
   4:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
   5:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * This is a lightweight replacement for the standard C library malloc().
   6:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
   7:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * If you want to use the standard C library malloc() instead, define
   8:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * MEM_LIBC_MALLOC to 1 in your lwipopts.h
   9:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
  10:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * To let mem_malloc() use pools (prevents fragmentation and is much faster than
  11:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * a heap but might waste some memory), define MEM_USE_POOLS to 1, define
  12:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * MEMP_USE_CUSTOM_POOLS to 1 and create a file "lwippools.h" that includes a list
  13:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * of pools like this (more pools can be added between _START and _END):
  14:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
  15:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Define three pools with sizes 256, 512, and 1512 bytes
  16:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * LWIP_MALLOC_MEMPOOL_START
  17:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * LWIP_MALLOC_MEMPOOL(20, 256)
  18:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * LWIP_MALLOC_MEMPOOL(10, 512)
  19:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * LWIP_MALLOC_MEMPOOL(5, 1512)
  20:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * LWIP_MALLOC_MEMPOOL_END
  21:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
  22:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
  23:Middlewares/Third_Party/LwIP/src/core/mem.c **** /*
  24:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
  25:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * All rights reserved.
  26:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
  27:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Redistribution and use in source and binary forms, with or without modification,
  28:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * are permitted provided that the following conditions are met:
  29:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
  30:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  31:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *    this list of conditions and the following disclaimer.
  32:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  33:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *    this list of conditions and the following disclaimer in the documentation
ARM GAS  /tmp/ccOZpyKy.s 			page 2


  34:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *    and/or other materials provided with the distribution.
  35:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * 3. The name of the author may not be used to endorse or promote products
  36:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *    derived from this software without specific prior written permission.
  37:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
  38:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
  39:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  40:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
  41:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  42:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  43:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  44:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  45:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
  46:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  47:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * OF SUCH DAMAGE.
  48:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
  49:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * This file is part of the lwIP TCP/IP stack.
  50:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
  51:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Author: Adam Dunkels <adam@sics.se>
  52:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *         Simon Goldschmidt
  53:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
  54:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
  55:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
  56:Middlewares/Third_Party/LwIP/src/core/mem.c **** #include "lwip/opt.h"
  57:Middlewares/Third_Party/LwIP/src/core/mem.c **** #include "lwip/mem.h"
  58:Middlewares/Third_Party/LwIP/src/core/mem.c **** #include "lwip/def.h"
  59:Middlewares/Third_Party/LwIP/src/core/mem.c **** #include "lwip/sys.h"
  60:Middlewares/Third_Party/LwIP/src/core/mem.c **** #include "lwip/stats.h"
  61:Middlewares/Third_Party/LwIP/src/core/mem.c **** #include "lwip/err.h"
  62:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
  63:Middlewares/Third_Party/LwIP/src/core/mem.c **** #include <string.h>
  64:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
  65:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_LIBC_MALLOC
  66:Middlewares/Third_Party/LwIP/src/core/mem.c **** #include <stdlib.h> /* for malloc()/free() */
  67:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
  68:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
  69:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_LIBC_MALLOC || MEM_USE_POOLS
  70:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
  71:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** mem_init is not used when using pools instead of a heap or using
  72:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * C library malloc().
  73:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
  74:Middlewares/Third_Party/LwIP/src/core/mem.c **** void
  75:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_init(void)
  76:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
  77:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
  78:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
  79:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** mem_trim is not used when using pools instead of a heap or using
  80:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * C library malloc(): we can't free part of a pool element and the stack
  81:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * support mem_trim() to return a different pointer
  82:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
  83:Middlewares/Third_Party/LwIP/src/core/mem.c **** void*
  84:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_trim(void *mem, mem_size_t size)
  85:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
  86:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_UNUSED_ARG(size);
  87:Middlewares/Third_Party/LwIP/src/core/mem.c ****   return mem;
  88:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
  89:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEM_LIBC_MALLOC || MEM_USE_POOLS */
  90:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
ARM GAS  /tmp/ccOZpyKy.s 			page 3


  91:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_LIBC_MALLOC
  92:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* lwIP heap implemented using C library malloc() */
  93:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
  94:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* in case C library malloc() needs extra protection,
  95:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * allow these defines to be overridden.
  96:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
  97:Middlewares/Third_Party/LwIP/src/core/mem.c **** #ifndef mem_clib_free
  98:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define mem_clib_free free
  99:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 100:Middlewares/Third_Party/LwIP/src/core/mem.c **** #ifndef mem_clib_malloc
 101:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define mem_clib_malloc malloc
 102:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 103:Middlewares/Third_Party/LwIP/src/core/mem.c **** #ifndef mem_clib_calloc
 104:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define mem_clib_calloc calloc
 105:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 106:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 107:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_STATS && MEM_STATS
 108:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MEM_LIBC_STATSHELPER_SIZE LWIP_MEM_ALIGN_SIZE(sizeof(mem_size_t))
 109:Middlewares/Third_Party/LwIP/src/core/mem.c **** #else
 110:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MEM_LIBC_STATSHELPER_SIZE 0
 111:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 112:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 113:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 114:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Allocate a block of memory with a minimum of 'size' bytes.
 115:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 116:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param size is the minimum size of the requested block in bytes.
 117:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @return pointer to allocated memory or NULL if no free memory was found.
 118:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 119:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Note that the returned value must always be aligned (as defined by MEM_ALIGNMENT).
 120:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 121:Middlewares/Third_Party/LwIP/src/core/mem.c **** void *
 122:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_malloc(mem_size_t size)
 123:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 124:Middlewares/Third_Party/LwIP/src/core/mem.c ****   void* ret = mem_clib_malloc(size + MEM_LIBC_STATSHELPER_SIZE);
 125:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (ret == NULL) {
 126:Middlewares/Third_Party/LwIP/src/core/mem.c ****     MEM_STATS_INC(err);
 127:Middlewares/Third_Party/LwIP/src/core/mem.c ****   } else {
 128:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_ASSERT("malloc() must return aligned memory", LWIP_MEM_ALIGN(ret) == ret);
 129:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_STATS && MEM_STATS
 130:Middlewares/Third_Party/LwIP/src/core/mem.c ****     *(mem_size_t*)ret = size;
 131:Middlewares/Third_Party/LwIP/src/core/mem.c ****     ret = (u8_t*)ret + MEM_LIBC_STATSHELPER_SIZE;
 132:Middlewares/Third_Party/LwIP/src/core/mem.c ****     MEM_STATS_INC_USED(used, size);
 133:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 134:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 135:Middlewares/Third_Party/LwIP/src/core/mem.c ****   return ret;
 136:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 137:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 138:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** Put memory back on the heap
 139:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 140:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param rmem is the pointer as returned by a previous call to mem_malloc()
 141:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 142:Middlewares/Third_Party/LwIP/src/core/mem.c **** void
 143:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_free(void *rmem)
 144:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 145:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("rmem != NULL", (rmem != NULL));
 146:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("rmem == MEM_ALIGN(rmem)", (rmem == LWIP_MEM_ALIGN(rmem)));
 147:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_STATS && MEM_STATS
ARM GAS  /tmp/ccOZpyKy.s 			page 4


 148:Middlewares/Third_Party/LwIP/src/core/mem.c ****   rmem = (u8_t*)rmem - MEM_LIBC_STATSHELPER_SIZE;
 149:Middlewares/Third_Party/LwIP/src/core/mem.c ****   MEM_STATS_DEC_USED(used, *(mem_size_t*)rmem);
 150:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 151:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_clib_free(rmem);
 152:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 153:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 154:Middlewares/Third_Party/LwIP/src/core/mem.c **** #elif MEM_USE_POOLS
 155:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 156:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* lwIP heap implemented with different sized pools */
 157:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 158:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 159:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Allocate memory: determine the smallest pool that is big enough
 160:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * to contain an element of 'size' and get an element from that pool.
 161:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 162:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param size the size in bytes of the memory needed
 163:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @return a pointer to the allocated memory or NULL if the pool is empty
 164:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 165:Middlewares/Third_Party/LwIP/src/core/mem.c **** void *
 166:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_malloc(mem_size_t size)
 167:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 168:Middlewares/Third_Party/LwIP/src/core/mem.c ****   void *ret;
 169:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct memp_malloc_helper *element = NULL;
 170:Middlewares/Third_Party/LwIP/src/core/mem.c ****   memp_t poolnr;
 171:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_size_t required_size = size + LWIP_MEM_ALIGN_SIZE(sizeof(struct memp_malloc_helper));
 172:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 173:Middlewares/Third_Party/LwIP/src/core/mem.c ****   for (poolnr = MEMP_POOL_FIRST; poolnr <= MEMP_POOL_LAST; poolnr = (memp_t)(poolnr + 1)) {
 174:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* is this pool big enough to hold an element of the required size
 175:Middlewares/Third_Party/LwIP/src/core/mem.c ****        plus a struct memp_malloc_helper that saves the pool this element came from? */
 176:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (required_size <= memp_pools[poolnr]->size) {
 177:Middlewares/Third_Party/LwIP/src/core/mem.c ****       element = (struct memp_malloc_helper*)memp_malloc(poolnr);
 178:Middlewares/Third_Party/LwIP/src/core/mem.c ****       if (element == NULL) {
 179:Middlewares/Third_Party/LwIP/src/core/mem.c ****         /* No need to DEBUGF or ASSERT: This error is already taken care of in memp.c */
 180:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_USE_POOLS_TRY_BIGGER_POOL
 181:Middlewares/Third_Party/LwIP/src/core/mem.c ****         /** Try a bigger pool if this one is empty! */
 182:Middlewares/Third_Party/LwIP/src/core/mem.c ****         if (poolnr < MEMP_POOL_LAST) {
 183:Middlewares/Third_Party/LwIP/src/core/mem.c ****           continue;
 184:Middlewares/Third_Party/LwIP/src/core/mem.c ****         }
 185:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEM_USE_POOLS_TRY_BIGGER_POOL */
 186:Middlewares/Third_Party/LwIP/src/core/mem.c ****         MEM_STATS_INC(err);
 187:Middlewares/Third_Party/LwIP/src/core/mem.c ****         return NULL;
 188:Middlewares/Third_Party/LwIP/src/core/mem.c ****       }
 189:Middlewares/Third_Party/LwIP/src/core/mem.c ****       break;
 190:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 191:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 192:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (poolnr > MEMP_POOL_LAST) {
 193:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_ASSERT("mem_malloc(): no pool is that big!", 0);
 194:Middlewares/Third_Party/LwIP/src/core/mem.c ****     MEM_STATS_INC(err);
 195:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return NULL;
 196:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 197:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 198:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* save the pool number this element came from */
 199:Middlewares/Third_Party/LwIP/src/core/mem.c ****   element->poolnr = poolnr;
 200:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* and return a pointer to the memory directly after the struct memp_malloc_helper */
 201:Middlewares/Third_Party/LwIP/src/core/mem.c ****   ret = (u8_t*)element + LWIP_MEM_ALIGN_SIZE(sizeof(struct memp_malloc_helper));
 202:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 203:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEMP_OVERFLOW_CHECK || (LWIP_STATS && MEM_STATS)
 204:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* truncating to u16_t is safe because struct memp_desc::size is u16_t */
ARM GAS  /tmp/ccOZpyKy.s 			page 5


 205:Middlewares/Third_Party/LwIP/src/core/mem.c ****   element->size = (u16_t)size;
 206:Middlewares/Third_Party/LwIP/src/core/mem.c ****   MEM_STATS_INC_USED(used, element->size);
 207:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEMP_OVERFLOW_CHECK || (LWIP_STATS && MEM_STATS) */
 208:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEMP_OVERFLOW_CHECK
 209:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* initialize unused memory (diff between requested size and selected pool's size) */
 210:Middlewares/Third_Party/LwIP/src/core/mem.c ****   memset((u8_t*)ret + size, 0xcd, memp_pools[poolnr]->size - size);
 211:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEMP_OVERFLOW_CHECK */
 212:Middlewares/Third_Party/LwIP/src/core/mem.c ****   return ret;
 213:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 214:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 215:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 216:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Free memory previously allocated by mem_malloc. Loads the pool number
 217:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * and calls memp_free with that pool number to put the element back into
 218:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * its pool
 219:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 220:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param rmem the memory element to free
 221:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 222:Middlewares/Third_Party/LwIP/src/core/mem.c **** void
 223:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_free(void *rmem)
 224:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 225:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct memp_malloc_helper *hmem;
 226:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 227:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("rmem != NULL", (rmem != NULL));
 228:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("rmem == MEM_ALIGN(rmem)", (rmem == LWIP_MEM_ALIGN(rmem)));
 229:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 230:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* get the original struct memp_malloc_helper */
 231:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* cast through void* to get rid of alignment warnings */
 232:Middlewares/Third_Party/LwIP/src/core/mem.c ****   hmem = (struct memp_malloc_helper*)(void*)((u8_t*)rmem - LWIP_MEM_ALIGN_SIZE(sizeof(struct memp_m
 233:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 234:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("hmem != NULL", (hmem != NULL));
 235:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("hmem == MEM_ALIGN(hmem)", (hmem == LWIP_MEM_ALIGN(hmem)));
 236:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("hmem->poolnr < MEMP_MAX", (hmem->poolnr < MEMP_MAX));
 237:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 238:Middlewares/Third_Party/LwIP/src/core/mem.c ****   MEM_STATS_DEC_USED(used, hmem->size);
 239:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEMP_OVERFLOW_CHECK
 240:Middlewares/Third_Party/LwIP/src/core/mem.c ****   {
 241:Middlewares/Third_Party/LwIP/src/core/mem.c ****      u16_t i;
 242:Middlewares/Third_Party/LwIP/src/core/mem.c ****      LWIP_ASSERT("MEM_USE_POOLS: invalid chunk size",
 243:Middlewares/Third_Party/LwIP/src/core/mem.c ****         hmem->size <= memp_pools[hmem->poolnr]->size);
 244:Middlewares/Third_Party/LwIP/src/core/mem.c ****      /* check that unused memory remained untouched (diff between requested size and selected pool'
 245:Middlewares/Third_Party/LwIP/src/core/mem.c ****      for (i = hmem->size; i < memp_pools[hmem->poolnr]->size; i++) {
 246:Middlewares/Third_Party/LwIP/src/core/mem.c ****         u8_t data = *((u8_t*)rmem + i);
 247:Middlewares/Third_Party/LwIP/src/core/mem.c ****         LWIP_ASSERT("MEM_USE_POOLS: mem overflow detected", data == 0xcd);
 248:Middlewares/Third_Party/LwIP/src/core/mem.c ****      }
 249:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 250:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEMP_OVERFLOW_CHECK */
 251:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 252:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* and put it in the pool we saved earlier */
 253:Middlewares/Third_Party/LwIP/src/core/mem.c ****   memp_free(hmem->poolnr, hmem);
 254:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 255:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 256:Middlewares/Third_Party/LwIP/src/core/mem.c **** #else /* MEM_USE_POOLS */
 257:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* lwIP replacement for your libc malloc() */
 258:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 259:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 260:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * The heap is made up as a list of structs of this type.
 261:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * This does not have to be aligned since for getting its size,
ARM GAS  /tmp/ccOZpyKy.s 			page 6


 262:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * we only use the macro SIZEOF_STRUCT_MEM, which automatically aligns.
 263:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 264:Middlewares/Third_Party/LwIP/src/core/mem.c **** struct mem {
 265:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /** index (-> ram[next]) of the next struct */
 266:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_size_t next;
 267:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /** index (-> ram[prev]) of the previous struct */
 268:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_size_t prev;
 269:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /** 1: this area is used; 0: this area is unused */
 270:Middlewares/Third_Party/LwIP/src/core/mem.c ****   u8_t used;
 271:Middlewares/Third_Party/LwIP/src/core/mem.c **** };
 272:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 273:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** All allocated blocks will be MIN_SIZE bytes big, at least!
 274:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * MIN_SIZE can be overridden to suit your needs. Smaller values save space,
 275:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * larger values could prevent too small blocks to fragment the RAM too much. */
 276:Middlewares/Third_Party/LwIP/src/core/mem.c **** #ifndef MIN_SIZE
 277:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MIN_SIZE             12
 278:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MIN_SIZE */
 279:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* some alignment macros: we define them here for better source code layout */
 280:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MIN_SIZE_ALIGNED     LWIP_MEM_ALIGN_SIZE(MIN_SIZE)
 281:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define SIZEOF_STRUCT_MEM    LWIP_MEM_ALIGN_SIZE(sizeof(struct mem))
 282:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define MEM_SIZE_ALIGNED     LWIP_MEM_ALIGN_SIZE(MEM_SIZE)
 283:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 284:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** If you want to relocate the heap to external memory, simply define
 285:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * LWIP_RAM_HEAP_POINTER as a void-pointer to that location.
 286:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * If so, make sure the memory at that location is big enough (see below on
 287:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * how that space is calculated). */
 288:Middlewares/Third_Party/LwIP/src/core/mem.c **** #ifndef LWIP_RAM_HEAP_POINTER
 289:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** the heap. we need one struct mem at the end and some room for alignment */
 290:Middlewares/Third_Party/LwIP/src/core/mem.c **** LWIP_DECLARE_MEMORY_ALIGNED(ram_heap, MEM_SIZE_ALIGNED + (2U*SIZEOF_STRUCT_MEM));
 291:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_RAM_HEAP_POINTER ram_heap
 292:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_RAM_HEAP_POINTER */
 293:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 294:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** pointer to the heap (ram_heap): for alignment, ram is now a pointer instead of an array */
 295:Middlewares/Third_Party/LwIP/src/core/mem.c **** static u8_t *ram;
 296:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** the last entry, always unused! */
 297:Middlewares/Third_Party/LwIP/src/core/mem.c **** static struct mem *ram_end;
 298:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** pointer to the lowest free block, this is used for faster search */
 299:Middlewares/Third_Party/LwIP/src/core/mem.c **** static struct mem *lfree;
 300:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 301:Middlewares/Third_Party/LwIP/src/core/mem.c **** /** concurrent access protection */
 302:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if !NO_SYS
 303:Middlewares/Third_Party/LwIP/src/core/mem.c **** static sys_mutex_t mem_mutex;
 304:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif
 305:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 306:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 307:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 308:Middlewares/Third_Party/LwIP/src/core/mem.c **** static volatile u8_t mem_free_count;
 309:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 310:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* Allow mem_free from other (e.g. interrupt) context */
 311:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_FREE_DECL_PROTECT()  SYS_ARCH_DECL_PROTECT(lev_free)
 312:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_FREE_PROTECT()       SYS_ARCH_PROTECT(lev_free)
 313:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_FREE_UNPROTECT()     SYS_ARCH_UNPROTECT(lev_free)
 314:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_ALLOC_DECL_PROTECT() SYS_ARCH_DECL_PROTECT(lev_alloc)
 315:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_ALLOC_PROTECT()      SYS_ARCH_PROTECT(lev_alloc)
 316:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_ALLOC_UNPROTECT()    SYS_ARCH_UNPROTECT(lev_alloc)
 317:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 318:Middlewares/Third_Party/LwIP/src/core/mem.c **** #else /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
ARM GAS  /tmp/ccOZpyKy.s 			page 7


 319:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 320:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* Protect the heap only by using a semaphore */
 321:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_FREE_DECL_PROTECT()
 322:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_FREE_PROTECT()    sys_mutex_lock(&mem_mutex)
 323:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_FREE_UNPROTECT()  sys_mutex_unlock(&mem_mutex)
 324:Middlewares/Third_Party/LwIP/src/core/mem.c **** /* mem_malloc is protected using semaphore AND LWIP_MEM_ALLOC_PROTECT */
 325:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_ALLOC_DECL_PROTECT()
 326:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_ALLOC_PROTECT()
 327:Middlewares/Third_Party/LwIP/src/core/mem.c **** #define LWIP_MEM_ALLOC_UNPROTECT()
 328:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 329:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 330:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 331:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 332:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 333:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * "Plug holes" by combining adjacent empty struct mems.
 334:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * After this function is through, there should not exist
 335:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * one empty struct mem pointing to another empty struct mem.
 336:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 337:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param mem this points to a struct mem which just has been freed
 338:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @internal this function is only called by mem_free() and mem_trim()
 339:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 340:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * This assumes access to the heap is protected by the calling function
 341:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * already.
 342:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 343:Middlewares/Third_Party/LwIP/src/core/mem.c **** static void
 344:Middlewares/Third_Party/LwIP/src/core/mem.c **** plug_holes(struct mem *mem)
 345:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
  26              		.loc 1 345 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 0446     		mov	r4, r0
 346:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *nmem;
 347:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *pmem;
 348:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 349:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("plug_holes: mem >= ram", (u8_t *)mem >= ram);
  37              		.loc 1 349 0
  38 0004 2D4B     		ldr	r3, .L17
  39 0006 1B68     		ldr	r3, [r3]
  40 0008 8342     		cmp	r3, r0
  41 000a 31D8     		bhi	.L11
  42              	.LVL1:
  43              	.L2:
 350:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("plug_holes: mem < ram_end", (u8_t *)mem < (u8_t *)ram_end);
  44              		.loc 1 350 0
  45 000c 2C4B     		ldr	r3, .L17+4
  46 000e 1B68     		ldr	r3, [r3]
  47 0010 9C42     		cmp	r4, r3
  48 0012 35D2     		bcs	.L12
  49              	.L3:
 351:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("plug_holes: mem->used == 0", mem->used == 0);
ARM GAS  /tmp/ccOZpyKy.s 			page 8


  50              		.loc 1 351 0
  51 0014 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
  52 0016 002B     		cmp	r3, #0
  53 0018 3AD1     		bne	.L13
  54              	.L4:
 352:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 353:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* plug hole forward */
 354:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("plug_holes: mem->next <= MEM_SIZE_ALIGNED", mem->next <= MEM_SIZE_ALIGNED);
  55              		.loc 1 354 0
  56 001a 2388     		ldrh	r3, [r4]
  57 001c B3F5C86F 		cmp	r3, #1600
  58 0020 3ED8     		bhi	.L14
  59              	.L5:
 355:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 356:Middlewares/Third_Party/LwIP/src/core/mem.c ****   nmem = (struct mem *)(void *)&ram[mem->next];
  60              		.loc 1 356 0
  61 0022 264B     		ldr	r3, .L17
  62 0024 1B68     		ldr	r3, [r3]
  63 0026 2188     		ldrh	r1, [r4]
  64 0028 5A18     		adds	r2, r3, r1
  65              	.LVL2:
 357:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (mem != nmem && nmem->used == 0 && (u8_t *)nmem != (u8_t *)ram_end) {
  66              		.loc 1 357 0
  67 002a 9442     		cmp	r4, r2
  68 002c 0FD0     		beq	.L6
  69              		.loc 1 357 0 is_stmt 0 discriminator 1
  70 002e 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
  71 0030 68B9     		cbnz	r0, .L6
  72              		.loc 1 357 0 discriminator 2
  73 0032 2348     		ldr	r0, .L17+4
  74 0034 0068     		ldr	r0, [r0]
  75 0036 8242     		cmp	r2, r0
  76 0038 09D0     		beq	.L6
 358:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* if mem->next is unused and not end of ram, combine mem and mem->next */
 359:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (lfree == nmem) {
  77              		.loc 1 359 0 is_stmt 1
  78 003a 2248     		ldr	r0, .L17+8
  79 003c 0068     		ldr	r0, [r0]
  80 003e 8242     		cmp	r2, r0
  81 0040 36D0     		beq	.L15
  82              	.LVL3:
  83              	.L7:
 360:Middlewares/Third_Party/LwIP/src/core/mem.c ****       lfree = mem;
 361:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 362:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem->next = nmem->next;
  84              		.loc 1 362 0
  85 0042 5A5A     		ldrh	r2, [r3, r1]
  86 0044 2280     		strh	r2, [r4]	@ movhi
 363:Middlewares/Third_Party/LwIP/src/core/mem.c ****     ((struct mem *)(void *)&ram[nmem->next])->prev = (mem_size_t)((u8_t *)mem - ram);
  87              		.loc 1 363 0
  88 0046 5A5A     		ldrh	r2, [r3, r1]
  89 0048 1A44     		add	r2, r2, r3
  90 004a E11A     		subs	r1, r4, r3
  91              	.LVL4:
  92 004c 5180     		strh	r1, [r2, #2]	@ movhi
  93              	.L6:
 364:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
ARM GAS  /tmp/ccOZpyKy.s 			page 9


 365:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 366:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* plug hole backward */
 367:Middlewares/Third_Party/LwIP/src/core/mem.c ****   pmem = (struct mem *)(void *)&ram[mem->prev];
  94              		.loc 1 367 0
  95 004e 6188     		ldrh	r1, [r4, #2]
  96 0050 5A18     		adds	r2, r3, r1
  97              	.LVL5:
 368:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (pmem != mem && pmem->used == 0) {
  98              		.loc 1 368 0
  99 0052 9442     		cmp	r4, r2
 100 0054 0BD0     		beq	.L1
 101              		.loc 1 368 0 is_stmt 0 discriminator 1
 102 0056 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
 103 0058 48B9     		cbnz	r0, .L1
 369:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* if mem->prev is unused, combine mem and mem->prev */
 370:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (lfree == mem) {
 104              		.loc 1 370 0 is_stmt 1
 105 005a 1A48     		ldr	r0, .L17+8
 106 005c 0068     		ldr	r0, [r0]
 107 005e 8442     		cmp	r4, r0
 108 0060 29D0     		beq	.L16
 109              	.L9:
 371:Middlewares/Third_Party/LwIP/src/core/mem.c ****       lfree = pmem;
 372:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 373:Middlewares/Third_Party/LwIP/src/core/mem.c ****     pmem->next = mem->next;
 110              		.loc 1 373 0
 111 0062 2088     		ldrh	r0, [r4]
 112 0064 5852     		strh	r0, [r3, r1]	@ movhi
 374:Middlewares/Third_Party/LwIP/src/core/mem.c ****     ((struct mem *)(void *)&ram[mem->next])->prev = (mem_size_t)((u8_t *)pmem - ram);
 113              		.loc 1 374 0
 114 0066 2188     		ldrh	r1, [r4]
 115 0068 1944     		add	r1, r1, r3
 116 006a D31A     		subs	r3, r2, r3
 117 006c 4B80     		strh	r3, [r1, #2]	@ movhi
 118              	.L1:
 119 006e 10BD     		pop	{r4, pc}
 120              	.LVL6:
 121              	.L11:
 349:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("plug_holes: mem < ram_end", (u8_t *)mem < (u8_t *)ram_end);
 122              		.loc 1 349 0 discriminator 1
 123 0070 154B     		ldr	r3, .L17+12
 124 0072 40F25D12 		movw	r2, #349
 125 0076 1549     		ldr	r1, .L17+16
 126 0078 1548     		ldr	r0, .L17+20
 127              	.LVL7:
 128 007a FFF7FEFF 		bl	printf
 129              	.LVL8:
 130 007e C5E7     		b	.L2
 131              	.L12:
 350:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("plug_holes: mem->used == 0", mem->used == 0);
 132              		.loc 1 350 0 discriminator 1
 133 0080 114B     		ldr	r3, .L17+12
 134 0082 4FF4AF72 		mov	r2, #350
 135 0086 1349     		ldr	r1, .L17+24
 136 0088 1148     		ldr	r0, .L17+20
 137 008a FFF7FEFF 		bl	printf
 138              	.LVL9:
ARM GAS  /tmp/ccOZpyKy.s 			page 10


 139 008e C1E7     		b	.L3
 140              	.L13:
 351:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 141              		.loc 1 351 0 discriminator 1
 142 0090 0D4B     		ldr	r3, .L17+12
 143 0092 40F25F12 		movw	r2, #351
 144 0096 1049     		ldr	r1, .L17+28
 145 0098 0D48     		ldr	r0, .L17+20
 146 009a FFF7FEFF 		bl	printf
 147              	.LVL10:
 148 009e BCE7     		b	.L4
 149              	.L14:
 354:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 150              		.loc 1 354 0 discriminator 1
 151 00a0 094B     		ldr	r3, .L17+12
 152 00a2 4FF4B172 		mov	r2, #354
 153 00a6 0D49     		ldr	r1, .L17+32
 154 00a8 0948     		ldr	r0, .L17+20
 155 00aa FFF7FEFF 		bl	printf
 156              	.LVL11:
 157 00ae B8E7     		b	.L5
 158              	.LVL12:
 159              	.L15:
 360:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 160              		.loc 1 360 0
 161 00b0 044A     		ldr	r2, .L17+8
 162              	.LVL13:
 163 00b2 1460     		str	r4, [r2]
 164 00b4 C5E7     		b	.L7
 165              	.LVL14:
 166              	.L16:
 371:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 167              		.loc 1 371 0
 168 00b6 0348     		ldr	r0, .L17+8
 169 00b8 0260     		str	r2, [r0]
 170 00ba D2E7     		b	.L9
 171              	.L18:
 172              		.align	2
 173              	.L17:
 174 00bc 00000000 		.word	.LANCHOR0
 175 00c0 00000000 		.word	.LANCHOR1
 176 00c4 00000000 		.word	.LANCHOR2
 177 00c8 00000000 		.word	.LC0
 178 00cc 2C000000 		.word	.LC1
 179 00d0 44000000 		.word	.LC2
 180 00d4 6C000000 		.word	.LC3
 181 00d8 88000000 		.word	.LC4
 182 00dc A4000000 		.word	.LC5
 183              		.cfi_endproc
 184              	.LFE158:
 186              		.section	.text.mem_init,"ax",%progbits
 187              		.align	1
 188              		.global	mem_init
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 192              		.fpu fpv5-d16
ARM GAS  /tmp/ccOZpyKy.s 			page 11


 194              	mem_init:
 195              	.LFB159:
 375:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 376:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 377:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 378:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 379:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Zero the heap and initialize start, end and lowest-free
 380:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 381:Middlewares/Third_Party/LwIP/src/core/mem.c **** void
 382:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_init(void)
 383:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 196              		.loc 1 383 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 384:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *mem;
 385:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 386:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("Sanity check alignment",
 387:Middlewares/Third_Party/LwIP/src/core/mem.c ****     (SIZEOF_STRUCT_MEM & (MEM_ALIGNMENT-1)) == 0);
 388:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 389:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* align the heap */
 390:Middlewares/Third_Party/LwIP/src/core/mem.c ****   ram = (u8_t *)LWIP_MEM_ALIGN(LWIP_RAM_HEAP_POINTER);
 201              		.loc 1 390 0
 202 0000 0A4B     		ldr	r3, .L20
 203 0002 23F00303 		bic	r3, r3, #3
 204 0006 0A4A     		ldr	r2, .L20+4
 205 0008 1360     		str	r3, [r2]
 206              	.LVL15:
 391:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* initialize the start of the heap */
 392:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem = (struct mem *)(void *)ram;
 393:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem->next = MEM_SIZE_ALIGNED;
 207              		.loc 1 393 0
 208 000a 4FF4C861 		mov	r1, #1600
 209 000e 1980     		strh	r1, [r3]	@ movhi
 394:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem->prev = 0;
 210              		.loc 1 394 0
 211 0010 0022     		movs	r2, #0
 212 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 395:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem->used = 0;
 213              		.loc 1 395 0
 214 0014 1A71     		strb	r2, [r3, #4]
 396:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* initialize the end of the heap */
 397:Middlewares/Third_Party/LwIP/src/core/mem.c ****   ram_end = (struct mem *)(void *)&ram[MEM_SIZE_ALIGNED];
 215              		.loc 1 397 0
 216 0016 5A18     		adds	r2, r3, r1
 217 0018 0648     		ldr	r0, .L20+8
 218 001a 0260     		str	r2, [r0]
 398:Middlewares/Third_Party/LwIP/src/core/mem.c ****   ram_end->used = 1;
 219              		.loc 1 398 0
 220 001c 0120     		movs	r0, #1
 221 001e 1071     		strb	r0, [r2, #4]
 399:Middlewares/Third_Party/LwIP/src/core/mem.c ****   ram_end->next = MEM_SIZE_ALIGNED;
 222              		.loc 1 399 0
 223 0020 A3F84016 		strh	r1, [r3, #1600]	@ movhi
 400:Middlewares/Third_Party/LwIP/src/core/mem.c ****   ram_end->prev = MEM_SIZE_ALIGNED;
 224              		.loc 1 400 0
ARM GAS  /tmp/ccOZpyKy.s 			page 12


 225 0024 5180     		strh	r1, [r2, #2]	@ movhi
 401:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 402:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* initialize the lowest-free pointer to the start of the heap */
 403:Middlewares/Third_Party/LwIP/src/core/mem.c ****   lfree = (struct mem *)(void *)ram;
 226              		.loc 1 403 0
 227 0026 044A     		ldr	r2, .L20+12
 228 0028 1360     		str	r3, [r2]
 229 002a 7047     		bx	lr
 230              	.L21:
 231              		.align	2
 232              	.L20:
 233 002c 03000000 		.word	ram_heap+3
 234 0030 00000000 		.word	.LANCHOR0
 235 0034 00000000 		.word	.LANCHOR1
 236 0038 00000000 		.word	.LANCHOR2
 237              		.cfi_endproc
 238              	.LFE159:
 240              		.section	.text.mem_free,"ax",%progbits
 241              		.align	1
 242              		.global	mem_free
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 246              		.fpu fpv5-d16
 248              	mem_free:
 249              	.LFB160:
 404:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 405:Middlewares/Third_Party/LwIP/src/core/mem.c ****   MEM_STATS_AVAIL(avail, MEM_SIZE_ALIGNED);
 406:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 407:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (sys_mutex_new(&mem_mutex) != ERR_OK) {
 408:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_ASSERT("failed to create mem_mutex", 0);
 409:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 410:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 411:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 412:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 413:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Put a struct mem back on the heap
 414:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 415:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param rmem is the data portion of a struct mem as returned by a previous
 416:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *             call to mem_malloc()
 417:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 418:Middlewares/Third_Party/LwIP/src/core/mem.c **** void
 419:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_free(void *rmem)
 420:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 250              		.loc 1 420 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              	.LVL16:
 421:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *mem;
 422:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_FREE_DECL_PROTECT();
 423:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 424:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (rmem == NULL) {
 255              		.loc 1 424 0
 256 0000 0028     		cmp	r0, #0
 257 0002 3DD0     		beq	.L30
 420:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *mem;
 258              		.loc 1 420 0
ARM GAS  /tmp/ccOZpyKy.s 			page 13


 259 0004 38B5     		push	{r3, r4, r5, lr}
 260              	.LCFI1:
 261              		.cfi_def_cfa_offset 16
 262              		.cfi_offset 3, -16
 263              		.cfi_offset 4, -12
 264              		.cfi_offset 5, -8
 265              		.cfi_offset 14, -4
 266 0006 0446     		mov	r4, r0
 425:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_DEBUGF(MEM_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS, ("mem_free(p == NULL) was call
 426:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return;
 427:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 428:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("mem_free: sanity check alignment", (((mem_ptr_t)rmem) & (MEM_ALIGNMENT-1)) == 0);
 267              		.loc 1 428 0
 268 0008 10F0030F 		tst	r0, #3
 269 000c 28D1     		bne	.L33
 270              	.LVL17:
 271              	.L24:
 429:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 430:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("mem_free: legal memory", (u8_t *)rmem >= (u8_t *)ram &&
 272              		.loc 1 430 0
 273 000e 1D4B     		ldr	r3, .L35
 274 0010 1B68     		ldr	r3, [r3]
 275 0012 9C42     		cmp	r4, r3
 276 0014 03D3     		bcc	.L25
 277              		.loc 1 430 0 is_stmt 0 discriminator 2
 278 0016 1C4B     		ldr	r3, .L35+4
 279 0018 1B68     		ldr	r3, [r3]
 280 001a 9C42     		cmp	r4, r3
 281 001c 06D3     		bcc	.L26
 282              	.L25:
 283              		.loc 1 430 0 discriminator 3
 284 001e 1B4B     		ldr	r3, .L35+8
 285 0020 40F2AF12 		movw	r2, #431
 286 0024 1A49     		ldr	r1, .L35+12
 287 0026 1B48     		ldr	r0, .L35+16
 288 0028 FFF7FEFF 		bl	printf
 289              	.LVL18:
 290              	.L26:
 431:Middlewares/Third_Party/LwIP/src/core/mem.c ****     (u8_t *)rmem < (u8_t *)ram_end);
 432:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 433:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if ((u8_t *)rmem < (u8_t *)ram || (u8_t *)rmem >= (u8_t *)ram_end) {
 291              		.loc 1 433 0 is_stmt 1
 292 002c 154B     		ldr	r3, .L35
 293 002e 1B68     		ldr	r3, [r3]
 294 0030 9C42     		cmp	r4, r3
 295 0032 14D3     		bcc	.L22
 296              		.loc 1 433 0 is_stmt 0 discriminator 1
 297 0034 144B     		ldr	r3, .L35+4
 298 0036 1B68     		ldr	r3, [r3]
 299 0038 9C42     		cmp	r4, r3
 300 003a 10D2     		bcs	.L22
 434:Middlewares/Third_Party/LwIP/src/core/mem.c ****     SYS_ARCH_DECL_PROTECT(lev);
 435:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_DEBUGF(MEM_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("mem_free: illegal memory\n"));
 436:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* protect mem stats from concurrent access */
 437:Middlewares/Third_Party/LwIP/src/core/mem.c ****     SYS_ARCH_PROTECT(lev);
 438:Middlewares/Third_Party/LwIP/src/core/mem.c ****     MEM_STATS_INC(illegal);
 439:Middlewares/Third_Party/LwIP/src/core/mem.c ****     SYS_ARCH_UNPROTECT(lev);
ARM GAS  /tmp/ccOZpyKy.s 			page 14


 440:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return;
 441:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 442:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* protect the heap from concurrent access */
 443:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_FREE_PROTECT();
 444:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* Get the corresponding struct mem ... */
 445:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* cast through void* to get rid of alignment warnings */
 446:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem = (struct mem *)(void *)((u8_t *)rmem - SIZEOF_STRUCT_MEM);
 301              		.loc 1 446 0 is_stmt 1
 302 003c A4F10805 		sub	r5, r4, #8
 303              	.LVL19:
 447:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* ... which has to be in a used state ... */
 448:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("mem_free: mem->used", mem->used);
 304              		.loc 1 448 0
 305 0040 14F8043C 		ldrb	r3, [r4, #-4]	@ zero_extendqisi2
 306 0044 A3B1     		cbz	r3, .L34
 307              	.L27:
 449:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* ... and is now unused. */
 450:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem->used = 0;
 308              		.loc 1 450 0
 309 0046 0023     		movs	r3, #0
 310 0048 04F8043C 		strb	r3, [r4, #-4]
 451:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 452:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (mem < lfree) {
 311              		.loc 1 452 0
 312 004c 124B     		ldr	r3, .L35+20
 313 004e 1B68     		ldr	r3, [r3]
 314 0050 9D42     		cmp	r5, r3
 315 0052 01D2     		bcs	.L28
 453:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* the newly freed struct is now the lowest */
 454:Middlewares/Third_Party/LwIP/src/core/mem.c ****     lfree = mem;
 316              		.loc 1 454 0
 317 0054 104B     		ldr	r3, .L35+20
 318 0056 1D60     		str	r5, [r3]
 319              	.L28:
 455:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 456:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 457:Middlewares/Third_Party/LwIP/src/core/mem.c ****   MEM_STATS_DEC_USED(used, mem->next - (mem_size_t)(((u8_t *)mem - ram)));
 458:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 459:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* finally, see if prev or next are free also */
 460:Middlewares/Third_Party/LwIP/src/core/mem.c ****   plug_holes(mem);
 320              		.loc 1 460 0
 321 0058 2846     		mov	r0, r5
 322 005a FFF7FEFF 		bl	plug_holes
 323              	.LVL20:
 324              	.L22:
 325 005e 38BD     		pop	{r3, r4, r5, pc}
 326              	.LVL21:
 327              	.L33:
 428:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 328              		.loc 1 428 0 discriminator 1
 329 0060 0A4B     		ldr	r3, .L35+8
 330 0062 4FF4D672 		mov	r2, #428
 331 0066 0D49     		ldr	r1, .L35+24
 332 0068 0A48     		ldr	r0, .L35+16
 333              	.LVL22:
 334 006a FFF7FEFF 		bl	printf
 335              	.LVL23:
ARM GAS  /tmp/ccOZpyKy.s 			page 15


 336 006e CEE7     		b	.L24
 337              	.LVL24:
 338              	.L34:
 448:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* ... and is now unused. */
 339              		.loc 1 448 0 discriminator 1
 340 0070 064B     		ldr	r3, .L35+8
 341 0072 4FF4E072 		mov	r2, #448
 342 0076 0A49     		ldr	r1, .L35+28
 343 0078 0648     		ldr	r0, .L35+16
 344 007a FFF7FEFF 		bl	printf
 345              	.LVL25:
 346 007e E2E7     		b	.L27
 347              	.LVL26:
 348              	.L30:
 349              	.LCFI2:
 350              		.cfi_def_cfa_offset 0
 351              		.cfi_restore 3
 352              		.cfi_restore 4
 353              		.cfi_restore 5
 354              		.cfi_restore 14
 355 0080 7047     		bx	lr
 356              	.L36:
 357 0082 00BF     		.align	2
 358              	.L35:
 359 0084 00000000 		.word	.LANCHOR0
 360 0088 00000000 		.word	.LANCHOR1
 361 008c 00000000 		.word	.LC0
 362 0090 24000000 		.word	.LC7
 363 0094 44000000 		.word	.LC2
 364 0098 00000000 		.word	.LANCHOR2
 365 009c 00000000 		.word	.LC6
 366 00a0 3C000000 		.word	.LC8
 367              		.cfi_endproc
 368              	.LFE160:
 370              		.section	.text.mem_trim,"ax",%progbits
 371              		.align	1
 372              		.global	mem_trim
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu fpv5-d16
 378              	mem_trim:
 379              	.LFB161:
 461:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 462:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_free_count = 1;
 463:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 464:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_FREE_UNPROTECT();
 465:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 466:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 467:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 468:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Shrink memory returned by mem_malloc().
 469:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 470:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param rmem pointer to memory allocated by mem_malloc the is to be shrinked
 471:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param newsize required size after shrinking (needs to be smaller than or
 472:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *                equal to the previous size)
 473:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @return for compatibility reasons: is always == rmem, at the moment
 474:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *         or NULL if newsize is > old size, in which case rmem is NOT touched
ARM GAS  /tmp/ccOZpyKy.s 			page 16


 475:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *         or freed!
 476:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 477:Middlewares/Third_Party/LwIP/src/core/mem.c **** void *
 478:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_trim(void *rmem, mem_size_t newsize)
 479:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 380              		.loc 1 479 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              	.LVL27:
 385 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 386              	.LCFI3:
 387              		.cfi_def_cfa_offset 24
 388              		.cfi_offset 3, -24
 389              		.cfi_offset 4, -20
 390              		.cfi_offset 5, -16
 391              		.cfi_offset 6, -12
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 0546     		mov	r5, r0
 480:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_size_t size;
 481:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_size_t ptr, ptr2;
 482:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *mem, *mem2;
 483:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* use the FREE_PROTECT here: it protects with sem OR SYS_ARCH_PROTECT */
 484:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_FREE_DECL_PROTECT();
 485:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 486:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* Expand the size of the allocated memory region so that we can
 487:Middlewares/Third_Party/LwIP/src/core/mem.c ****      adjust for alignment. */
 488:Middlewares/Third_Party/LwIP/src/core/mem.c ****   newsize = LWIP_MEM_ALIGN_SIZE(newsize);
 395              		.loc 1 488 0
 396 0004 CC1C     		adds	r4, r1, #3
 397 0006 A4B2     		uxth	r4, r4
 398 0008 24F00304 		bic	r4, r4, #3
 399 000c A4B2     		uxth	r4, r4
 400              	.LVL28:
 489:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 490:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (newsize < MIN_SIZE_ALIGNED) {
 401              		.loc 1 490 0
 402 000e 0B2C     		cmp	r4, #11
 403 0010 00D8     		bhi	.L38
 491:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* every data block must be at least MIN_SIZE_ALIGNED long */
 492:Middlewares/Third_Party/LwIP/src/core/mem.c ****     newsize = MIN_SIZE_ALIGNED;
 404              		.loc 1 492 0
 405 0012 0C24     		movs	r4, #12
 406              	.LVL29:
 407              	.L38:
 493:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 494:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 495:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (newsize > MEM_SIZE_ALIGNED) {
 408              		.loc 1 495 0
 409 0014 B4F5C86F 		cmp	r4, #1600
 410 0018 6DD8     		bhi	.L47
 496:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return NULL;
 497:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 498:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 499:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("mem_trim: legal memory", (u8_t *)rmem >= (u8_t *)ram &&
 411              		.loc 1 499 0
ARM GAS  /tmp/ccOZpyKy.s 			page 17


 412 001a 394B     		ldr	r3, .L52
 413 001c 1B68     		ldr	r3, [r3]
 414 001e AB42     		cmp	r3, r5
 415 0020 03D8     		bhi	.L40
 416              		.loc 1 499 0 is_stmt 0 discriminator 2
 417 0022 384B     		ldr	r3, .L52+4
 418 0024 1B68     		ldr	r3, [r3]
 419 0026 9D42     		cmp	r5, r3
 420 0028 06D3     		bcc	.L41
 421              	.L40:
 422              		.loc 1 499 0 discriminator 3
 423 002a 374B     		ldr	r3, .L52+8
 424 002c 4FF4FA72 		mov	r2, #500
 425 0030 3649     		ldr	r1, .L52+12
 426 0032 3748     		ldr	r0, .L52+16
 427              	.LVL30:
 428 0034 FFF7FEFF 		bl	printf
 429              	.LVL31:
 430              	.L41:
 500:Middlewares/Third_Party/LwIP/src/core/mem.c ****    (u8_t *)rmem < (u8_t *)ram_end);
 501:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 502:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if ((u8_t *)rmem < (u8_t *)ram || (u8_t *)rmem >= (u8_t *)ram_end) {
 431              		.loc 1 502 0 is_stmt 1
 432 0038 314B     		ldr	r3, .L52
 433 003a 1B68     		ldr	r3, [r3]
 434 003c 9D42     		cmp	r5, r3
 435 003e 5BD3     		bcc	.L39
 436              		.loc 1 502 0 is_stmt 0 discriminator 1
 437 0040 304A     		ldr	r2, .L52+4
 438 0042 1268     		ldr	r2, [r2]
 439 0044 9542     		cmp	r5, r2
 440 0046 57D2     		bcs	.L39
 503:Middlewares/Third_Party/LwIP/src/core/mem.c ****     SYS_ARCH_DECL_PROTECT(lev);
 504:Middlewares/Third_Party/LwIP/src/core/mem.c ****     LWIP_DEBUGF(MEM_DEBUG | LWIP_DBG_LEVEL_SEVERE, ("mem_trim: illegal memory\n"));
 505:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* protect mem stats from concurrent access */
 506:Middlewares/Third_Party/LwIP/src/core/mem.c ****     SYS_ARCH_PROTECT(lev);
 507:Middlewares/Third_Party/LwIP/src/core/mem.c ****     MEM_STATS_INC(illegal);
 508:Middlewares/Third_Party/LwIP/src/core/mem.c ****     SYS_ARCH_UNPROTECT(lev);
 509:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return rmem;
 510:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 511:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* Get the corresponding struct mem ... */
 512:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* cast through void* to get rid of alignment warnings */
 513:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem = (struct mem *)(void *)((u8_t *)rmem - SIZEOF_STRUCT_MEM);
 441              		.loc 1 513 0 is_stmt 1
 442 0048 A5F10807 		sub	r7, r5, #8
 443              	.LVL32:
 514:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* ... and its offset pointer */
 515:Middlewares/Third_Party/LwIP/src/core/mem.c ****   ptr = (mem_size_t)((u8_t *)mem - ram);
 444              		.loc 1 515 0
 445 004c FF1A     		subs	r7, r7, r3
 446              	.LVL33:
 447 004e BFB2     		uxth	r7, r7
 448              	.LVL34:
 516:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 517:Middlewares/Third_Party/LwIP/src/core/mem.c ****   size = mem->next - ptr - SIZEOF_STRUCT_MEM;
 449              		.loc 1 517 0
 450 0050 35F8086C 		ldrh	r6, [r5, #-8]
ARM GAS  /tmp/ccOZpyKy.s 			page 18


 451 0054 F61B     		subs	r6, r6, r7
 452 0056 B6B2     		uxth	r6, r6
 453 0058 083E     		subs	r6, r6, #8
 454 005a B6B2     		uxth	r6, r6
 455              	.LVL35:
 518:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_ASSERT("mem_trim can only shrink memory", newsize <= size);
 456              		.loc 1 518 0
 457 005c B442     		cmp	r4, r6
 458 005e 20D8     		bhi	.L50
 459              	.L42:
 519:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (newsize > size) {
 460              		.loc 1 519 0
 461 0060 B442     		cmp	r4, r6
 462 0062 4BD8     		bhi	.L48
 520:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* not supported */
 521:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return NULL;
 522:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 523:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (newsize == size) {
 463              		.loc 1 523 0
 464 0064 48D0     		beq	.L39
 524:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* No change in size, simply return */
 525:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return rmem;
 526:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 527:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 528:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* protect the heap from concurrent access */
 529:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_FREE_PROTECT();
 530:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 531:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem2 = (struct mem *)(void *)&ram[mem->next];
 465              		.loc 1 531 0
 466 0066 264B     		ldr	r3, .L52
 467 0068 1A68     		ldr	r2, [r3]
 468 006a 35F8083C 		ldrh	r3, [r5, #-8]
 469 006e D118     		adds	r1, r2, r3
 470              	.LVL36:
 532:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (mem2->used == 0) {
 471              		.loc 1 532 0
 472 0070 0879     		ldrb	r0, [r1, #4]	@ zero_extendqisi2
 473 0072 10BB     		cbnz	r0, .L43
 474              	.LBB2:
 533:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* The next struct is unused, we can simply move it at little */
 534:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem_size_t next;
 535:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* remember the old next pointer */
 536:Middlewares/Third_Party/LwIP/src/core/mem.c ****     next = mem2->next;
 475              		.loc 1 536 0
 476 0074 D05A     		ldrh	r0, [r2, r3]
 477              	.LVL37:
 537:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* create new struct mem which is moved directly after the shrinked mem */
 538:Middlewares/Third_Party/LwIP/src/core/mem.c ****     ptr2 = ptr + SIZEOF_STRUCT_MEM + newsize;
 478              		.loc 1 538 0
 479 0076 E319     		adds	r3, r4, r7
 480 0078 9BB2     		uxth	r3, r3
 481 007a 0833     		adds	r3, r3, #8
 482 007c 9BB2     		uxth	r3, r3
 483              	.LVL38:
 539:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (lfree == mem2) {
 484              		.loc 1 539 0
 485 007e 254C     		ldr	r4, .L52+20
ARM GAS  /tmp/ccOZpyKy.s 			page 19


 486              	.LVL39:
 487 0080 2468     		ldr	r4, [r4]
 488 0082 A142     		cmp	r1, r4
 489 0084 15D0     		beq	.L51
 490              	.LVL40:
 491              	.L44:
 540:Middlewares/Third_Party/LwIP/src/core/mem.c ****       lfree = (struct mem *)(void *)&ram[ptr2];
 541:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 542:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem2 = (struct mem *)(void *)&ram[ptr2];
 492              		.loc 1 542 0
 493 0086 D118     		adds	r1, r2, r3
 494              	.LVL41:
 543:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem2->used = 0;
 495              		.loc 1 543 0
 496 0088 0024     		movs	r4, #0
 497 008a 0C71     		strb	r4, [r1, #4]
 544:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* restore the next pointer */
 545:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem2->next = next;
 498              		.loc 1 545 0
 499 008c D052     		strh	r0, [r2, r3]	@ movhi
 546:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* link it back to mem */
 547:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem2->prev = ptr;
 500              		.loc 1 547 0
 501 008e 4F80     		strh	r7, [r1, #2]	@ movhi
 548:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* link mem to it */
 549:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem->next = ptr2;
 502              		.loc 1 549 0
 503 0090 25F8083C 		strh	r3, [r5, #-8]	@ movhi
 550:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* last thing to restore linked list: as we have moved mem2,
 551:Middlewares/Third_Party/LwIP/src/core/mem.c ****      * let 'mem2->next->prev' point to mem2 again. but only if mem2->next is not
 552:Middlewares/Third_Party/LwIP/src/core/mem.c ****      * the end of the heap */
 553:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (mem2->next != MEM_SIZE_ALIGNED) {
 504              		.loc 1 553 0
 505 0094 D15A     		ldrh	r1, [r2, r3]
 506 0096 B1F5C86F 		cmp	r1, #1600
 507 009a 2DD0     		beq	.L39
 554:Middlewares/Third_Party/LwIP/src/core/mem.c ****       ((struct mem *)(void *)&ram[mem2->next])->prev = ptr2;
 508              		.loc 1 554 0
 509 009c 0A44     		add	r2, r2, r1
 510 009e 5380     		strh	r3, [r2, #2]	@ movhi
 511 00a0 2AE0     		b	.L39
 512              	.LVL42:
 513              	.L50:
 514              	.LBE2:
 518:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (newsize > size) {
 515              		.loc 1 518 0 discriminator 1
 516 00a2 194B     		ldr	r3, .L52+8
 517 00a4 40F20622 		movw	r2, #518
 518 00a8 1B49     		ldr	r1, .L52+24
 519 00aa 1948     		ldr	r0, .L52+16
 520 00ac FFF7FEFF 		bl	printf
 521              	.LVL43:
 522 00b0 D6E7     		b	.L42
 523              	.LVL44:
 524              	.L51:
 525              	.LBB3:
 540:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
ARM GAS  /tmp/ccOZpyKy.s 			page 20


 526              		.loc 1 540 0
 527 00b2 D118     		adds	r1, r2, r3
 528              	.LVL45:
 529 00b4 174C     		ldr	r4, .L52+20
 530 00b6 2160     		str	r1, [r4]
 531 00b8 E5E7     		b	.L44
 532              	.LVL46:
 533              	.L43:
 534              	.LBE3:
 555:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 556:Middlewares/Third_Party/LwIP/src/core/mem.c ****     MEM_STATS_DEC_USED(used, (size - newsize));
 557:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* no need to plug holes, we've already done that */
 558:Middlewares/Third_Party/LwIP/src/core/mem.c ****   } else if (newsize + SIZEOF_STRUCT_MEM + MIN_SIZE_ALIGNED <= size) {
 535              		.loc 1 558 0
 536 00ba 04F11403 		add	r3, r4, #20
 537 00be B342     		cmp	r3, r6
 538 00c0 1AD8     		bhi	.L39
 559:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* Next struct is used but there's room for another struct mem with
 560:Middlewares/Third_Party/LwIP/src/core/mem.c ****      * at least MIN_SIZE_ALIGNED of data.
 561:Middlewares/Third_Party/LwIP/src/core/mem.c ****      * Old size ('size') must be big enough to contain at least 'newsize' plus a struct mem
 562:Middlewares/Third_Party/LwIP/src/core/mem.c ****      * ('SIZEOF_STRUCT_MEM') with some data ('MIN_SIZE_ALIGNED').
 563:Middlewares/Third_Party/LwIP/src/core/mem.c ****      * @todo we could leave out MIN_SIZE_ALIGNED. We would create an empty
 564:Middlewares/Third_Party/LwIP/src/core/mem.c ****      *       region that couldn't hold data, but when mem->next gets freed,
 565:Middlewares/Third_Party/LwIP/src/core/mem.c ****      *       the 2 regions would be combined, resulting in more free memory */
 566:Middlewares/Third_Party/LwIP/src/core/mem.c ****     ptr2 = ptr + SIZEOF_STRUCT_MEM + newsize;
 539              		.loc 1 566 0
 540 00c2 E319     		adds	r3, r4, r7
 541 00c4 9BB2     		uxth	r3, r3
 542 00c6 0833     		adds	r3, r3, #8
 543 00c8 9BB2     		uxth	r3, r3
 544              	.LVL47:
 567:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem2 = (struct mem *)(void *)&ram[ptr2];
 545              		.loc 1 567 0
 546 00ca D118     		adds	r1, r2, r3
 547              	.LVL48:
 568:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (mem2 < lfree) {
 548              		.loc 1 568 0
 549 00cc 1148     		ldr	r0, .L52+20
 550 00ce 0068     		ldr	r0, [r0]
 551 00d0 8142     		cmp	r1, r0
 552 00d2 01D2     		bcs	.L45
 569:Middlewares/Third_Party/LwIP/src/core/mem.c ****       lfree = mem2;
 553              		.loc 1 569 0
 554 00d4 0F48     		ldr	r0, .L52+20
 555 00d6 0160     		str	r1, [r0]
 556              	.L45:
 570:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 571:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem2->used = 0;
 557              		.loc 1 571 0
 558 00d8 0020     		movs	r0, #0
 559 00da 0871     		strb	r0, [r1, #4]
 572:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem2->next = mem->next;
 560              		.loc 1 572 0
 561 00dc 35F8080C 		ldrh	r0, [r5, #-8]
 562 00e0 D052     		strh	r0, [r2, r3]	@ movhi
 573:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem2->prev = ptr;
 563              		.loc 1 573 0
ARM GAS  /tmp/ccOZpyKy.s 			page 21


 564 00e2 4F80     		strh	r7, [r1, #2]	@ movhi
 574:Middlewares/Third_Party/LwIP/src/core/mem.c ****     mem->next = ptr2;
 565              		.loc 1 574 0
 566 00e4 25F8083C 		strh	r3, [r5, #-8]	@ movhi
 575:Middlewares/Third_Party/LwIP/src/core/mem.c ****     if (mem2->next != MEM_SIZE_ALIGNED) {
 567              		.loc 1 575 0
 568 00e8 D15A     		ldrh	r1, [r2, r3]
 569              	.LVL49:
 570 00ea B1F5C86F 		cmp	r1, #1600
 571 00ee 03D0     		beq	.L39
 576:Middlewares/Third_Party/LwIP/src/core/mem.c ****       ((struct mem *)(void *)&ram[mem2->next])->prev = ptr2;
 572              		.loc 1 576 0
 573 00f0 0A44     		add	r2, r2, r1
 574              	.LVL50:
 575 00f2 5380     		strh	r3, [r2, #2]	@ movhi
 576 00f4 00E0     		b	.L39
 577              	.LVL51:
 578              	.L47:
 496:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 579              		.loc 1 496 0
 580 00f6 0025     		movs	r5, #0
 581              	.LVL52:
 582              	.L39:
 577:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 578:Middlewares/Third_Party/LwIP/src/core/mem.c ****     MEM_STATS_DEC_USED(used, (size - newsize));
 579:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* the original mem->next is used, so no need to plug holes! */
 580:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 581:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* else {
 582:Middlewares/Third_Party/LwIP/src/core/mem.c ****     next struct mem is used but size between mem and mem2 is not big enough
 583:Middlewares/Third_Party/LwIP/src/core/mem.c ****     to create another struct mem
 584:Middlewares/Third_Party/LwIP/src/core/mem.c ****     -> don't do anyhting.
 585:Middlewares/Third_Party/LwIP/src/core/mem.c ****     -> the remaining space stays unused since it is too small
 586:Middlewares/Third_Party/LwIP/src/core/mem.c ****   } */
 587:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 588:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_free_count = 1;
 589:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 590:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_FREE_UNPROTECT();
 591:Middlewares/Third_Party/LwIP/src/core/mem.c ****   return rmem;
 592:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 583              		.loc 1 592 0
 584 00f8 2846     		mov	r0, r5
 585 00fa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 586              	.LVL53:
 587              	.L48:
 521:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 588              		.loc 1 521 0
 589 00fc 0025     		movs	r5, #0
 590              	.LVL54:
 591 00fe FBE7     		b	.L39
 592              	.L53:
 593              		.align	2
 594              	.L52:
 595 0100 00000000 		.word	.LANCHOR0
 596 0104 00000000 		.word	.LANCHOR1
 597 0108 00000000 		.word	.LC0
 598 010c 00000000 		.word	.LC9
 599 0110 44000000 		.word	.LC2
ARM GAS  /tmp/ccOZpyKy.s 			page 22


 600 0114 00000000 		.word	.LANCHOR2
 601 0118 18000000 		.word	.LC10
 602              		.cfi_endproc
 603              	.LFE161:
 605              		.section	.text.mem_malloc,"ax",%progbits
 606              		.align	1
 607              		.global	mem_malloc
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 611              		.fpu fpv5-d16
 613              	mem_malloc:
 614              	.LFB162:
 593:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 594:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 595:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Allocate a block of memory with a minimum of 'size' bytes.
 596:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 597:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param size is the minimum size of the requested block in bytes.
 598:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @return pointer to allocated memory or NULL if no free memory was found.
 599:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 600:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Note that the returned value will always be aligned (as defined by MEM_ALIGNMENT).
 601:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 602:Middlewares/Third_Party/LwIP/src/core/mem.c **** void *
 603:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_malloc(mem_size_t size)
 604:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 615              		.loc 1 604 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              	.LVL55:
 605:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_size_t ptr, ptr2;
 606:Middlewares/Third_Party/LwIP/src/core/mem.c ****   struct mem *mem, *mem2;
 607:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 608:Middlewares/Third_Party/LwIP/src/core/mem.c ****   u8_t local_mem_free_count = 0;
 609:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 610:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_ALLOC_DECL_PROTECT();
 611:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 612:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (size == 0) {
 620              		.loc 1 612 0
 621 0000 0028     		cmp	r0, #0
 622 0002 00F08480 		beq	.L69
 623 0006 0246     		mov	r2, r0
 613:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return NULL;
 614:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 615:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 616:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* Expand the size of the allocated memory region so that we can
 617:Middlewares/Third_Party/LwIP/src/core/mem.c ****      adjust for alignment. */
 618:Middlewares/Third_Party/LwIP/src/core/mem.c ****   size = LWIP_MEM_ALIGN_SIZE(size);
 624              		.loc 1 618 0
 625 0008 0332     		adds	r2, r2, #3
 626 000a 92B2     		uxth	r2, r2
 627 000c 22F00302 		bic	r2, r2, #3
 628 0010 92B2     		uxth	r2, r2
 629              	.LVL56:
 619:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 620:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (size < MIN_SIZE_ALIGNED) {
 630              		.loc 1 620 0
ARM GAS  /tmp/ccOZpyKy.s 			page 23


 631 0012 0B2A     		cmp	r2, #11
 632 0014 00D8     		bhi	.L56
 621:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* every data block must be at least MIN_SIZE_ALIGNED long */
 622:Middlewares/Third_Party/LwIP/src/core/mem.c ****     size = MIN_SIZE_ALIGNED;
 633              		.loc 1 622 0
 634 0016 0C22     		movs	r2, #12
 635              	.LVL57:
 636              	.L56:
 623:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 624:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 625:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (size > MEM_SIZE_ALIGNED) {
 637              		.loc 1 625 0
 638 0018 B2F5C86F 		cmp	r2, #1600
 639 001c 79D8     		bhi	.L71
 604:Middlewares/Third_Party/LwIP/src/core/mem.c ****   mem_size_t ptr, ptr2;
 640              		.loc 1 604 0
 641 001e F8B5     		push	{r3, r4, r5, r6, r7, lr}
 642              	.LCFI4:
 643              		.cfi_def_cfa_offset 24
 644              		.cfi_offset 3, -24
 645              		.cfi_offset 4, -20
 646              		.cfi_offset 5, -16
 647              		.cfi_offset 6, -12
 648              		.cfi_offset 7, -8
 649              		.cfi_offset 14, -4
 626:Middlewares/Third_Party/LwIP/src/core/mem.c ****     return NULL;
 627:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 628:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 629:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* protect the heap from concurrent access */
 630:Middlewares/Third_Party/LwIP/src/core/mem.c ****   sys_mutex_lock(&mem_mutex);
 631:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_ALLOC_PROTECT();
 632:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 633:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* run as long as a mem_free disturbed mem_malloc or mem_trim */
 634:Middlewares/Third_Party/LwIP/src/core/mem.c ****   do {
 635:Middlewares/Third_Party/LwIP/src/core/mem.c ****     local_mem_free_count = 0;
 636:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 637:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 638:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* Scan through the heap searching for a free block that is big enough,
 639:Middlewares/Third_Party/LwIP/src/core/mem.c ****      * beginning with the lowest free block.
 640:Middlewares/Third_Party/LwIP/src/core/mem.c ****      */
 641:Middlewares/Third_Party/LwIP/src/core/mem.c ****     for (ptr = (mem_size_t)((u8_t *)lfree - ram); ptr < MEM_SIZE_ALIGNED - size;
 650              		.loc 1 641 0
 651 0020 3D4B     		ldr	r3, .L80
 652 0022 1E68     		ldr	r6, [r3]
 653 0024 3D4B     		ldr	r3, .L80+4
 654 0026 1B68     		ldr	r3, [r3]
 655 0028 9B1B     		subs	r3, r3, r6
 656 002a 9BB2     		uxth	r3, r3
 657              	.LVL58:
 658 002c 46E0     		b	.L57
 659              	.LVL59:
 660              	.L59:
 642:Middlewares/Third_Party/LwIP/src/core/mem.c ****          ptr = ((struct mem *)(void *)&ram[ptr])->next) {
 643:Middlewares/Third_Party/LwIP/src/core/mem.c ****       mem = (struct mem *)(void *)&ram[ptr];
 644:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 645:Middlewares/Third_Party/LwIP/src/core/mem.c ****       mem_free_count = 0;
 646:Middlewares/Third_Party/LwIP/src/core/mem.c ****       LWIP_MEM_ALLOC_UNPROTECT();
ARM GAS  /tmp/ccOZpyKy.s 			page 24


 647:Middlewares/Third_Party/LwIP/src/core/mem.c ****       /* allow mem_free or mem_trim to run */
 648:Middlewares/Third_Party/LwIP/src/core/mem.c ****       LWIP_MEM_ALLOC_PROTECT();
 649:Middlewares/Third_Party/LwIP/src/core/mem.c ****       if (mem_free_count != 0) {
 650:Middlewares/Third_Party/LwIP/src/core/mem.c ****         /* If mem_free or mem_trim have run, we have to restart since they
 651:Middlewares/Third_Party/LwIP/src/core/mem.c ****            could have altered our current struct mem. */
 652:Middlewares/Third_Party/LwIP/src/core/mem.c ****         local_mem_free_count = 1;
 653:Middlewares/Third_Party/LwIP/src/core/mem.c ****         break;
 654:Middlewares/Third_Party/LwIP/src/core/mem.c ****       }
 655:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 656:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 657:Middlewares/Third_Party/LwIP/src/core/mem.c ****       if ((!mem->used) &&
 658:Middlewares/Third_Party/LwIP/src/core/mem.c ****           (mem->next - (ptr + SIZEOF_STRUCT_MEM)) >= size) {
 659:Middlewares/Third_Party/LwIP/src/core/mem.c ****         /* mem is not used and at least perfect fit is possible:
 660:Middlewares/Third_Party/LwIP/src/core/mem.c ****          * mem->next - (ptr + SIZEOF_STRUCT_MEM) gives us the 'user data size' of mem */
 661:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 662:Middlewares/Third_Party/LwIP/src/core/mem.c ****         if (mem->next - (ptr + SIZEOF_STRUCT_MEM) >= (size + SIZEOF_STRUCT_MEM + MIN_SIZE_ALIGNED))
 663:Middlewares/Third_Party/LwIP/src/core/mem.c ****           /* (in addition to the above, we test if another struct mem (SIZEOF_STRUCT_MEM) containin
 664:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * at least MIN_SIZE_ALIGNED of data also fits in the 'user data space' of 'mem')
 665:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * -> split large block, create empty remainder,
 666:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * remainder must be large enough to contain MIN_SIZE_ALIGNED data: if
 667:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * mem->next - (ptr + (2*SIZEOF_STRUCT_MEM)) == size,
 668:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * struct mem would fit in but no data between mem2 and mem2->next
 669:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * @todo we could leave out MIN_SIZE_ALIGNED. We would create an empty
 670:Middlewares/Third_Party/LwIP/src/core/mem.c ****            *       region that couldn't hold data, but when mem->next gets freed,
 671:Middlewares/Third_Party/LwIP/src/core/mem.c ****            *       the 2 regions would be combined, resulting in more free memory
 672:Middlewares/Third_Party/LwIP/src/core/mem.c ****            */
 673:Middlewares/Third_Party/LwIP/src/core/mem.c ****           ptr2 = ptr + SIZEOF_STRUCT_MEM + size;
 674:Middlewares/Third_Party/LwIP/src/core/mem.c ****           /* create mem2 struct */
 675:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem2 = (struct mem *)(void *)&ram[ptr2];
 676:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem2->used = 0;
 677:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem2->next = mem->next;
 678:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem2->prev = ptr;
 679:Middlewares/Third_Party/LwIP/src/core/mem.c ****           /* and insert it between mem and mem->next */
 680:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem->next = ptr2;
 681:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem->used = 1;
 682:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 683:Middlewares/Third_Party/LwIP/src/core/mem.c ****           if (mem2->next != MEM_SIZE_ALIGNED) {
 684:Middlewares/Third_Party/LwIP/src/core/mem.c ****             ((struct mem *)(void *)&ram[mem2->next])->prev = ptr2;
 685:Middlewares/Third_Party/LwIP/src/core/mem.c ****           }
 686:Middlewares/Third_Party/LwIP/src/core/mem.c ****           MEM_STATS_INC_USED(used, (size + SIZEOF_STRUCT_MEM));
 687:Middlewares/Third_Party/LwIP/src/core/mem.c ****         } else {
 688:Middlewares/Third_Party/LwIP/src/core/mem.c ****           /* (a mem2 struct does no fit into the user data space of mem and mem->next will always
 689:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * be used at this point: if not we have 2 unused structs in a row, plug_holes should hav
 690:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * take care of this).
 691:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * -> near fit or exact fit: do not split, no mem2 creation
 692:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * also can't move mem->next directly behind mem, since mem->next
 693:Middlewares/Third_Party/LwIP/src/core/mem.c ****            * will always be used at this point!
 694:Middlewares/Third_Party/LwIP/src/core/mem.c ****            */
 695:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem->used = 1;
 661              		.loc 1 695 0
 662 002e 0123     		movs	r3, #1
 663              	.LVL60:
 664 0030 2371     		strb	r3, [r4, #4]
 665              	.LVL61:
 666              	.L60:
 696:Middlewares/Third_Party/LwIP/src/core/mem.c ****           MEM_STATS_INC_USED(used, mem->next - (mem_size_t)((u8_t *)mem - ram));
 697:Middlewares/Third_Party/LwIP/src/core/mem.c ****         }
ARM GAS  /tmp/ccOZpyKy.s 			page 25


 698:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 699:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_malloc_adjust_lfree:
 700:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 701:Middlewares/Third_Party/LwIP/src/core/mem.c ****         if (mem == lfree) {
 667              		.loc 1 701 0
 668 0032 3A4B     		ldr	r3, .L80+4
 669 0034 1B68     		ldr	r3, [r3]
 670 0036 9C42     		cmp	r4, r3
 671 0038 11D0     		beq	.L61
 672              	.L62:
 702:Middlewares/Third_Party/LwIP/src/core/mem.c ****           struct mem *cur = lfree;
 703:Middlewares/Third_Party/LwIP/src/core/mem.c ****           /* Find next free block after mem and update lowest free pointer */
 704:Middlewares/Third_Party/LwIP/src/core/mem.c ****           while (cur->used && cur != ram_end) {
 705:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 706:Middlewares/Third_Party/LwIP/src/core/mem.c ****             mem_free_count = 0;
 707:Middlewares/Third_Party/LwIP/src/core/mem.c ****             LWIP_MEM_ALLOC_UNPROTECT();
 708:Middlewares/Third_Party/LwIP/src/core/mem.c ****             /* prevent high interrupt latency... */
 709:Middlewares/Third_Party/LwIP/src/core/mem.c ****             LWIP_MEM_ALLOC_PROTECT();
 710:Middlewares/Third_Party/LwIP/src/core/mem.c ****             if (mem_free_count != 0) {
 711:Middlewares/Third_Party/LwIP/src/core/mem.c ****               /* If mem_free or mem_trim have run, we have to restart since they
 712:Middlewares/Third_Party/LwIP/src/core/mem.c ****                  could have altered our current struct mem or lfree. */
 713:Middlewares/Third_Party/LwIP/src/core/mem.c ****               goto mem_malloc_adjust_lfree;
 714:Middlewares/Third_Party/LwIP/src/core/mem.c ****             }
 715:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 716:Middlewares/Third_Party/LwIP/src/core/mem.c ****             cur = (struct mem *)(void *)&ram[cur->next];
 717:Middlewares/Third_Party/LwIP/src/core/mem.c ****           }
 718:Middlewares/Third_Party/LwIP/src/core/mem.c ****           lfree = cur;
 719:Middlewares/Third_Party/LwIP/src/core/mem.c ****           LWIP_ASSERT("mem_malloc: !lfree->used", ((lfree == ram_end) || (!lfree->used)));
 720:Middlewares/Third_Party/LwIP/src/core/mem.c ****         }
 721:Middlewares/Third_Party/LwIP/src/core/mem.c ****         LWIP_MEM_ALLOC_UNPROTECT();
 722:Middlewares/Third_Party/LwIP/src/core/mem.c ****         sys_mutex_unlock(&mem_mutex);
 723:Middlewares/Third_Party/LwIP/src/core/mem.c ****         LWIP_ASSERT("mem_malloc: allocated memory not above ram_end.",
 673              		.loc 1 723 0
 674 003a 2544     		add	r5, r5, r4
 675 003c 0835     		adds	r5, r5, #8
 676 003e 384B     		ldr	r3, .L80+8
 677 0040 1B68     		ldr	r3, [r3]
 678 0042 9D42     		cmp	r5, r3
 679 0044 21D8     		bhi	.L76
 680              	.L65:
 724:Middlewares/Third_Party/LwIP/src/core/mem.c ****          (mem_ptr_t)mem + SIZEOF_STRUCT_MEM + size <= (mem_ptr_t)ram_end);
 725:Middlewares/Third_Party/LwIP/src/core/mem.c ****         LWIP_ASSERT("mem_malloc: allocated memory properly aligned.",
 681              		.loc 1 725 0
 682 0046 14F00305 		ands	r5, r4, #3
 683 004a 26D1     		bne	.L77
 684              	.L66:
 726:Middlewares/Third_Party/LwIP/src/core/mem.c ****          ((mem_ptr_t)mem + SIZEOF_STRUCT_MEM) % MEM_ALIGNMENT == 0);
 727:Middlewares/Third_Party/LwIP/src/core/mem.c ****         LWIP_ASSERT("mem_malloc: sanity check alignment",
 685              		.loc 1 727 0
 686 004c 002D     		cmp	r5, #0
 687 004e 2CD1     		bne	.L78
 688              	.L67:
 728:Middlewares/Third_Party/LwIP/src/core/mem.c ****           (((mem_ptr_t)mem) & (MEM_ALIGNMENT-1)) == 0);
 729:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 730:Middlewares/Third_Party/LwIP/src/core/mem.c ****         return (u8_t *)mem + SIZEOF_STRUCT_MEM;
 689              		.loc 1 730 0
 690 0050 04F10800 		add	r0, r4, #8
ARM GAS  /tmp/ccOZpyKy.s 			page 26


 691 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 692              	.LVL62:
 693              	.L64:
 694              	.LBB4:
 716:Middlewares/Third_Party/LwIP/src/core/mem.c ****           }
 695              		.loc 1 716 0
 696 0056 304A     		ldr	r2, .L80
 697 0058 1268     		ldr	r2, [r2]
 698 005a 1B88     		ldrh	r3, [r3]
 699              	.LVL63:
 700 005c 1344     		add	r3, r3, r2
 701              	.LVL64:
 702              	.L61:
 704:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 703              		.loc 1 704 0
 704 005e 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 705 0060 1AB1     		cbz	r2, .L63
 704:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 706              		.loc 1 704 0 is_stmt 0 discriminator 1
 707 0062 2F49     		ldr	r1, .L80+8
 708 0064 0968     		ldr	r1, [r1]
 709 0066 8B42     		cmp	r3, r1
 710 0068 F5D1     		bne	.L64
 711              	.L63:
 718:Middlewares/Third_Party/LwIP/src/core/mem.c ****           LWIP_ASSERT("mem_malloc: !lfree->used", ((lfree == ram_end) || (!lfree->used)));
 712              		.loc 1 718 0 is_stmt 1
 713 006a 2C49     		ldr	r1, .L80+4
 714 006c 0B60     		str	r3, [r1]
 719:Middlewares/Third_Party/LwIP/src/core/mem.c ****         }
 715              		.loc 1 719 0
 716 006e 2C49     		ldr	r1, .L80+8
 717 0070 0968     		ldr	r1, [r1]
 718 0072 8B42     		cmp	r3, r1
 719 0074 E1D0     		beq	.L62
 719:Middlewares/Third_Party/LwIP/src/core/mem.c ****         }
 720              		.loc 1 719 0 is_stmt 0 discriminator 1
 721 0076 002A     		cmp	r2, #0
 722 0078 DFD0     		beq	.L62
 719:Middlewares/Third_Party/LwIP/src/core/mem.c ****         }
 723              		.loc 1 719 0 discriminator 2
 724 007a 2A4B     		ldr	r3, .L80+12
 725              	.LVL65:
 726 007c 40F2CF22 		movw	r2, #719
 727 0080 2949     		ldr	r1, .L80+16
 728 0082 2A48     		ldr	r0, .L80+20
 729 0084 FFF7FEFF 		bl	printf
 730              	.LVL66:
 731 0088 D7E7     		b	.L62
 732              	.L76:
 733              	.LBE4:
 723:Middlewares/Third_Party/LwIP/src/core/mem.c ****          (mem_ptr_t)mem + SIZEOF_STRUCT_MEM + size <= (mem_ptr_t)ram_end);
 734              		.loc 1 723 0 is_stmt 1 discriminator 1
 735 008a 264B     		ldr	r3, .L80+12
 736 008c 4FF43572 		mov	r2, #724
 737 0090 2749     		ldr	r1, .L80+24
 738 0092 2648     		ldr	r0, .L80+20
 739 0094 FFF7FEFF 		bl	printf
ARM GAS  /tmp/ccOZpyKy.s 			page 27


 740              	.LVL67:
 741 0098 D5E7     		b	.L65
 742              	.L77:
 725:Middlewares/Third_Party/LwIP/src/core/mem.c ****          ((mem_ptr_t)mem + SIZEOF_STRUCT_MEM) % MEM_ALIGNMENT == 0);
 743              		.loc 1 725 0 discriminator 1
 744 009a 224B     		ldr	r3, .L80+12
 745 009c 40F2D622 		movw	r2, #726
 746 00a0 2449     		ldr	r1, .L80+28
 747 00a2 2248     		ldr	r0, .L80+20
 748 00a4 FFF7FEFF 		bl	printf
 749              	.LVL68:
 750 00a8 D0E7     		b	.L66
 751              	.L78:
 727:Middlewares/Third_Party/LwIP/src/core/mem.c ****           (((mem_ptr_t)mem) & (MEM_ALIGNMENT-1)) == 0);
 752              		.loc 1 727 0 discriminator 1
 753 00aa 1E4B     		ldr	r3, .L80+12
 754 00ac 4FF43672 		mov	r2, #728
 755 00b0 2149     		ldr	r1, .L80+32
 756 00b2 1E48     		ldr	r0, .L80+20
 757 00b4 FFF7FEFF 		bl	printf
 758              	.LVL69:
 759 00b8 CAE7     		b	.L67
 760              	.LVL70:
 761              	.L58:
 642:Middlewares/Third_Party/LwIP/src/core/mem.c ****       mem = (struct mem *)(void *)&ram[ptr];
 762              		.loc 1 642 0
 763 00ba 2388     		ldrh	r3, [r4]
 764              	.LVL71:
 765              	.L57:
 641:Middlewares/Third_Party/LwIP/src/core/mem.c ****          ptr = ((struct mem *)(void *)&ram[ptr])->next) {
 766              		.loc 1 641 0 discriminator 1
 767 00bc 1F46     		mov	r7, r3
 768 00be 1546     		mov	r5, r2
 769 00c0 C2F5C860 		rsb	r0, r2, #1600
 770 00c4 8342     		cmp	r3, r0
 771 00c6 20D2     		bcs	.L79
 643:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 772              		.loc 1 643 0
 773 00c8 F418     		adds	r4, r6, r3
 774              	.LVL72:
 657:Middlewares/Third_Party/LwIP/src/core/mem.c ****           (mem->next - (ptr + SIZEOF_STRUCT_MEM)) >= size) {
 775              		.loc 1 657 0
 776 00ca 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 777 00cc 0028     		cmp	r0, #0
 778 00ce F4D1     		bne	.L58
 658:Middlewares/Third_Party/LwIP/src/core/mem.c ****         /* mem is not used and at least perfect fit is possible:
 779              		.loc 1 658 0 discriminator 1
 780 00d0 F15A     		ldrh	r1, [r6, r3]
 781 00d2 C91B     		subs	r1, r1, r7
 782 00d4 0839     		subs	r1, r1, #8
 657:Middlewares/Third_Party/LwIP/src/core/mem.c ****           (mem->next - (ptr + SIZEOF_STRUCT_MEM)) >= size) {
 783              		.loc 1 657 0 discriminator 1
 784 00d6 8D42     		cmp	r5, r1
 785 00d8 EFD8     		bhi	.L58
 662:Middlewares/Third_Party/LwIP/src/core/mem.c ****           /* (in addition to the above, we test if another struct mem (SIZEOF_STRUCT_MEM) containin
 786              		.loc 1 662 0
 787 00da 05F11400 		add	r0, r5, #20
ARM GAS  /tmp/ccOZpyKy.s 			page 28


 788 00de 8142     		cmp	r1, r0
 789 00e0 A5D3     		bcc	.L59
 673:Middlewares/Third_Party/LwIP/src/core/mem.c ****           /* create mem2 struct */
 790              		.loc 1 673 0
 791 00e2 1A44     		add	r2, r2, r3
 792              	.LVL73:
 793 00e4 92B2     		uxth	r2, r2
 794 00e6 0832     		adds	r2, r2, #8
 795 00e8 92B2     		uxth	r2, r2
 796              	.LVL74:
 675:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem2->used = 0;
 797              		.loc 1 675 0
 798 00ea B118     		adds	r1, r6, r2
 799              	.LVL75:
 676:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem2->next = mem->next;
 800              		.loc 1 676 0
 801 00ec 0020     		movs	r0, #0
 802 00ee 0871     		strb	r0, [r1, #4]
 677:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem2->prev = ptr;
 803              		.loc 1 677 0
 804 00f0 2088     		ldrh	r0, [r4]
 805 00f2 B052     		strh	r0, [r6, r2]	@ movhi
 678:Middlewares/Third_Party/LwIP/src/core/mem.c ****           /* and insert it between mem and mem->next */
 806              		.loc 1 678 0
 807 00f4 4B80     		strh	r3, [r1, #2]	@ movhi
 680:Middlewares/Third_Party/LwIP/src/core/mem.c ****           mem->used = 1;
 808              		.loc 1 680 0
 809 00f6 2280     		strh	r2, [r4]	@ movhi
 681:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 810              		.loc 1 681 0
 811 00f8 0123     		movs	r3, #1
 812              	.LVL76:
 813 00fa 2371     		strb	r3, [r4, #4]
 683:Middlewares/Third_Party/LwIP/src/core/mem.c ****             ((struct mem *)(void *)&ram[mem2->next])->prev = ptr2;
 814              		.loc 1 683 0
 815 00fc B35A     		ldrh	r3, [r6, r2]
 816 00fe B3F5C86F 		cmp	r3, #1600
 817 0102 96D0     		beq	.L60
 684:Middlewares/Third_Party/LwIP/src/core/mem.c ****           }
 818              		.loc 1 684 0
 819 0104 1E44     		add	r6, r6, r3
 820 0106 7280     		strh	r2, [r6, #2]	@ movhi
 821 0108 93E7     		b	.L60
 822              	.LVL77:
 823              	.L79:
 731:Middlewares/Third_Party/LwIP/src/core/mem.c ****       }
 732:Middlewares/Third_Party/LwIP/src/core/mem.c ****     }
 733:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT
 734:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* if we got interrupted by a mem_free, try again */
 735:Middlewares/Third_Party/LwIP/src/core/mem.c ****   } while (local_mem_free_count != 0);
 736:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT */
 737:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_DEBUGF(MEM_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("mem_malloc: could not allocate %"S16_F" bytes\n
 738:Middlewares/Third_Party/LwIP/src/core/mem.c ****   MEM_STATS_INC(err);
 739:Middlewares/Third_Party/LwIP/src/core/mem.c ****   LWIP_MEM_ALLOC_UNPROTECT();
 740:Middlewares/Third_Party/LwIP/src/core/mem.c ****   sys_mutex_unlock(&mem_mutex);
 741:Middlewares/Third_Party/LwIP/src/core/mem.c ****   return NULL;
 824              		.loc 1 741 0
ARM GAS  /tmp/ccOZpyKy.s 			page 29


 825 010a 0020     		movs	r0, #0
 826 010c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 827              	.LVL78:
 828              	.L69:
 829              	.LCFI5:
 830              		.cfi_def_cfa_offset 0
 831              		.cfi_restore 3
 832              		.cfi_restore 4
 833              		.cfi_restore 5
 834              		.cfi_restore 6
 835              		.cfi_restore 7
 836              		.cfi_restore 14
 613:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 837              		.loc 1 613 0
 838 010e 0020     		movs	r0, #0
 839              	.LVL79:
 840 0110 7047     		bx	lr
 841              	.LVL80:
 842              	.L71:
 626:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 843              		.loc 1 626 0
 844 0112 0020     		movs	r0, #0
 845 0114 7047     		bx	lr
 846              	.L81:
 847 0116 00BF     		.align	2
 848              	.L80:
 849 0118 00000000 		.word	.LANCHOR0
 850 011c 00000000 		.word	.LANCHOR2
 851 0120 00000000 		.word	.LANCHOR1
 852 0124 00000000 		.word	.LC0
 853 0128 00000000 		.word	.LC11
 854 012c 44000000 		.word	.LC2
 855 0130 1C000000 		.word	.LC12
 856 0134 4C000000 		.word	.LC13
 857 0138 7C000000 		.word	.LC14
 858              		.cfi_endproc
 859              	.LFE162:
 861              		.section	.text.mem_calloc,"ax",%progbits
 862              		.align	1
 863              		.global	mem_calloc
 864              		.syntax unified
 865              		.thumb
 866              		.thumb_func
 867              		.fpu fpv5-d16
 869              	mem_calloc:
 870              	.LFB163:
 742:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 743:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 744:Middlewares/Third_Party/LwIP/src/core/mem.c **** #endif /* MEM_USE_POOLS */
 745:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 746:Middlewares/Third_Party/LwIP/src/core/mem.c **** #if MEM_LIBC_MALLOC && (!LWIP_STATS || !MEM_STATS)
 747:Middlewares/Third_Party/LwIP/src/core/mem.c **** void *
 748:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_calloc(mem_size_t count, mem_size_t size)
 749:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 750:Middlewares/Third_Party/LwIP/src/core/mem.c ****   return mem_clib_calloc(count, size);
 751:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 752:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
ARM GAS  /tmp/ccOZpyKy.s 			page 30


 753:Middlewares/Third_Party/LwIP/src/core/mem.c **** #else /* MEM_LIBC_MALLOC && (!LWIP_STATS || !MEM_STATS) */
 754:Middlewares/Third_Party/LwIP/src/core/mem.c **** /**
 755:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * Contiguously allocates enough space for count objects that are size bytes
 756:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * of memory each and returns a pointer to the allocated memory.
 757:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 758:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * The allocated memory is filled with bytes of value zero.
 759:Middlewares/Third_Party/LwIP/src/core/mem.c ****  *
 760:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param count number of objects to allocate
 761:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @param size size of the objects to allocate
 762:Middlewares/Third_Party/LwIP/src/core/mem.c ****  * @return pointer to allocated memory / NULL pointer if there is an error
 763:Middlewares/Third_Party/LwIP/src/core/mem.c ****  */
 764:Middlewares/Third_Party/LwIP/src/core/mem.c **** void *
 765:Middlewares/Third_Party/LwIP/src/core/mem.c **** mem_calloc(mem_size_t count, mem_size_t size)
 766:Middlewares/Third_Party/LwIP/src/core/mem.c **** {
 871              		.loc 1 766 0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              	.LVL81:
 876 0000 70B5     		push	{r4, r5, r6, lr}
 877              	.LCFI6:
 878              		.cfi_def_cfa_offset 16
 879              		.cfi_offset 4, -16
 880              		.cfi_offset 5, -12
 881              		.cfi_offset 6, -8
 882              		.cfi_offset 14, -4
 883 0002 0546     		mov	r5, r0
 884 0004 0E46     		mov	r6, r1
 767:Middlewares/Third_Party/LwIP/src/core/mem.c ****   void *p;
 768:Middlewares/Third_Party/LwIP/src/core/mem.c **** 
 769:Middlewares/Third_Party/LwIP/src/core/mem.c ****   /* allocate 'count' objects of size 'size' */
 770:Middlewares/Third_Party/LwIP/src/core/mem.c ****   p = mem_malloc(count * size);
 885              		.loc 1 770 0
 886 0006 10FB01F0 		smulbb	r0, r0, r1
 887              	.LVL82:
 888 000a 80B2     		uxth	r0, r0
 889 000c FFF7FEFF 		bl	mem_malloc
 890              	.LVL83:
 771:Middlewares/Third_Party/LwIP/src/core/mem.c ****   if (p) {
 891              		.loc 1 771 0
 892 0010 0446     		mov	r4, r0
 893 0012 20B1     		cbz	r0, .L82
 772:Middlewares/Third_Party/LwIP/src/core/mem.c ****     /* zero the memory */
 773:Middlewares/Third_Party/LwIP/src/core/mem.c ****     memset(p, 0, (size_t)count * (size_t)size);
 894              		.loc 1 773 0
 895 0014 06FB05F2 		mul	r2, r6, r5
 896 0018 0021     		movs	r1, #0
 897 001a FFF7FEFF 		bl	memset
 898              	.LVL84:
 899              	.L82:
 774:Middlewares/Third_Party/LwIP/src/core/mem.c ****   }
 775:Middlewares/Third_Party/LwIP/src/core/mem.c ****   return p;
 776:Middlewares/Third_Party/LwIP/src/core/mem.c **** }
 900              		.loc 1 776 0
 901 001e 2046     		mov	r0, r4
 902 0020 70BD     		pop	{r4, r5, r6, pc}
 903              		.cfi_endproc
ARM GAS  /tmp/ccOZpyKy.s 			page 31


 904              	.LFE163:
 906              		.comm	ram_heap,1619,4
 907              		.section	.bss.lfree,"aw",%nobits
 908              		.align	2
 909              		.set	.LANCHOR2,. + 0
 912              	lfree:
 913 0000 00000000 		.space	4
 914              		.section	.bss.ram,"aw",%nobits
 915              		.align	2
 916              		.set	.LANCHOR0,. + 0
 919              	ram:
 920 0000 00000000 		.space	4
 921              		.section	.bss.ram_end,"aw",%nobits
 922              		.align	2
 923              		.set	.LANCHOR1,. + 0
 926              	ram_end:
 927 0000 00000000 		.space	4
 928              		.section	.rodata.mem_free.str1.4,"aMS",%progbits,1
 929              		.align	2
 930              	.LC6:
 931 0000 6D656D5F 		.ascii	"mem_free: sanity check alignment\000"
 931      66726565 
 931      3A207361 
 931      6E697479 
 931      20636865 
 932 0021 000000   		.space	3
 933              	.LC7:
 934 0024 6D656D5F 		.ascii	"mem_free: legal memory\000"
 934      66726565 
 934      3A206C65 
 934      67616C20 
 934      6D656D6F 
 935 003b 00       		.space	1
 936              	.LC8:
 937 003c 6D656D5F 		.ascii	"mem_free: mem->used\000"
 937      66726565 
 937      3A206D65 
 937      6D2D3E75 
 937      73656400 
 938              		.section	.rodata.mem_malloc.str1.4,"aMS",%progbits,1
 939              		.align	2
 940              	.LC11:
 941 0000 6D656D5F 		.ascii	"mem_malloc: !lfree->used\000"
 941      6D616C6C 
 941      6F633A20 
 941      216C6672 
 941      65652D3E 
 942 0019 000000   		.space	3
 943              	.LC12:
 944 001c 6D656D5F 		.ascii	"mem_malloc: allocated memory not above ram_end.\000"
 944      6D616C6C 
 944      6F633A20 
 944      616C6C6F 
 944      63617465 
 945              	.LC13:
 946 004c 6D656D5F 		.ascii	"mem_malloc: allocated memory properly aligned.\000"
 946      6D616C6C 
ARM GAS  /tmp/ccOZpyKy.s 			page 32


 946      6F633A20 
 946      616C6C6F 
 946      63617465 
 947 007b 00       		.space	1
 948              	.LC14:
 949 007c 6D656D5F 		.ascii	"mem_malloc: sanity check alignment\000"
 949      6D616C6C 
 949      6F633A20 
 949      73616E69 
 949      74792063 
 950              		.section	.rodata.mem_trim.str1.4,"aMS",%progbits,1
 951              		.align	2
 952              	.LC9:
 953 0000 6D656D5F 		.ascii	"mem_trim: legal memory\000"
 953      7472696D 
 953      3A206C65 
 953      67616C20 
 953      6D656D6F 
 954 0017 00       		.space	1
 955              	.LC10:
 956 0018 6D656D5F 		.ascii	"mem_trim can only shrink memory\000"
 956      7472696D 
 956      2063616E 
 956      206F6E6C 
 956      79207368 
 957              		.section	.rodata.plug_holes.str1.4,"aMS",%progbits,1
 958              		.align	2
 959              	.LC0:
 960 0000 4D696464 		.ascii	"Middlewares/Third_Party/LwIP/src/core/mem.c\000"
 960      6C657761 
 960      7265732F 
 960      54686972 
 960      645F5061 
 961              	.LC1:
 962 002c 706C7567 		.ascii	"plug_holes: mem >= ram\000"
 962      5F686F6C 
 962      65733A20 
 962      6D656D20 
 962      3E3D2072 
 963 0043 00       		.space	1
 964              	.LC2:
 965 0044 41737365 		.ascii	"Assertion \"%s\" failed at line %d in %s\012\000"
 965      7274696F 
 965      6E202225 
 965      73222066 
 965      61696C65 
 966              	.LC3:
 967 006c 706C7567 		.ascii	"plug_holes: mem < ram_end\000"
 967      5F686F6C 
 967      65733A20 
 967      6D656D20 
 967      3C207261 
 968 0086 0000     		.space	2
 969              	.LC4:
 970 0088 706C7567 		.ascii	"plug_holes: mem->used == 0\000"
 970      5F686F6C 
 970      65733A20 
ARM GAS  /tmp/ccOZpyKy.s 			page 33


 970      6D656D2D 
 970      3E757365 
 971 00a3 00       		.space	1
 972              	.LC5:
 973 00a4 706C7567 		.ascii	"plug_holes: mem->next <= MEM_SIZE_ALIGNED\000"
 973      5F686F6C 
 973      65733A20 
 973      6D656D2D 
 973      3E6E6578 
 974              		.text
 975              	.Letext0:
 976              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 977              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 978              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 979              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 980              		.file 6 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 981              		.file 7 "/usr/include/newlib/sys/lock.h"
 982              		.file 8 "/usr/include/newlib/sys/_types.h"
 983              		.file 9 "/usr/include/newlib/sys/reent.h"
 984              		.file 10 "/usr/include/newlib/math.h"
 985              		.file 11 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 986              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 987              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 988              		.file 14 "/usr/include/newlib/stdlib.h"
 989              		.file 15 "/usr/include/newlib/time.h"
 990              		.file 16 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 991              		.file 17 "Middlewares/Third_Party/LwIP/src/include/lwip/mem.h"
 992              		.file 18 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 993              		.file 19 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 994              		.file 20 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 995              		.file 21 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/ccOZpyKy.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mem.c
     /tmp/ccOZpyKy.s:17     .text.plug_holes:0000000000000000 $t
     /tmp/ccOZpyKy.s:23     .text.plug_holes:0000000000000000 plug_holes
     /tmp/ccOZpyKy.s:174    .text.plug_holes:00000000000000bc $d
     /tmp/ccOZpyKy.s:187    .text.mem_init:0000000000000000 $t
     /tmp/ccOZpyKy.s:194    .text.mem_init:0000000000000000 mem_init
     /tmp/ccOZpyKy.s:233    .text.mem_init:000000000000002c $d
                            *COM*:0000000000000653 ram_heap
     /tmp/ccOZpyKy.s:241    .text.mem_free:0000000000000000 $t
     /tmp/ccOZpyKy.s:248    .text.mem_free:0000000000000000 mem_free
     /tmp/ccOZpyKy.s:359    .text.mem_free:0000000000000084 $d
     /tmp/ccOZpyKy.s:371    .text.mem_trim:0000000000000000 $t
     /tmp/ccOZpyKy.s:378    .text.mem_trim:0000000000000000 mem_trim
     /tmp/ccOZpyKy.s:595    .text.mem_trim:0000000000000100 $d
     /tmp/ccOZpyKy.s:606    .text.mem_malloc:0000000000000000 $t
     /tmp/ccOZpyKy.s:613    .text.mem_malloc:0000000000000000 mem_malloc
     /tmp/ccOZpyKy.s:849    .text.mem_malloc:0000000000000118 $d
     /tmp/ccOZpyKy.s:862    .text.mem_calloc:0000000000000000 $t
     /tmp/ccOZpyKy.s:869    .text.mem_calloc:0000000000000000 mem_calloc
     /tmp/ccOZpyKy.s:908    .bss.lfree:0000000000000000 $d
     /tmp/ccOZpyKy.s:912    .bss.lfree:0000000000000000 lfree
     /tmp/ccOZpyKy.s:915    .bss.ram:0000000000000000 $d
     /tmp/ccOZpyKy.s:919    .bss.ram:0000000000000000 ram
     /tmp/ccOZpyKy.s:922    .bss.ram_end:0000000000000000 $d
     /tmp/ccOZpyKy.s:926    .bss.ram_end:0000000000000000 ram_end
     /tmp/ccOZpyKy.s:929    .rodata.mem_free.str1.4:0000000000000000 $d
     /tmp/ccOZpyKy.s:939    .rodata.mem_malloc.str1.4:0000000000000000 $d
     /tmp/ccOZpyKy.s:951    .rodata.mem_trim.str1.4:0000000000000000 $d
     /tmp/ccOZpyKy.s:958    .rodata.plug_holes.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
printf
memset
