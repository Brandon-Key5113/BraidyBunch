ARM GAS  /tmp/ccWY3npq.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_rcc.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_RCC_DeInit
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	HAL_RCC_DeInit:
  25              	.LFB141:
  26              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @file    stm32h7xx_hal_rcc.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (HSI 64MHz) with Flash 0 wait state,and all peripherals are off except
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       internal SRAM, Flash, JTAG and PWR
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) There is no pre-scaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) All GPIOs are in analogue mode , except the JTAG pins which
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Configure the AHB and APB buses pre-scalers
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Configure the clock kernel source(s) for peripherals which clocks are not
ARM GAS  /tmp/ccWY3npq.s 			page 2


  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           derived from the System clock through :RCC_D1CCIPR,RCC_D2CCIP1R,RCC_D2CCIP2R
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           and RCC_D3CCIPR registers
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ==============================================================================
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       from/to registers.
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       Implemented Workaround:
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   @endverbatim
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ******************************************************************************
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @attention
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics.
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ******************************************************************************
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #include "stm32h7xx_hal.h"
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @addtogroup STM32H7xx_HAL_Driver
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC  RCC
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief RCC HAL module driver
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
ARM GAS  /tmp/ccWY3npq.s 			page 3


  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO2_CLK_ENABLE()      __HAL_RCC_GPIOC_CLK_ENABLE()
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @}
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @}
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Exported functions --------------------------------------------------------*/
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  *  @brief    Initialization and Configuration functions
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  *
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** @verbatim
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ===============================================================================
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ===============================================================================
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (HSE, HSI, LSE,CSI, LSI,HSI48, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB3, A
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****        AHB2,AHB4,APB3, APB1L, APB1H, APB2, and APB4).
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) HSI (high-speed internal), 64 MHz factory-trimmed RC used directly or through
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              the PLL as System clock source.
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) CSI is a low-power RC oscillator which can be used directly as system clock, periphera
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              clock, or PLL input.But even with frequency calibration, is less accurate than an
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              external crystal oscillator or ceramic resonator.
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              clock source.
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) HSE (high-speed external), 4 to 48 MHz crystal oscillator used directly or
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) PLL , The RCC features three independent PLLs (clocked by HSI , HSE or CSI),
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              featuring three different output clocks and able  to work either in integer or Fractio
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****            (++) A main PLL, PLL1, which is generally used to provide clocks to the CPU
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                 and to some peripherals.
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****            (++) Two dedicated PLLs, PLL2 and PLL3, which are used to generate the kernel clock for 
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccWY3npq.s 			page 4


 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) CSS (Clock security system), once enabled and if a HSE clock failure occurs
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             (HSE used directly or through PLL as System clock source), the System clock
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              is automatically switched to HSI and an interrupt is generated if enabled.
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              The interrupt is linked to the Cortex-M NMI (Non-Mask-able Interrupt)
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              exception vector.
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) MCO1 (micro controller clock output), used to output HSI, LSE, HSE, PLL1(PLL1_Q)
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              or HSI48 clock (through a configurable pre-scaler) on PA8 pin.
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) MCO2 (micro controller clock output), used to output HSE, PLL2(PLL2_P), SYSCLK,
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              LSI, CSI, or PLL1(PLL1_P) clock (through a configurable pre-scaler) on PC9 pin.
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): CSI,HSI,
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              HSE and PLL.
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System core clock through configurable
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              pre-scaler and used to clock the CPU, memory and peripherals mapped
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              on AHB and APB bus of the 3 Domains (D1, D2, D3) through configurable pre-scalers
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              and used to clock the peripherals mapped on these buses. You can use
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve system clock frequency.
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          -@- All the peripheral clocks are derived from the System clock (SYSCLK) except those
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              with dual clock domain where kernel source clock could be selected through
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              RCC_D1CCIPR,RCC_D2CCIP1R,RCC_D2CCIP2R and RCC_D3CCIPR registers.
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** @endverbatim
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - HSE, PLL1, PLL2 and PLL3 OFF
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - AHB, APB Bus pre-scaler set to 1.
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - All interrupts disabled
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - Peripheral clocks
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval HAL status
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
  27              		.loc 1 189 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 38B5     		push	{r3, r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 3, -16
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t tickstart;
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
ARM GAS  /tmp/ccWY3npq.s 			page 5


 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  38              		.loc 1 193 0
  39 0002 FFF7FEFF 		bl	HAL_GetTick
  40              	.LVL0:
  41 0006 0446     		mov	r4, r0
  42              	.LVL1:
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Set HSION bit */
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
  43              		.loc 1 196 0
  44 0008 514A     		ldr	r2, .L30
  45 000a 1368     		ldr	r3, [r2]
  46 000c 43F00103 		orr	r3, r3, #1
  47 0010 1360     		str	r3, [r2]
  48              	.LVL2:
  49              	.L2:
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till HSI is ready */
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
  50              		.loc 1 199 0
  51 0012 4F4B     		ldr	r3, .L30
  52 0014 1B68     		ldr	r3, [r3]
  53 0016 13F0040F 		tst	r3, #4
  54 001a 07D1     		bne	.L23
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  55              		.loc 1 201 0
  56 001c FFF7FEFF 		bl	HAL_GetTick
  57              	.LVL3:
  58 0020 001B     		subs	r0, r0, r4
  59 0022 0228     		cmp	r0, #2
  60 0024 F5D9     		bls	.L2
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
  61              		.loc 1 203 0
  62 0026 0324     		movs	r4, #3
  63              	.LVL4:
  64              	.L3:
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Set HSITRIM[6:0] bits to the reset value */
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SET_BIT(RCC->HSICFGR, RCC_HSICFGR_HSITRIM_6);
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset CFGR register */
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Adapt Systick interrupt period */
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(HAL_InitTick(uwTickPrio) != HAL_OK)
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     return HAL_ERROR;
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
ARM GAS  /tmp/ccWY3npq.s 			page 6


 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till clock switch is ready */
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != 0U)
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset CSION, CSIKERON, HSEON, HSI48ON, HSECSSON, HSIDIV bits */
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSIKERON| RCC_CR_HSIDIV| RCC_CR_HSIDIVF| RCC_CR_CSION | 
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   | RCC_CR_HSI48ON | RCC_CR_CSSHSEON);
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till HSE is disabled */
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Clear PLLON bit */
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL1ON);
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till PLL is disabled */
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL2ON bit */
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL2ON);
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till PLL2 is disabled */
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL2RDY) != 0U)
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccWY3npq.s 			page 7


 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL3 bit */
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL3ON);
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till PLL3 is disabled */
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL3RDY) != 0U)
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset D1CFGR register */
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->D1CFGR);
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset D2CFGR register */
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->D2CFGR);
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset D3CFGR register */
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->D3CFGR);
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLLCKSELR register to default value */
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC->PLLCKSELR= RCC_PLLCKSELR_DIVM1_5|RCC_PLLCKSELR_DIVM2_5|RCC_PLLCKSELR_DIVM3_5;
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLLCFGR register to default value */
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->PLLCFGR, 0x01FF0000U);
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL1DIVR register to default value */
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->PLL1DIVR,0x01010280U);
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL1FRACR register */
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->PLL1FRACR);
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL2DIVR register to default value */
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->PLL2DIVR,0x01010280U);
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL2FRACR register */
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->PLL2FRACR);
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL3DIVR register to default value */
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->PLL3DIVR,0x01010280U);
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL3FRACR register */
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->PLL3FRACR);
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Disable all interrupts */
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->CIER);
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Clear all interrupts flags */
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->CICR,0xFFFFFFFFU);
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccWY3npq.s 			page 8


 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset all RSR flags */
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SET_BIT(RCC->RSR, RCC_RSR_RMVF);
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return HAL_OK;
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
  65              		.loc 1 341 0
  66 0028 2046     		mov	r0, r4
  67 002a 38BD     		pop	{r3, r4, r5, pc}
  68              	.LVL5:
  69              	.L23:
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  70              		.loc 1 208 0
  71 002c 484B     		ldr	r3, .L30
  72 002e 5A68     		ldr	r2, [r3, #4]
  73 0030 42F08042 		orr	r2, r2, #1073741824
  74 0034 5A60     		str	r2, [r3, #4]
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  75              		.loc 1 211 0
  76 0036 0022     		movs	r2, #0
  77 0038 1A61     		str	r2, [r3, #16]
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  78              		.loc 1 214 0
  79 003a 464A     		ldr	r2, .L30+4
  80 003c 464B     		ldr	r3, .L30+8
  81 003e 1A60     		str	r2, [r3]
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
  82              		.loc 1 217 0
  83 0040 464B     		ldr	r3, .L30+12
  84 0042 1868     		ldr	r0, [r3]
  85 0044 FFF7FEFF 		bl	HAL_InitTick
  86              	.LVL6:
  87 0048 0446     		mov	r4, r0
  88              	.LVL7:
  89 004a 08B1     		cbz	r0, .L24
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
  90              		.loc 1 219 0
  91 004c 0124     		movs	r4, #1
  92 004e EBE7     		b	.L3
  93              	.L24:
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  94              		.loc 1 223 0
  95 0050 FFF7FEFF 		bl	HAL_GetTick
  96              	.LVL8:
  97 0054 0546     		mov	r5, r0
  98              	.LVL9:
  99              	.L5:
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 100              		.loc 1 226 0
 101 0056 3E4B     		ldr	r3, .L30
 102 0058 1B69     		ldr	r3, [r3, #16]
 103 005a 13F0380F 		tst	r3, #56
 104 005e 08D0     		beq	.L25
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 105              		.loc 1 228 0
 106 0060 FFF7FEFF 		bl	HAL_GetTick
 107              	.LVL10:
 108 0064 401B     		subs	r0, r0, r5
ARM GAS  /tmp/ccWY3npq.s 			page 9


 109 0066 41F28833 		movw	r3, #5000
 110 006a 9842     		cmp	r0, r3
 111 006c F3D9     		bls	.L5
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 112              		.loc 1 230 0
 113 006e 0324     		movs	r4, #3
 114 0070 DAE7     		b	.L3
 115              	.L25:
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 116              		.loc 1 235 0
 117 0072 FFF7FEFF 		bl	HAL_GetTick
 118              	.LVL11:
 119 0076 0546     		mov	r5, r0
 120              	.LVL12:
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   | RCC_CR_HSI48ON | RCC_CR_CSSHSEON);
 121              		.loc 1 238 0
 122 0078 354A     		ldr	r2, .L30
 123 007a 1168     		ldr	r1, [r2]
 124 007c 384B     		ldr	r3, .L30+16
 125 007e 0B40     		ands	r3, r3, r1
 126 0080 1360     		str	r3, [r2]
 127              	.LVL13:
 128              	.L7:
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 129              		.loc 1 242 0
 130 0082 334B     		ldr	r3, .L30
 131 0084 1B68     		ldr	r3, [r3]
 132 0086 13F4003F 		tst	r3, #131072
 133 008a 06D0     		beq	.L26
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 134              		.loc 1 244 0
 135 008c FFF7FEFF 		bl	HAL_GetTick
 136              	.LVL14:
 137 0090 401B     		subs	r0, r0, r5
 138 0092 6428     		cmp	r0, #100
 139 0094 F5D9     		bls	.L7
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 140              		.loc 1 246 0
 141 0096 0324     		movs	r4, #3
 142 0098 C6E7     		b	.L3
 143              	.L26:
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 144              		.loc 1 251 0
 145 009a FFF7FEFF 		bl	HAL_GetTick
 146              	.LVL15:
 147 009e 0546     		mov	r5, r0
 148              	.LVL16:
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 149              		.loc 1 254 0
 150 00a0 2B4A     		ldr	r2, .L30
 151 00a2 1368     		ldr	r3, [r2]
 152 00a4 23F08073 		bic	r3, r3, #16777216
 153 00a8 1360     		str	r3, [r2]
 154              	.LVL17:
 155              	.L9:
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 156              		.loc 1 257 0
ARM GAS  /tmp/ccWY3npq.s 			page 10


 157 00aa 294B     		ldr	r3, .L30
 158 00ac 1B68     		ldr	r3, [r3]
 159 00ae 13F0007F 		tst	r3, #33554432
 160 00b2 06D0     		beq	.L27
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 161              		.loc 1 259 0
 162 00b4 FFF7FEFF 		bl	HAL_GetTick
 163              	.LVL18:
 164 00b8 401B     		subs	r0, r0, r5
 165 00ba 0228     		cmp	r0, #2
 166 00bc F5D9     		bls	.L9
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 167              		.loc 1 261 0
 168 00be 0324     		movs	r4, #3
 169 00c0 B2E7     		b	.L3
 170              	.L27:
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 171              		.loc 1 266 0
 172 00c2 FFF7FEFF 		bl	HAL_GetTick
 173              	.LVL19:
 174 00c6 0546     		mov	r5, r0
 175              	.LVL20:
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 176              		.loc 1 269 0
 177 00c8 214A     		ldr	r2, .L30
 178 00ca 1368     		ldr	r3, [r2]
 179 00cc 23F08063 		bic	r3, r3, #67108864
 180 00d0 1360     		str	r3, [r2]
 181              	.LVL21:
 182              	.L11:
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 183              		.loc 1 272 0
 184 00d2 1F4B     		ldr	r3, .L30
 185 00d4 1B68     		ldr	r3, [r3]
 186 00d6 13F0006F 		tst	r3, #134217728
 187 00da 06D0     		beq	.L28
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 188              		.loc 1 274 0
 189 00dc FFF7FEFF 		bl	HAL_GetTick
 190              	.LVL22:
 191 00e0 401B     		subs	r0, r0, r5
 192 00e2 0228     		cmp	r0, #2
 193 00e4 F5D9     		bls	.L11
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 194              		.loc 1 276 0
 195 00e6 0324     		movs	r4, #3
 196 00e8 9EE7     		b	.L3
 197              	.L28:
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 198              		.loc 1 281 0
 199 00ea FFF7FEFF 		bl	HAL_GetTick
 200              	.LVL23:
 201 00ee 0546     		mov	r5, r0
 202              	.LVL24:
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 203              		.loc 1 284 0
 204 00f0 174A     		ldr	r2, .L30
ARM GAS  /tmp/ccWY3npq.s 			page 11


 205 00f2 1368     		ldr	r3, [r2]
 206 00f4 23F08053 		bic	r3, r3, #268435456
 207 00f8 1360     		str	r3, [r2]
 208              	.LVL25:
 209              	.L13:
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 210              		.loc 1 287 0
 211 00fa 154B     		ldr	r3, .L30
 212 00fc 1B68     		ldr	r3, [r3]
 213 00fe 13F0005F 		tst	r3, #536870912
 214 0102 06D0     		beq	.L29
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 215              		.loc 1 289 0
 216 0104 FFF7FEFF 		bl	HAL_GetTick
 217              	.LVL26:
 218 0108 401B     		subs	r0, r0, r5
 219 010a 0228     		cmp	r0, #2
 220 010c F5D9     		bls	.L13
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 221              		.loc 1 291 0
 222 010e 0324     		movs	r4, #3
 223 0110 8AE7     		b	.L3
 224              	.L29:
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 225              		.loc 1 296 0
 226 0112 0F4B     		ldr	r3, .L30
 227 0114 0022     		movs	r2, #0
 228 0116 9A61     		str	r2, [r3, #24]
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 229              		.loc 1 299 0
 230 0118 DA61     		str	r2, [r3, #28]
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 231              		.loc 1 302 0
 232 011a 1A62     		str	r2, [r3, #32]
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 233              		.loc 1 305 0
 234 011c 1149     		ldr	r1, .L30+20
 235 011e 9962     		str	r1, [r3, #40]
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 236              		.loc 1 308 0
 237 0120 1149     		ldr	r1, .L30+24
 238 0122 D962     		str	r1, [r3, #44]
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 239              		.loc 1 311 0
 240 0124 1149     		ldr	r1, .L30+28
 241 0126 1963     		str	r1, [r3, #48]
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 242              		.loc 1 314 0
 243 0128 5A63     		str	r2, [r3, #52]
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 244              		.loc 1 317 0
 245 012a 9963     		str	r1, [r3, #56]
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 246              		.loc 1 320 0
 247 012c DA63     		str	r2, [r3, #60]
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 248              		.loc 1 323 0
ARM GAS  /tmp/ccWY3npq.s 			page 12


 249 012e 1964     		str	r1, [r3, #64]
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 250              		.loc 1 326 0
 251 0130 5A64     		str	r2, [r3, #68]
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 252              		.loc 1 329 0
 253 0132 1968     		ldr	r1, [r3]
 254 0134 21F48021 		bic	r1, r1, #262144
 255 0138 1960     		str	r1, [r3]
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 256              		.loc 1 332 0
 257 013a 1A66     		str	r2, [r3, #96]
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 258              		.loc 1 335 0
 259 013c 4FF0FF32 		mov	r2, #-1
 260 0140 9A66     		str	r2, [r3, #104]
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 261              		.loc 1 338 0
 262 0142 D3F8D020 		ldr	r2, [r3, #208]
 263 0146 42F48032 		orr	r2, r2, #65536
 264 014a C3F8D020 		str	r2, [r3, #208]
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 265              		.loc 1 340 0
 266 014e 6BE7     		b	.L3
 267              	.L31:
 268              		.align	2
 269              	.L30:
 270 0150 00440258 		.word	1476543488
 271 0154 0090D003 		.word	64000000
 272 0158 00000000 		.word	SystemCoreClock
 273 015c 00000000 		.word	uwTickPrio
 274 0160 45EDF6FF 		.word	-594619
 275 0164 00020202 		.word	33686016
 276 0168 0000FF01 		.word	33488896
 277 016c 80020101 		.word	16843392
 278              		.cfi_endproc
 279              	.LFE141:
 281              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 282              		.align	1
 283              		.weak	HAL_RCC_OscConfig
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu fpv5-d16
 289              	HAL_RCC_OscConfig:
 290              	.LFB142:
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_OscInitStruct: pointer to an RCC_OscInitTypeDef structure that
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         supported by this function. User should request a transition to LSE Off
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
ARM GAS  /tmp/ccWY3npq.s 			page 13


 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         supported by this function. User should request a transition to HSE Off
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval HAL status
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 291              		.loc 1 358 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              	.LVL27:
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t tickstart;
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check Null pointer */
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 296              		.loc 1 362 0
 297 0000 0028     		cmp	r0, #0
 298 0002 00F0CB82 		beq	.L101
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t tickstart;
 299              		.loc 1 358 0
 300 0006 38B5     		push	{r3, r4, r5, lr}
 301              	.LCFI1:
 302              		.cfi_def_cfa_offset 16
 303              		.cfi_offset 3, -16
 304              		.cfi_offset 4, -12
 305              		.cfi_offset 5, -8
 306              		.cfi_offset 14, -4
 307 0008 0446     		mov	r4, r0
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     return HAL_ERROR;
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check the parameters */
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 308              		.loc 1 370 0
 309 000a 0368     		ldr	r3, [r0]
 310 000c 13F0010F 		tst	r3, #1
 311 0010 36D0     		beq	.L34
 312              	.LBB2:
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 313              		.loc 1 375 0
 314 0012 A94A     		ldr	r2, .L145
 315 0014 1369     		ldr	r3, [r2, #16]
 316 0016 03F03803 		and	r3, r3, #56
 317              	.LVL28:
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 318              		.loc 1 376 0
 319 001a 926A     		ldr	r2, [r2, #40]
 320              	.LVL29:
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pll
ARM GAS  /tmp/ccWY3npq.s 			page 14


 321              		.loc 1 378 0
 322 001c 102B     		cmp	r3, #16
 323 001e 26D0     		beq	.L35
 324              		.loc 1 378 0 is_stmt 0 discriminator 1
 325 0020 182B     		cmp	r3, #24
 326 0022 20D0     		beq	.L128
 327              	.LVL30:
 328              	.L36:
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 329              		.loc 1 388 0 is_stmt 1
 330 0024 6368     		ldr	r3, [r4, #4]
 331              	.LVL31:
 332 0026 B3F5803F 		cmp	r3, #65536
 333 002a 4FD0     		beq	.L129
 334              		.loc 1 388 0 is_stmt 0 discriminator 2
 335 002c 002B     		cmp	r3, #0
 336 002e 53D1     		bne	.L39
 337              		.loc 1 388 0 discriminator 3
 338 0030 A14B     		ldr	r3, .L145
 339 0032 1A68     		ldr	r2, [r3]
 340 0034 22F48032 		bic	r2, r2, #65536
 341 0038 1A60     		str	r2, [r3]
 342 003a 1A68     		ldr	r2, [r3]
 343 003c 22F48022 		bic	r2, r2, #262144
 344 0040 1A60     		str	r2, [r3]
 345              	.L38:
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Check the HSE State */
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 346              		.loc 1 391 0 is_stmt 1
 347 0042 6368     		ldr	r3, [r4, #4]
 348 0044 002B     		cmp	r3, #0
 349 0046 5ED0     		beq	.L41
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 350              		.loc 1 394 0
 351 0048 FFF7FEFF 		bl	HAL_GetTick
 352              	.LVL32:
 353 004c 0546     		mov	r5, r0
 354              	.LVL33:
 355              	.L42:
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSE is ready */
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 356              		.loc 1 397 0
 357 004e 9A4B     		ldr	r3, .L145
 358 0050 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccWY3npq.s 			page 15


 359 0052 13F4003F 		tst	r3, #131072
 360 0056 13D1     		bne	.L34
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 361              		.loc 1 399 0
 362 0058 FFF7FEFF 		bl	HAL_GetTick
 363              	.LVL34:
 364 005c 401B     		subs	r0, r0, r5
 365 005e 6428     		cmp	r0, #100
 366 0060 F5D9     		bls	.L42
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 367              		.loc 1 401 0
 368 0062 0320     		movs	r0, #3
 369 0064 38BD     		pop	{r3, r4, r5, pc}
 370              	.LVL35:
 371              	.L128:
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 372              		.loc 1 378 0 discriminator 2
 373 0066 02F00302 		and	r2, r2, #3
 374              	.LVL36:
 375 006a 022A     		cmp	r2, #2
 376 006c DAD1     		bne	.L36
 377              	.L35:
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 378              		.loc 1 380 0
 379 006e 924B     		ldr	r3, .L145
 380              	.LVL37:
 381 0070 1B68     		ldr	r3, [r3]
 382 0072 13F4003F 		tst	r3, #131072
 383 0076 03D0     		beq	.L34
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 384              		.loc 1 380 0 is_stmt 0 discriminator 1
 385 0078 6368     		ldr	r3, [r4, #4]
 386 007a 002B     		cmp	r3, #0
 387 007c 00F09082 		beq	.L130
 388              	.LVL38:
 389              	.L34:
 390              	.LBE2:
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSE is bypassed or disabled */
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccWY3npq.s 			page 16


 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 391              		.loc 1 422 0 is_stmt 1
 392 0080 2368     		ldr	r3, [r4]
 393 0082 13F0020F 		tst	r3, #2
 394 0086 7DD0     		beq	.L46
 395              	.LBB3:
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_HSICALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* When the HSI is used as system clock it will not disabled */
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 396              		.loc 1 429 0
 397 0088 8B4A     		ldr	r2, .L145
 398 008a 1369     		ldr	r3, [r2, #16]
 399              	.LVL39:
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 400              		.loc 1 430 0
 401 008c 926A     		ldr	r2, [r2, #40]
 402              	.LVL40:
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pll
 403              		.loc 1 431 0
 404 008e 13F03803 		ands	r3, r3, #56
 405              	.LVL41:
 406 0092 4AD0     		beq	.L47
 407              		.loc 1 431 0 is_stmt 0 discriminator 1
 408 0094 182B     		cmp	r3, #24
 409 0096 45D0     		beq	.L131
 410              	.L48:
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Enable the Internal High Speed oscillator (HSI, HSIDIV2,HSIDIV4, or HSIDIV8) */
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSI is ready */
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((uint32_t) (HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
ARM GAS  /tmp/ccWY3npq.s 			page 17


 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Check the HSI State */
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 411              		.loc 1 463 0 is_stmt 1
 412 0098 E368     		ldr	r3, [r4, #12]
 413              	.LVL42:
 414 009a 002B     		cmp	r3, #0
 415 009c 00F0B880 		beq	.L53
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      /* Enable the Internal High Speed oscillator (HSI, HSIDIV2,HSIDIV4, or HSIDIV8) */
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 416              		.loc 1 466 0
 417 00a0 8549     		ldr	r1, .L145
 418 00a2 0A68     		ldr	r2, [r1]
 419              	.LVL43:
 420 00a4 22F01902 		bic	r2, r2, #25
 421 00a8 1343     		orrs	r3, r3, r2
 422 00aa 0B60     		str	r3, [r1]
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 423              		.loc 1 469 0
 424 00ac FFF7FEFF 		bl	HAL_GetTick
 425              	.LVL44:
 426 00b0 0546     		mov	r5, r0
 427              	.LVL45:
 428              	.L54:
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSI is ready */
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 429              		.loc 1 472 0
 430 00b2 814B     		ldr	r3, .L145
 431 00b4 1B68     		ldr	r3, [r3]
 432 00b6 13F0040F 		tst	r3, #4
 433 00ba 40F09180 		bne	.L132
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 434              		.loc 1 474 0
 435 00be FFF7FEFF 		bl	HAL_GetTick
 436              	.LVL46:
 437 00c2 401B     		subs	r0, r0, r5
 438 00c4 0228     		cmp	r0, #2
 439 00c6 F4D9     		bls	.L54
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 440              		.loc 1 476 0
 441 00c8 0320     		movs	r0, #3
 442 00ca 38BD     		pop	{r3, r4, r5, pc}
 443              	.LVL47:
 444              	.L129:
 445              	.LBE3:
 446              	.LBB4:
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccWY3npq.s 			page 18


 447              		.loc 1 388 0 discriminator 1
 448 00cc 7A4A     		ldr	r2, .L145
 449 00ce 1368     		ldr	r3, [r2]
 450 00d0 43F48033 		orr	r3, r3, #65536
 451 00d4 1360     		str	r3, [r2]
 452 00d6 B4E7     		b	.L38
 453              	.L39:
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 454              		.loc 1 388 0 is_stmt 0 discriminator 4
 455 00d8 B3F5A02F 		cmp	r3, #327680
 456 00dc 09D0     		beq	.L133
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 457              		.loc 1 388 0 discriminator 6
 458 00de 764B     		ldr	r3, .L145
 459 00e0 1A68     		ldr	r2, [r3]
 460 00e2 22F48032 		bic	r2, r2, #65536
 461 00e6 1A60     		str	r2, [r3]
 462 00e8 1A68     		ldr	r2, [r3]
 463 00ea 22F48022 		bic	r2, r2, #262144
 464 00ee 1A60     		str	r2, [r3]
 465 00f0 A7E7     		b	.L38
 466              	.L133:
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 467              		.loc 1 388 0 discriminator 5
 468 00f2 714B     		ldr	r3, .L145
 469 00f4 1A68     		ldr	r2, [r3]
 470 00f6 42F48022 		orr	r2, r2, #262144
 471 00fa 1A60     		str	r2, [r3]
 472 00fc 1A68     		ldr	r2, [r3]
 473 00fe 42F48032 		orr	r2, r2, #65536
 474 0102 1A60     		str	r2, [r3]
 475 0104 9DE7     		b	.L38
 476              	.L41:
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 477              		.loc 1 408 0 is_stmt 1
 478 0106 FFF7FEFF 		bl	HAL_GetTick
 479              	.LVL48:
 480 010a 0546     		mov	r5, r0
 481              	.LVL49:
 482              	.L44:
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 483              		.loc 1 411 0
 484 010c 6A4B     		ldr	r3, .L145
 485 010e 1B68     		ldr	r3, [r3]
 486 0110 13F4003F 		tst	r3, #131072
 487 0114 B4D0     		beq	.L34
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 488              		.loc 1 413 0
 489 0116 FFF7FEFF 		bl	HAL_GetTick
 490              	.LVL50:
 491 011a 401B     		subs	r0, r0, r5
 492 011c 6428     		cmp	r0, #100
 493 011e F5D9     		bls	.L44
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 494              		.loc 1 415 0
 495 0120 0320     		movs	r0, #3
 496 0122 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccWY3npq.s 			page 19


 497              	.LVL51:
 498              	.L131:
 499              	.LBE4:
 500              	.LBB5:
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 501              		.loc 1 431 0 discriminator 2
 502 0124 12F0030F 		tst	r2, #3
 503 0128 B6D1     		bne	.L48
 504              	.L47:
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 505              		.loc 1 434 0
 506 012a 634B     		ldr	r3, .L145
 507              	.LVL52:
 508 012c 1B68     		ldr	r3, [r3]
 509 012e 13F0040F 		tst	r3, #4
 510 0132 03D0     		beq	.L49
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 511              		.loc 1 434 0 is_stmt 0 discriminator 1
 512 0134 E368     		ldr	r3, [r4, #12]
 513 0136 002B     		cmp	r3, #0
 514 0138 00F03482 		beq	.L105
 515              	.L49:
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 516              		.loc 1 442 0 is_stmt 1
 517 013c 5E4A     		ldr	r2, .L145
 518              	.LVL53:
 519 013e 1368     		ldr	r3, [r2]
 520 0140 23F01903 		bic	r3, r3, #25
 521 0144 E168     		ldr	r1, [r4, #12]
 522 0146 0B43     		orrs	r3, r3, r1
 523 0148 1360     		str	r3, [r2]
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 524              		.loc 1 445 0
 525 014a FFF7FEFF 		bl	HAL_GetTick
 526              	.LVL54:
 527 014e 0546     		mov	r5, r0
 528              	.LVL55:
 529              	.L50:
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 530              		.loc 1 448 0
 531 0150 594B     		ldr	r3, .L145
 532 0152 1B68     		ldr	r3, [r3]
 533 0154 13F0040F 		tst	r3, #4
 534 0158 06D1     		bne	.L134
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 535              		.loc 1 450 0
 536 015a FFF7FEFF 		bl	HAL_GetTick
 537              	.LVL56:
 538 015e 401B     		subs	r0, r0, r5
 539 0160 0228     		cmp	r0, #2
 540 0162 F5D9     		bls	.L50
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 541              		.loc 1 452 0
 542 0164 0320     		movs	r0, #3
 543 0166 38BD     		pop	{r3, r4, r5, pc}
 544              	.LVL57:
 545              	.L134:
ARM GAS  /tmp/ccWY3npq.s 			page 20


 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 546              		.loc 1 456 0
 547 0168 FFF7FEFF 		bl	HAL_GetREVID
 548              	.LVL58:
 549 016c 41F20303 		movw	r3, #4099
 550 0170 9842     		cmp	r0, r3
 551 0172 2CD8     		bhi	.L52
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 552              		.loc 1 456 0 is_stmt 0 discriminator 1
 553 0174 504A     		ldr	r2, .L145
 554 0176 5368     		ldr	r3, [r2, #4]
 555 0178 23F47C33 		bic	r3, r3, #258048
 556 017c 2169     		ldr	r1, [r4, #16]
 557 017e 43EA0133 		orr	r3, r3, r1, lsl #12
 558 0182 5360     		str	r3, [r2, #4]
 559              	.LVL59:
 560              	.L46:
 561              	.LBE5:
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSI is ready */
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*----------------------------- CSI Configuration --------------------------*/
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 562              		.loc 1 503 0 is_stmt 1
 563 0184 2368     		ldr	r3, [r4]
 564 0186 13F0100F 		tst	r3, #16
 565 018a 71D0     		beq	.L59
 566              	.LBB6:
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_CSI(RCC_OscInitStruct->CSIState));
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_CSICALIBRATION_VALUE(RCC_OscInitStruct->CSICalibrationValue));
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* When the CSI is used as system clock it will not disabled */
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
ARM GAS  /tmp/ccWY3npq.s 			page 21


 567              		.loc 1 510 0
 568 018c 4A4A     		ldr	r2, .L145
 569 018e 1369     		ldr	r3, [r2, #16]
 570 0190 03F03803 		and	r3, r3, #56
 571              	.LVL60:
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 572              		.loc 1 511 0
 573 0194 926A     		ldr	r2, [r2, #40]
 574              	.LVL61:
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pll
 575              		.loc 1 512 0
 576 0196 082B     		cmp	r3, #8
 577 0198 52D0     		beq	.L60
 578              		.loc 1 512 0 is_stmt 0 discriminator 1
 579 019a 182B     		cmp	r3, #24
 580 019c 4CD0     		beq	.L135
 581              	.LVL62:
 582              	.L61:
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* When CSI is used as system clock it will not disabled */
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON)
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Check the CSI State */
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((RCC_OscInitStruct->CSIState)!= RCC_CSI_OFF)
 583              		.loc 1 529 0 is_stmt 1
 584 019e E369     		ldr	r3, [r4, #28]
 585              	.LVL63:
 586 01a0 002B     		cmp	r3, #0
 587 01a2 00F0A380 		beq	.L64
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (CSI). */
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_CSI_ENABLE();
 588              		.loc 1 532 0
 589 01a6 444A     		ldr	r2, .L145
 590 01a8 1368     		ldr	r3, [r2]
 591 01aa 43F08003 		orr	r3, r3, #128
 592 01ae 1360     		str	r3, [r2]
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 593              		.loc 1 535 0
 594 01b0 FFF7FEFF 		bl	HAL_GetTick
 595              	.LVL64:
 596 01b4 0546     		mov	r5, r0
 597              	.LVL65:
 598              	.L65:
ARM GAS  /tmp/ccWY3npq.s 			page 22


 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till CSI is ready */
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 599              		.loc 1 538 0
 600 01b6 404B     		ldr	r3, .L145
 601 01b8 1B68     		ldr	r3, [r3]
 602 01ba 13F4807F 		tst	r3, #256
 603 01be 7DD1     		bne	.L136
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
 604              		.loc 1 540 0
 605 01c0 FFF7FEFF 		bl	HAL_GetTick
 606              	.LVL66:
 607 01c4 401B     		subs	r0, r0, r5
 608 01c6 0228     		cmp	r0, #2
 609 01c8 F5D9     		bls	.L65
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 610              		.loc 1 542 0
 611 01ca 0320     		movs	r0, #3
 612 01cc 38BD     		pop	{r3, r4, r5, pc}
 613              	.LVL67:
 614              	.L52:
 615              	.LBE6:
 616              	.LBB7:
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 617              		.loc 1 456 0 discriminator 2
 618 01ce 3A4A     		ldr	r2, .L145
 619 01d0 5368     		ldr	r3, [r2, #4]
 620 01d2 23F0FE43 		bic	r3, r3, #2130706432
 621 01d6 2169     		ldr	r1, [r4, #16]
 622 01d8 43EA0163 		orr	r3, r3, r1, lsl #24
 623 01dc 5360     		str	r3, [r2, #4]
 624 01de D1E7     		b	.L46
 625              	.L132:
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 626              		.loc 1 481 0
 627 01e0 FFF7FEFF 		bl	HAL_GetREVID
 628              	.LVL68:
 629 01e4 41F20303 		movw	r3, #4099
 630 01e8 9842     		cmp	r0, r3
 631 01ea 08D8     		bhi	.L56
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 632              		.loc 1 481 0 is_stmt 0 discriminator 1
 633 01ec 324A     		ldr	r2, .L145
 634 01ee 5368     		ldr	r3, [r2, #4]
 635 01f0 23F47C33 		bic	r3, r3, #258048
 636 01f4 2169     		ldr	r1, [r4, #16]
 637 01f6 43EA0133 		orr	r3, r3, r1, lsl #12
 638 01fa 5360     		str	r3, [r2, #4]
 639 01fc C2E7     		b	.L46
 640              	.L56:
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 641              		.loc 1 481 0 discriminator 2
 642 01fe 2E4A     		ldr	r2, .L145
 643 0200 5368     		ldr	r3, [r2, #4]
 644 0202 23F0FE43 		bic	r3, r3, #2130706432
ARM GAS  /tmp/ccWY3npq.s 			page 23


 645 0206 2169     		ldr	r1, [r4, #16]
 646 0208 43EA0163 		orr	r3, r3, r1, lsl #24
 647 020c 5360     		str	r3, [r2, #4]
 648 020e B9E7     		b	.L46
 649              	.LVL69:
 650              	.L53:
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 651              		.loc 1 486 0 is_stmt 1
 652 0210 294A     		ldr	r2, .L145
 653              	.LVL70:
 654 0212 1368     		ldr	r3, [r2]
 655 0214 23F00103 		bic	r3, r3, #1
 656 0218 1360     		str	r3, [r2]
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 657              		.loc 1 489 0
 658 021a FFF7FEFF 		bl	HAL_GetTick
 659              	.LVL71:
 660 021e 0546     		mov	r5, r0
 661              	.LVL72:
 662              	.L57:
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 663              		.loc 1 492 0
 664 0220 254B     		ldr	r3, .L145
 665 0222 1B68     		ldr	r3, [r3]
 666 0224 13F0040F 		tst	r3, #4
 667 0228 ACD0     		beq	.L46
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 668              		.loc 1 494 0
 669 022a FFF7FEFF 		bl	HAL_GetTick
 670              	.LVL73:
 671 022e 401B     		subs	r0, r0, r5
 672 0230 0228     		cmp	r0, #2
 673 0232 F5D9     		bls	.L57
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 674              		.loc 1 496 0
 675 0234 0320     		movs	r0, #3
 676 0236 38BD     		pop	{r3, r4, r5, pc}
 677              	.LVL74:
 678              	.L135:
 679              	.LBE7:
 680              	.LBB8:
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 681              		.loc 1 512 0 discriminator 2
 682 0238 02F00302 		and	r2, r2, #3
 683              	.LVL75:
 684 023c 012A     		cmp	r2, #1
 685 023e AED1     		bne	.L61
 686              	.L60:
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 687              		.loc 1 515 0
 688 0240 1D4B     		ldr	r3, .L145
 689              	.LVL76:
 690 0242 1B68     		ldr	r3, [r3]
 691 0244 13F4807F 		tst	r3, #256
 692 0248 04D0     		beq	.L62
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 693              		.loc 1 515 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccWY3npq.s 			page 24


 694 024a E369     		ldr	r3, [r4, #28]
 695 024c 802B     		cmp	r3, #128
 696 024e 01D0     		beq	.L62
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 697              		.loc 1 517 0 is_stmt 1
 698 0250 0120     		movs	r0, #1
 699 0252 38BD     		pop	{r3, r4, r5, pc}
 700              	.LVL77:
 701              	.L62:
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 702              		.loc 1 523 0
 703 0254 FFF7FEFF 		bl	HAL_GetREVID
 704              	.LVL78:
 705 0258 41F20303 		movw	r3, #4099
 706 025c 9842     		cmp	r0, r3
 707 025e 22D8     		bhi	.L63
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 708              		.loc 1 523 0 is_stmt 0 discriminator 1
 709 0260 154A     		ldr	r2, .L145
 710 0262 5368     		ldr	r3, [r2, #4]
 711 0264 23F0F843 		bic	r3, r3, #2080374784
 712 0268 216A     		ldr	r1, [r4, #32]
 713 026a 43EA8163 		orr	r3, r3, r1, lsl #26
 714 026e 5360     		str	r3, [r2, #4]
 715              	.L59:
 716              	.LBE8:
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (CSI). */
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_CSI_DISABLE();
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till CSI is ready */
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 717              		.loc 1 569 0 is_stmt 1
 718 0270 2368     		ldr	r3, [r4]
 719 0272 13F0080F 		tst	r3, #8
 720 0276 61D0     		beq	.L70
ARM GAS  /tmp/ccWY3npq.s 			page 25


 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSI State */
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 721              		.loc 1 575 0
 722 0278 6369     		ldr	r3, [r4, #20]
 723 027a 002B     		cmp	r3, #0
 724 027c 4AD0     		beq	.L71
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 725              		.loc 1 578 0
 726 027e 0E4A     		ldr	r2, .L145
 727 0280 536F     		ldr	r3, [r2, #116]
 728 0282 43F00103 		orr	r3, r3, #1
 729 0286 5367     		str	r3, [r2, #116]
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 730              		.loc 1 581 0
 731 0288 FFF7FEFF 		bl	HAL_GetTick
 732              	.LVL79:
 733 028c 0546     		mov	r5, r0
 734              	.LVL80:
 735              	.L72:
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till LSI is ready */
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 736              		.loc 1 584 0
 737 028e 0A4B     		ldr	r3, .L145
 738 0290 5B6F     		ldr	r3, [r3, #116]
 739 0292 13F0020F 		tst	r3, #2
 740 0296 51D1     		bne	.L70
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 741              		.loc 1 586 0
 742 0298 FFF7FEFF 		bl	HAL_GetTick
 743              	.LVL81:
 744 029c 401B     		subs	r0, r0, r5
 745 029e 0228     		cmp	r0, #2
 746 02a0 F5D9     		bls	.L72
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 747              		.loc 1 588 0
 748 02a2 0320     		movs	r0, #3
 749 02a4 38BD     		pop	{r3, r4, r5, pc}
 750              	.LVL82:
 751              	.L63:
 752              	.LBB9:
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 753              		.loc 1 523 0 discriminator 2
 754 02a6 044A     		ldr	r2, .L145
 755 02a8 D368     		ldr	r3, [r2, #12]
 756 02aa 23F07C53 		bic	r3, r3, #1056964608
 757 02ae 216A     		ldr	r1, [r4, #32]
ARM GAS  /tmp/ccWY3npq.s 			page 26


 758 02b0 43EA0163 		orr	r3, r3, r1, lsl #24
 759 02b4 D360     		str	r3, [r2, #12]
 760 02b6 DBE7     		b	.L59
 761              	.L146:
 762              		.align	2
 763              	.L145:
 764 02b8 00440258 		.word	1476543488
 765              	.LVL83:
 766              	.L136:
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 767              		.loc 1 547 0
 768 02bc FFF7FEFF 		bl	HAL_GetREVID
 769              	.LVL84:
 770 02c0 41F20303 		movw	r3, #4099
 771 02c4 9842     		cmp	r0, r3
 772 02c6 08D8     		bhi	.L67
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 773              		.loc 1 547 0 is_stmt 0 discriminator 1
 774 02c8 AE4A     		ldr	r2, .L147
 775 02ca 5368     		ldr	r3, [r2, #4]
 776 02cc 23F0F843 		bic	r3, r3, #2080374784
 777 02d0 216A     		ldr	r1, [r4, #32]
 778 02d2 43EA8163 		orr	r3, r3, r1, lsl #26
 779 02d6 5360     		str	r3, [r2, #4]
 780 02d8 CAE7     		b	.L59
 781              	.L67:
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 782              		.loc 1 547 0 discriminator 2
 783 02da AA4A     		ldr	r2, .L147
 784 02dc D368     		ldr	r3, [r2, #12]
 785 02de 23F07C53 		bic	r3, r3, #1056964608
 786 02e2 216A     		ldr	r1, [r4, #32]
 787 02e4 43EA0163 		orr	r3, r3, r1, lsl #24
 788 02e8 D360     		str	r3, [r2, #12]
 789 02ea C1E7     		b	.L59
 790              	.LVL85:
 791              	.L64:
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 792              		.loc 1 552 0 is_stmt 1
 793 02ec A54A     		ldr	r2, .L147
 794 02ee 1368     		ldr	r3, [r2]
 795 02f0 23F08003 		bic	r3, r3, #128
 796 02f4 1360     		str	r3, [r2]
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 797              		.loc 1 555 0
 798 02f6 FFF7FEFF 		bl	HAL_GetTick
 799              	.LVL86:
 800 02fa 0546     		mov	r5, r0
 801              	.LVL87:
 802              	.L68:
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 803              		.loc 1 558 0
 804 02fc A14B     		ldr	r3, .L147
 805 02fe 1B68     		ldr	r3, [r3]
 806 0300 13F4807F 		tst	r3, #256
 807 0304 B4D0     		beq	.L59
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
ARM GAS  /tmp/ccWY3npq.s 			page 27


 808              		.loc 1 560 0
 809 0306 FFF7FEFF 		bl	HAL_GetTick
 810              	.LVL88:
 811 030a 401B     		subs	r0, r0, r5
 812 030c 0228     		cmp	r0, #2
 813 030e F5D9     		bls	.L68
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 814              		.loc 1 562 0
 815 0310 0320     		movs	r0, #3
 816 0312 38BD     		pop	{r3, r4, r5, pc}
 817              	.LVL89:
 818              	.L71:
 819              	.LBE9:
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 820              		.loc 1 595 0
 821 0314 9B4A     		ldr	r2, .L147
 822 0316 536F     		ldr	r3, [r2, #116]
 823 0318 23F00103 		bic	r3, r3, #1
 824 031c 5367     		str	r3, [r2, #116]
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 825              		.loc 1 598 0
 826 031e FFF7FEFF 		bl	HAL_GetTick
 827              	.LVL90:
 828 0322 0546     		mov	r5, r0
 829              	.LVL91:
 830              	.L74:
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till LSI is ready */
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 831              		.loc 1 601 0
 832 0324 974B     		ldr	r3, .L147
 833 0326 5B6F     		ldr	r3, [r3, #116]
 834 0328 13F0020F 		tst	r3, #2
 835 032c 06D0     		beq	.L70
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 836              		.loc 1 603 0
 837 032e FFF7FEFF 		bl	HAL_GetTick
 838              	.LVL92:
 839 0332 401B     		subs	r0, r0, r5
 840 0334 0228     		cmp	r0, #2
 841 0336 F5D9     		bls	.L74
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 842              		.loc 1 605 0
 843 0338 0320     		movs	r0, #3
 844 033a 38BD     		pop	{r3, r4, r5, pc}
 845              	.LVL93:
 846              	.L70:
ARM GAS  /tmp/ccWY3npq.s 			page 28


 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*------------------------------ HSI48 Configuration -------------------------*/
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 847              		.loc 1 612 0
 848 033c 2368     		ldr	r3, [r4]
 849 033e 13F0200F 		tst	r3, #32
 850 0342 29D0     		beq	.L76
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the HSI48 State */
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_OscInitStruct->HSI48State)!= RCC_HSI48_OFF)
 851              		.loc 1 618 0
 852 0344 A369     		ldr	r3, [r4, #24]
 853 0346 9BB1     		cbz	r3, .L77
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (HSI48). */
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_HSI48_ENABLE();
 854              		.loc 1 621 0
 855 0348 8E4A     		ldr	r2, .L147
 856 034a 1368     		ldr	r3, [r2]
 857 034c 43F48053 		orr	r3, r3, #4096
 858 0350 1360     		str	r3, [r2]
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get time-out */
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 859              		.loc 1 624 0
 860 0352 FFF7FEFF 		bl	HAL_GetTick
 861              	.LVL94:
 862 0356 0546     		mov	r5, r0
 863              	.LVL95:
 864              	.L78:
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till HSI48 is ready */
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 865              		.loc 1 627 0
 866 0358 8A4B     		ldr	r3, .L147
 867 035a 1B68     		ldr	r3, [r3]
 868 035c 13F4005F 		tst	r3, #8192
 869 0360 1AD1     		bne	.L76
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
 870              		.loc 1 629 0
 871 0362 FFF7FEFF 		bl	HAL_GetTick
 872              	.LVL96:
 873 0366 401B     		subs	r0, r0, r5
 874 0368 0228     		cmp	r0, #2
 875 036a F5D9     		bls	.L78
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 876              		.loc 1 631 0
 877 036c 0320     		movs	r0, #3
ARM GAS  /tmp/ccWY3npq.s 			page 29


 878 036e 38BD     		pop	{r3, r4, r5, pc}
 879              	.LVL97:
 880              	.L77:
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (HSI48). */
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_HSI48_DISABLE();
 881              		.loc 1 638 0
 882 0370 844A     		ldr	r2, .L147
 883 0372 1368     		ldr	r3, [r2]
 884 0374 23F48053 		bic	r3, r3, #4096
 885 0378 1360     		str	r3, [r2]
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get time-out */
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 886              		.loc 1 641 0
 887 037a FFF7FEFF 		bl	HAL_GetTick
 888              	.LVL98:
 889 037e 0546     		mov	r5, r0
 890              	.LVL99:
 891              	.L80:
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till HSI48 is ready */
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 892              		.loc 1 644 0
 893 0380 804B     		ldr	r3, .L147
 894 0382 1B68     		ldr	r3, [r3]
 895 0384 13F4005F 		tst	r3, #8192
 896 0388 06D0     		beq	.L76
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
 897              		.loc 1 646 0
 898 038a FFF7FEFF 		bl	HAL_GetTick
 899              	.LVL100:
 900 038e 401B     		subs	r0, r0, r5
 901 0390 0228     		cmp	r0, #2
 902 0392 F5D9     		bls	.L80
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 903              		.loc 1 648 0
 904 0394 0320     		movs	r0, #3
 905 0396 38BD     		pop	{r3, r4, r5, pc}
 906              	.LVL101:
 907              	.L76:
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 908              		.loc 1 654 0
 909 0398 2368     		ldr	r3, [r4]
 910 039a 13F0040F 		tst	r3, #4
 911 039e 21D1     		bne	.L137
ARM GAS  /tmp/ccWY3npq.s 			page 30


 912              	.L82:
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Enable write access to Backup domain */
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     PWR->CR1 |= PWR_CR1_DBP;
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Wait for Backup domain Write protection disable */
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     while((PWR->CR1 & PWR_CR1_DBP) == 0U)
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_TIMEOUT;
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till LSE is ready */
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till LSE is ready */
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check the parameters */
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 913              		.loc 1 708 0
 914 03a0 636A     		ldr	r3, [r4, #36]
ARM GAS  /tmp/ccWY3npq.s 			page 31


 915 03a2 002B     		cmp	r3, #0
 916 03a4 00F00081 		beq	.L119
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 917              		.loc 1 711 0
 918 03a8 764A     		ldr	r2, .L147
 919 03aa 1269     		ldr	r2, [r2, #16]
 920 03ac 02F03802 		and	r2, r2, #56
 921 03b0 182A     		cmp	r2, #24
 922 03b2 00F0FB80 		beq	.L120
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 923              		.loc 1 713 0
 924 03b6 022B     		cmp	r3, #2
 925 03b8 75D0     		beq	.L138
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Check the parameters */
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Disable the main PLL. */
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till PLL is ready */
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLN,
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLP,
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLQ,
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLR);
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          /* Disable PLLFRACN . */
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLFRACN_DISABLE();
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          /* Configure PLL  PLL1FRACN */
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Select PLL1 input reference frequency range: VCI */
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
ARM GAS  /tmp/ccWY3npq.s 			page 32


 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Select PLL1 output frequency range : VCO */
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable PLL System Clock output. */
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable PLL1Q Clock output. */
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable PLL1R  Clock output. */
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable PLL1FRACN . */
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLFRACN_ENABLE();
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable the main PLL. */
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till PLL is ready */
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Disable the main PLL. */
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 926              		.loc 1 789 0
 927 03ba 724A     		ldr	r2, .L147
 928 03bc 1368     		ldr	r3, [r2]
 929 03be 23F08073 		bic	r3, r3, #16777216
 930 03c2 1360     		str	r3, [r2]
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 931              		.loc 1 792 0
 932 03c4 FFF7FEFF 		bl	HAL_GetTick
 933              	.LVL102:
 934 03c8 0446     		mov	r4, r0
 935              	.LVL103:
 936              	.L99:
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till PLL is ready */
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 937              		.loc 1 795 0
 938 03ca 6E4B     		ldr	r3, .L147
 939 03cc 1B68     		ldr	r3, [r3]
 940 03ce 13F0007F 		tst	r3, #33554432
 941 03d2 00F0E180 		beq	.L139
ARM GAS  /tmp/ccWY3npq.s 			page 33


 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 942              		.loc 1 797 0
 943 03d6 FFF7FEFF 		bl	HAL_GetTick
 944              	.LVL104:
 945 03da 001B     		subs	r0, r0, r4
 946 03dc 0228     		cmp	r0, #2
 947 03de F4D9     		bls	.L99
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 948              		.loc 1 799 0
 949 03e0 0320     		movs	r0, #3
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_ERROR;
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return HAL_OK;
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 950              		.loc 1 810 0
 951 03e2 38BD     		pop	{r3, r4, r5, pc}
 952              	.LVL105:
 953              	.L137:
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 954              		.loc 1 660 0
 955 03e4 684A     		ldr	r2, .L147+4
 956 03e6 1368     		ldr	r3, [r2]
 957 03e8 43F48073 		orr	r3, r3, #256
 958 03ec 1360     		str	r3, [r2]
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 959              		.loc 1 663 0
 960 03ee FFF7FEFF 		bl	HAL_GetTick
 961              	.LVL106:
 962 03f2 0546     		mov	r5, r0
 963              	.LVL107:
 964              	.L83:
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 965              		.loc 1 665 0
 966 03f4 644B     		ldr	r3, .L147+4
 967 03f6 1B68     		ldr	r3, [r3]
 968 03f8 13F4807F 		tst	r3, #256
 969 03fc 06D1     		bne	.L140
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 970              		.loc 1 667 0
 971 03fe FFF7FEFF 		bl	HAL_GetTick
 972              	.LVL108:
 973 0402 401B     		subs	r0, r0, r5
 974 0404 6428     		cmp	r0, #100
 975 0406 F5D9     		bls	.L83
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 976              		.loc 1 669 0
 977 0408 0320     		movs	r0, #3
 978 040a 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccWY3npq.s 			page 34


 979              	.LVL109:
 980              	.L140:
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 981              		.loc 1 674 0
 982 040c A368     		ldr	r3, [r4, #8]
 983 040e 012B     		cmp	r3, #1
 984 0410 1CD0     		beq	.L141
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 985              		.loc 1 674 0 is_stmt 0 discriminator 2
 986 0412 0BBB     		cbnz	r3, .L87
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 987              		.loc 1 674 0 discriminator 3
 988 0414 5B4B     		ldr	r3, .L147
 989 0416 1A6F     		ldr	r2, [r3, #112]
 990 0418 22F00102 		bic	r2, r2, #1
 991 041c 1A67     		str	r2, [r3, #112]
 992 041e 1A6F     		ldr	r2, [r3, #112]
 993 0420 22F00402 		bic	r2, r2, #4
 994 0424 1A67     		str	r2, [r3, #112]
 995              	.L86:
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 996              		.loc 1 676 0 is_stmt 1
 997 0426 A368     		ldr	r3, [r4, #8]
 998 0428 63B3     		cbz	r3, .L89
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 999              		.loc 1 679 0
 1000 042a FFF7FEFF 		bl	HAL_GetTick
 1001              	.LVL110:
 1002 042e 0546     		mov	r5, r0
 1003              	.LVL111:
 1004              	.L90:
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1005              		.loc 1 682 0
 1006 0430 544B     		ldr	r3, .L147
 1007 0432 1B6F     		ldr	r3, [r3, #112]
 1008 0434 13F0020F 		tst	r3, #2
 1009 0438 B2D1     		bne	.L82
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1010              		.loc 1 684 0
 1011 043a FFF7FEFF 		bl	HAL_GetTick
 1012              	.LVL112:
 1013 043e 401B     		subs	r0, r0, r5
 1014 0440 41F28833 		movw	r3, #5000
 1015 0444 9842     		cmp	r0, r3
 1016 0446 F3D9     		bls	.L90
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 1017              		.loc 1 686 0
 1018 0448 0320     		movs	r0, #3
 1019 044a 38BD     		pop	{r3, r4, r5, pc}
 1020              	.LVL113:
 1021              	.L141:
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 1022              		.loc 1 674 0 discriminator 1
 1023 044c 4D4A     		ldr	r2, .L147
 1024 044e 136F     		ldr	r3, [r2, #112]
 1025 0450 43F00103 		orr	r3, r3, #1
 1026 0454 1367     		str	r3, [r2, #112]
ARM GAS  /tmp/ccWY3npq.s 			page 35


 1027 0456 E6E7     		b	.L86
 1028              	.L87:
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 1029              		.loc 1 674 0 is_stmt 0 discriminator 4
 1030 0458 052B     		cmp	r3, #5
 1031 045a 09D0     		beq	.L142
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 1032              		.loc 1 674 0 discriminator 6
 1033 045c 494B     		ldr	r3, .L147
 1034 045e 1A6F     		ldr	r2, [r3, #112]
 1035 0460 22F00102 		bic	r2, r2, #1
 1036 0464 1A67     		str	r2, [r3, #112]
 1037 0466 1A6F     		ldr	r2, [r3, #112]
 1038 0468 22F00402 		bic	r2, r2, #4
 1039 046c 1A67     		str	r2, [r3, #112]
 1040 046e DAE7     		b	.L86
 1041              	.L142:
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 1042              		.loc 1 674 0 discriminator 5
 1043 0470 444B     		ldr	r3, .L147
 1044 0472 1A6F     		ldr	r2, [r3, #112]
 1045 0474 42F00402 		orr	r2, r2, #4
 1046 0478 1A67     		str	r2, [r3, #112]
 1047 047a 1A6F     		ldr	r2, [r3, #112]
 1048 047c 42F00102 		orr	r2, r2, #1
 1049 0480 1A67     		str	r2, [r3, #112]
 1050 0482 D0E7     		b	.L86
 1051              	.L89:
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1052              		.loc 1 693 0 is_stmt 1
 1053 0484 FFF7FEFF 		bl	HAL_GetTick
 1054              	.LVL114:
 1055 0488 0546     		mov	r5, r0
 1056              	.LVL115:
 1057              	.L92:
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1058              		.loc 1 696 0
 1059 048a 3E4B     		ldr	r3, .L147
 1060 048c 1B6F     		ldr	r3, [r3, #112]
 1061 048e 13F0020F 		tst	r3, #2
 1062 0492 85D0     		beq	.L82
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1063              		.loc 1 698 0
 1064 0494 FFF7FEFF 		bl	HAL_GetTick
 1065              	.LVL116:
 1066 0498 401B     		subs	r0, r0, r5
 1067 049a 41F28833 		movw	r3, #5000
 1068 049e 9842     		cmp	r0, r3
 1069 04a0 F3D9     		bls	.L92
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 1070              		.loc 1 700 0
 1071 04a2 0320     		movs	r0, #3
 1072 04a4 38BD     		pop	{r3, r4, r5, pc}
 1073              	.LVL117:
 1074              	.L138:
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1075              		.loc 1 725 0
ARM GAS  /tmp/ccWY3npq.s 			page 36


 1076 04a6 374A     		ldr	r2, .L147
 1077 04a8 1368     		ldr	r3, [r2]
 1078 04aa 23F08073 		bic	r3, r3, #16777216
 1079 04ae 1360     		str	r3, [r2]
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1080              		.loc 1 728 0
 1081 04b0 FFF7FEFF 		bl	HAL_GetTick
 1082              	.LVL118:
 1083 04b4 0546     		mov	r5, r0
 1084              	.LVL119:
 1085              	.L95:
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1086              		.loc 1 731 0
 1087 04b6 334B     		ldr	r3, .L147
 1088 04b8 1B68     		ldr	r3, [r3]
 1089 04ba 13F0007F 		tst	r3, #33554432
 1090 04be 06D0     		beq	.L143
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 1091              		.loc 1 733 0
 1092 04c0 FFF7FEFF 		bl	HAL_GetTick
 1093              	.LVL120:
 1094 04c4 401B     		subs	r0, r0, r5
 1095 04c6 0228     		cmp	r0, #2
 1096 04c8 F5D9     		bls	.L95
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 1097              		.loc 1 735 0
 1098 04ca 0320     		movs	r0, #3
 1099 04cc 38BD     		pop	{r3, r4, r5, pc}
 1100              	.LVL121:
 1101              	.L143:
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 1102              		.loc 1 740 0
 1103 04ce 2D4B     		ldr	r3, .L147
 1104 04d0 996A     		ldr	r1, [r3, #40]
 1105 04d2 2E4A     		ldr	r2, .L147+8
 1106 04d4 0A40     		ands	r2, r2, r1
 1107 04d6 A16A     		ldr	r1, [r4, #40]
 1108 04d8 E06A     		ldr	r0, [r4, #44]
 1109 04da 41EA0011 		orr	r1, r1, r0, lsl #4
 1110 04de 0A43     		orrs	r2, r2, r1
 1111 04e0 9A62     		str	r2, [r3, #40]
 1112 04e2 226B     		ldr	r2, [r4, #48]
 1113 04e4 013A     		subs	r2, r2, #1
 1114 04e6 C2F30802 		ubfx	r2, r2, #0, #9
 1115 04ea 616B     		ldr	r1, [r4, #52]
 1116 04ec 0139     		subs	r1, r1, #1
 1117 04ee 4902     		lsls	r1, r1, #9
 1118 04f0 89B2     		uxth	r1, r1
 1119 04f2 0A43     		orrs	r2, r2, r1
 1120 04f4 A16B     		ldr	r1, [r4, #56]
 1121 04f6 0139     		subs	r1, r1, #1
 1122 04f8 0904     		lsls	r1, r1, #16
 1123 04fa 01F4FE01 		and	r1, r1, #8323072
 1124 04fe 0A43     		orrs	r2, r2, r1
 1125 0500 E16B     		ldr	r1, [r4, #60]
 1126 0502 0139     		subs	r1, r1, #1
 1127 0504 0906     		lsls	r1, r1, #24
ARM GAS  /tmp/ccWY3npq.s 			page 37


 1128 0506 01F0FE41 		and	r1, r1, #2130706432
 1129 050a 0A43     		orrs	r2, r2, r1
 1130 050c 1A63     		str	r2, [r3, #48]
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1131              		.loc 1 748 0
 1132 050e DA6A     		ldr	r2, [r3, #44]
 1133 0510 22F00102 		bic	r2, r2, #1
 1134 0514 DA62     		str	r2, [r3, #44]
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1135              		.loc 1 751 0
 1136 0516 596B     		ldr	r1, [r3, #52]
 1137 0518 1D4A     		ldr	r2, .L147+12
 1138 051a 0A40     		ands	r2, r2, r1
 1139 051c A16C     		ldr	r1, [r4, #72]
 1140 051e 42EAC102 		orr	r2, r2, r1, lsl #3
 1141 0522 5A63     		str	r2, [r3, #52]
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1142              		.loc 1 754 0
 1143 0524 DA6A     		ldr	r2, [r3, #44]
 1144 0526 22F00C02 		bic	r2, r2, #12
 1145 052a 216C     		ldr	r1, [r4, #64]
 1146 052c 0A43     		orrs	r2, r2, r1
 1147 052e DA62     		str	r2, [r3, #44]
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1148              		.loc 1 757 0
 1149 0530 DA6A     		ldr	r2, [r3, #44]
 1150 0532 22F00202 		bic	r2, r2, #2
 1151 0536 616C     		ldr	r1, [r4, #68]
 1152 0538 0A43     		orrs	r2, r2, r1
 1153 053a DA62     		str	r2, [r3, #44]
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1154              		.loc 1 760 0
 1155 053c DA6A     		ldr	r2, [r3, #44]
 1156 053e 42F48032 		orr	r2, r2, #65536
 1157 0542 DA62     		str	r2, [r3, #44]
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1158              		.loc 1 763 0
 1159 0544 DA6A     		ldr	r2, [r3, #44]
 1160 0546 42F40032 		orr	r2, r2, #131072
 1161 054a DA62     		str	r2, [r3, #44]
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1162              		.loc 1 766 0
 1163 054c DA6A     		ldr	r2, [r3, #44]
 1164 054e 42F48022 		orr	r2, r2, #262144
 1165 0552 DA62     		str	r2, [r3, #44]
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1166              		.loc 1 769 0
 1167 0554 DA6A     		ldr	r2, [r3, #44]
 1168 0556 42F00102 		orr	r2, r2, #1
 1169 055a DA62     		str	r2, [r3, #44]
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1170              		.loc 1 772 0
 1171 055c 1A68     		ldr	r2, [r3]
 1172 055e 42F08072 		orr	r2, r2, #16777216
 1173 0562 1A60     		str	r2, [r3]
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1174              		.loc 1 775 0
ARM GAS  /tmp/ccWY3npq.s 			page 38


 1175 0564 FFF7FEFF 		bl	HAL_GetTick
 1176              	.LVL122:
 1177 0568 0446     		mov	r4, r0
 1178              	.LVL123:
 1179              	.L97:
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1180              		.loc 1 778 0
 1181 056a 064B     		ldr	r3, .L147
 1182 056c 1B68     		ldr	r3, [r3]
 1183 056e 13F0007F 		tst	r3, #33554432
 1184 0572 0FD1     		bne	.L144
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 1185              		.loc 1 780 0
 1186 0574 FFF7FEFF 		bl	HAL_GetTick
 1187              	.LVL124:
 1188 0578 001B     		subs	r0, r0, r4
 1189 057a 0228     		cmp	r0, #2
 1190 057c F5D9     		bls	.L97
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 1191              		.loc 1 782 0
 1192 057e 0320     		movs	r0, #3
 1193 0580 38BD     		pop	{r3, r4, r5, pc}
 1194              	.LVL125:
 1195              	.L148:
 1196 0582 00BF     		.align	2
 1197              	.L147:
 1198 0584 00440258 		.word	1476543488
 1199 0588 00480258 		.word	1476544512
 1200 058c 0CFCFFFF 		.word	-1012
 1201 0590 0700FFFF 		.word	-65529
 1202              	.LVL126:
 1203              	.L144:
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 1204              		.loc 1 809 0
 1205 0594 0020     		movs	r0, #0
 1206 0596 38BD     		pop	{r3, r4, r5, pc}
 1207              	.LVL127:
 1208              	.L139:
 1209 0598 0020     		movs	r0, #0
 1210 059a 38BD     		pop	{r3, r4, r5, pc}
 1211              	.LVL128:
 1212              	.L101:
 1213              	.LCFI2:
 1214              		.cfi_def_cfa_offset 0
 1215              		.cfi_restore 3
 1216              		.cfi_restore 4
 1217              		.cfi_restore 5
 1218              		.cfi_restore 14
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 1219              		.loc 1 364 0
 1220 059c 0120     		movs	r0, #1
 1221              	.LVL129:
 1222 059e 7047     		bx	lr
 1223              	.LVL130:
 1224              	.L130:
 1225              	.LCFI3:
 1226              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccWY3npq.s 			page 39


 1227              		.cfi_offset 3, -16
 1228              		.cfi_offset 4, -12
 1229              		.cfi_offset 5, -8
 1230              		.cfi_offset 14, -4
 1231              	.LBB10:
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 1232              		.loc 1 382 0
 1233 05a0 0120     		movs	r0, #1
 1234              	.LVL131:
 1235 05a2 38BD     		pop	{r3, r4, r5, pc}
 1236              	.LVL132:
 1237              	.L105:
 1238              	.LBE10:
 1239              	.LBB11:
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 1240              		.loc 1 436 0
 1241 05a4 0120     		movs	r0, #1
 1242 05a6 38BD     		pop	{r3, r4, r5, pc}
 1243              	.LVL133:
 1244              	.L119:
 1245              	.LBE11:
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 1246              		.loc 1 809 0
 1247 05a8 0020     		movs	r0, #0
 1248 05aa 38BD     		pop	{r3, r4, r5, pc}
 1249              	.LVL134:
 1250              	.L120:
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 1251              		.loc 1 806 0
 1252 05ac 0120     		movs	r0, #1
 1253 05ae 38BD     		pop	{r3, r4, r5, pc}
 1254              		.cfi_endproc
 1255              	.LFE142:
 1257              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1258              		.align	1
 1259              		.global	HAL_RCC_MCOConfig
 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1263              		.fpu fpv5-d16
 1265              	HAL_RCC_MCOConfig:
 1266              	.LFB144:
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct: pointer to an RCC_OscInitTypeDef structure that
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  FLatency: FLASH Latency, this parameter depend on device selected
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         and updated by HAL_InitTick() function called within this function
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
ARM GAS  /tmp/ccWY3npq.s 			page 40


 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked).
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         You can use HAL_RCC_GetClockConfig() function to know which clock is
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         currently used as system clock source.
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         D1CPRE[3:0] bits to ensure that  Domain1 core clock not exceed the maximum allowed freq
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   HAL_StatusTypeDef halstatus;
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t tickstart;
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    /* Check Null pointer */
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     return HAL_ERROR;
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check the parameters */
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Increasing the CPU frequency */
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_ERROR;
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Increasing the BUS frequency divider */
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- D1PCLK1 Configuration ---------------------------*/
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccWY3npq.s 			page 41


 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- D3PCLK1 Configuration ---------------------------*/
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    /*-------------------------- HCLK Configuration --------------------------*/
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Set the new HCLK clock divider */
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /*------------------------- SYSCLK Configuration -------------------------*/
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_SYSCLK(RCC_ClkInitStruct->SYSCLKDivider));
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* HSE is selected as System Clock Source */
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Check the HSE ready flag */
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_ERROR;
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* PLL is selected as System Clock Source */
ARM GAS  /tmp/ccWY3npq.s 			page 42


 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Check the PLL ready flag */
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_ERROR;
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* CSI is selected as System Clock Source */
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Check the PLL ready flag */
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_ERROR;
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* HSI is selected as System Clock Source */
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Check the HSI ready flag */
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_ERROR;
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while (__HAL_RCC_GET_SYSCLK_SOURCE() !=  (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_P
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Decreasing the BUS frequency divider */
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    /*-------------------------- HCLK Configuration --------------------------*/
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Set the new HCLK clock divider */
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
ARM GAS  /tmp/ccWY3npq.s 			page 43


 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_ERROR;
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  }
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- D1PCLK1 Configuration ---------------------------*/
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  {
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  }
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  {
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  }
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  {
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  }
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- D3PCLK1 Configuration ---------------------------*/
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  {
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  }
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPR
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   halstatus = HAL_InitTick (uwTickPrio);
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return halstatus;
ARM GAS  /tmp/ccWY3npq.s 			page 44


1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @}
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Group2 Peripheral Control functions
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  *
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** @verbatim
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ===============================================================================
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ===============================================================================
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     frequencies.
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** @endverbatim
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_MCOx: specifies the output direction for the clock source.
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_MCOSource: specifies the clock source to output.
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLL1QCLK:  PLL1Q clock selected as MCO1 source
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI48: HSI48 (48MHZ) selected as MCO1 source
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLL2PCLK: PLL2P clock selected as MCO2 source
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK:  PLL1P clock selected as MCO2 source
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_CSICLK:  CSI clock selected as MCO2 source
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_LSICLK:  LSI clock selected as MCO2 source
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_MCODiv: specifies the MCOx pre-scaler.
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1 up to RCC_MCODIV_15  : divider applied to MCOx clock
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 1267              		.loc 1 1101 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 32
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271              	.LVL135:
 1272 0000 70B5     		push	{r4, r5, r6, lr}
 1273              	.LCFI4:
 1274              		.cfi_def_cfa_offset 16
 1275              		.cfi_offset 4, -16
ARM GAS  /tmp/ccWY3npq.s 			page 45


 1276              		.cfi_offset 5, -12
 1277              		.cfi_offset 6, -8
 1278              		.cfi_offset 14, -4
 1279 0002 88B0     		sub	sp, sp, #32
 1280              	.LCFI5:
 1281              		.cfi_def_cfa_offset 48
 1282 0004 0C46     		mov	r4, r1
 1283 0006 1646     		mov	r6, r2
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check the parameters */
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* RCC_MCO1 */
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
 1284              		.loc 1 1107 0
 1285 0008 18B3     		cbz	r0, .L153
 1286              	.LBB12:
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* MCO1 Clock Enable */
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MCO1_CLK_ENABLE();
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[3:0] bits then Select MCO1 clock source and pre-scaler */
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* MCO2 Clock Enable */
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MCO2_CLK_ENABLE();
 1287              		.loc 1 1130 0
 1288 000a 234D     		ldr	r5, .L154
 1289 000c D5F8E030 		ldr	r3, [r5, #224]
 1290 0010 43F00403 		orr	r3, r3, #4
 1291 0014 C5F8E030 		str	r3, [r5, #224]
 1292 0018 D5F8E030 		ldr	r3, [r5, #224]
 1293 001c 03F00403 		and	r3, r3, #4
 1294 0020 0293     		str	r3, [sp, #8]
 1295 0022 029B     		ldr	r3, [sp, #8]
 1296              	.LBE12:
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
 1297              		.loc 1 1133 0
 1298 0024 4FF40073 		mov	r3, #512
 1299 0028 0393     		str	r3, [sp, #12]
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccWY3npq.s 			page 46


 1300              		.loc 1 1134 0
 1301 002a 0223     		movs	r3, #2
 1302 002c 0493     		str	r3, [sp, #16]
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1303              		.loc 1 1135 0
 1304 002e 0323     		movs	r3, #3
 1305 0030 0693     		str	r3, [sp, #24]
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1306              		.loc 1 1136 0
 1307 0032 0023     		movs	r3, #0
 1308 0034 0593     		str	r3, [sp, #20]
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1309              		.loc 1 1137 0
 1310 0036 0793     		str	r3, [sp, #28]
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1311              		.loc 1 1138 0
 1312 0038 03A9     		add	r1, sp, #12
 1313              	.LVL136:
 1314 003a 1848     		ldr	r0, .L154+4
 1315              	.LVL137:
 1316 003c FFF7FEFF 		bl	HAL_GPIO_Init
 1317              	.LVL138:
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[3:0] bits then Select MCO2 clock source and pre-scaler */
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 7U)))
 1318              		.loc 1 1141 0
 1319 0040 2B69     		ldr	r3, [r5, #16]
 1320 0042 23F07E43 		bic	r3, r3, #-33554432
 1321 0046 44EAC614 		orr	r4, r4, r6, lsl #7
 1322              	.LVL139:
 1323 004a 1C43     		orrs	r4, r4, r3
 1324 004c 2C61     		str	r4, [r5, #16]
 1325              	.L149:
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 1326              		.loc 1 1143 0
 1327 004e 08B0     		add	sp, sp, #32
 1328              	.LCFI6:
 1329              		.cfi_remember_state
 1330              		.cfi_def_cfa_offset 16
 1331              		@ sp needed
 1332 0050 70BD     		pop	{r4, r5, r6, pc}
 1333              	.LVL140:
 1334              	.L153:
 1335              	.LCFI7:
 1336              		.cfi_restore_state
 1337              	.LBB13:
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1338              		.loc 1 1112 0
 1339 0052 114D     		ldr	r5, .L154
 1340 0054 D5F8E030 		ldr	r3, [r5, #224]
 1341 0058 43F00103 		orr	r3, r3, #1
 1342 005c C5F8E030 		str	r3, [r5, #224]
 1343 0060 D5F8E030 		ldr	r3, [r5, #224]
 1344 0064 03F00103 		and	r3, r3, #1
 1345 0068 0193     		str	r3, [sp, #4]
 1346 006a 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/ccWY3npq.s 			page 47


 1347              	.LBE13:
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1348              		.loc 1 1115 0
 1349 006c 4FF48073 		mov	r3, #256
 1350 0070 0393     		str	r3, [sp, #12]
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1351              		.loc 1 1116 0
 1352 0072 0223     		movs	r3, #2
 1353 0074 0493     		str	r3, [sp, #16]
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1354              		.loc 1 1117 0
 1355 0076 0323     		movs	r3, #3
 1356 0078 0693     		str	r3, [sp, #24]
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1357              		.loc 1 1118 0
 1358 007a 0023     		movs	r3, #0
 1359 007c 0593     		str	r3, [sp, #20]
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1360              		.loc 1 1119 0
 1361 007e 0793     		str	r3, [sp, #28]
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1362              		.loc 1 1120 0
 1363 0080 03A9     		add	r1, sp, #12
 1364              	.LVL141:
 1365 0082 0748     		ldr	r0, .L154+8
 1366              	.LVL142:
 1367 0084 FFF7FEFF 		bl	HAL_GPIO_Init
 1368              	.LVL143:
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 1369              		.loc 1 1123 0
 1370 0088 2B69     		ldr	r3, [r5, #16]
 1371 008a 23F0FE73 		bic	r3, r3, #33292288
 1372 008e 3443     		orrs	r4, r4, r6
 1373              	.LVL144:
 1374 0090 1C43     		orrs	r4, r4, r3
 1375 0092 2C61     		str	r4, [r5, #16]
 1376 0094 DBE7     		b	.L149
 1377              	.L155:
 1378 0096 00BF     		.align	2
 1379              	.L154:
 1380 0098 00440258 		.word	1476543488
 1381 009c 00080258 		.word	1476528128
 1382 00a0 00000258 		.word	1476526080
 1383              		.cfi_endproc
 1384              	.LFE144:
 1386              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1387              		.align	1
 1388              		.global	HAL_RCC_EnableCSS
 1389              		.syntax unified
 1390              		.thumb
 1391              		.thumb_func
 1392              		.fpu fpv5-d16
 1394              	HAL_RCC_EnableCSS:
 1395              	.LFB145:
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
ARM GAS  /tmp/ccWY3npq.s 			page 48


1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         the Cortex-M NMI (Non-Mask-able Interrupt) exception vector.
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 1396              		.loc 1 1155 0
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 0
 1399              		@ frame_needed = 0, uses_anonymous_args = 0
 1400              		@ link register save eliminated.
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSHSEON) ;
 1401              		.loc 1 1156 0
 1402 0000 024A     		ldr	r2, .L157
 1403 0002 1368     		ldr	r3, [r2]
 1404 0004 43F40023 		orr	r3, r3, #524288
 1405 0008 1360     		str	r3, [r2]
 1406 000a 7047     		bx	lr
 1407              	.L158:
 1408              		.align	2
 1409              	.L157:
 1410 000c 00440258 		.word	1476543488
 1411              		.cfi_endproc
 1412              	.LFE145:
 1414              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1415              		.align	1
 1416              		.global	HAL_RCC_DisableCSS
 1417              		.syntax unified
 1418              		.thumb
 1419              		.thumb_func
 1420              		.fpu fpv5-d16
 1422              	HAL_RCC_DisableCSS:
 1423              	.LFB146:
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 1424              		.loc 1 1164 0
 1425              		.cfi_startproc
 1426              		@ args = 0, pretend = 0, frame = 0
 1427              		@ frame_needed = 0, uses_anonymous_args = 0
 1428              		@ link register save eliminated.
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_CSSHSEON);
 1429              		.loc 1 1165 0
 1430 0000 024A     		ldr	r2, .L160
 1431 0002 1368     		ldr	r3, [r2]
 1432 0004 23F40023 		bic	r3, r3, #524288
 1433 0008 1360     		str	r3, [r2]
 1434 000a 7047     		bx	lr
 1435              	.L161:
ARM GAS  /tmp/ccWY3npq.s 			page 49


 1436              		.align	2
 1437              	.L160:
 1438 000c 00440258 		.word	1476543488
 1439              		.cfi_endproc
 1440              	.LFE146:
 1442              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1443              		.align	1
 1444              		.global	HAL_RCC_GetSysClockFreq
 1445              		.syntax unified
 1446              		.thumb
 1447              		.thumb_func
 1448              		.fpu fpv5-d16
 1450              	HAL_RCC_GetSysClockFreq:
 1451              	.LFB147:
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         constant and the selected clock source:
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     If SYSCLK source is CSI, function returns values based on CSI_VALUE(*)
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(**)
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(***)
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on CSI_VALUE(*),
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *           HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     (*) CSI_VALUE is a constant defined in stm32h7xx_hal_conf.h file (default value
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *               4 MHz) but the real value may vary depending on the variations
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *               in voltage and temperature.
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     (**) HSI_VALUE is a constant defined in stm32h7xx_hal_conf.h file (default value
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *               64 MHz) but the real value may vary depending on the variations
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *               in voltage and temperature.
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     (***) HSE_VALUE is a constant defined in stm32h7xx_hal_conf.h file (default value
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *                have wrong result.
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         value for HSE crystal.
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         baud rate for the communication peripherals or configure other parameters.
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval SYSCLK frequency
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 1452              		.loc 1 1203 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456              		@ link register save eliminated.
ARM GAS  /tmp/ccWY3npq.s 			page 50


1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue;
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   float_t fracn1, pllvco;
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t sysclockfreq;
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 1457              		.loc 1 1210 0
 1458 0000 734B     		ldr	r3, .L180
 1459 0002 1B69     		ldr	r3, [r3, #16]
 1460 0004 03F03803 		and	r3, r3, #56
 1461 0008 102B     		cmp	r3, #16
 1462 000a 00F0DF80 		beq	.L173
 1463 000e 182B     		cmp	r3, #24
 1464 0010 11D0     		beq	.L165
 1465 0012 0BB1     		cbz	r3, .L166
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         sysclockfreq = (uint32_t) (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         sysclockfreq = (uint32_t) HSI_VALUE;
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     break;
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     sysclockfreq = CSI_VALUE;
 1466              		.loc 1 1226 0
 1467 0014 6F48     		ldr	r0, .L180+4
 1468 0016 7047     		bx	lr
 1469              	.L166:
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1470              		.loc 1 1214 0
 1471 0018 6D4B     		ldr	r3, .L180
 1472 001a 1B68     		ldr	r3, [r3]
 1473 001c 13F0200F 		tst	r3, #32
 1474 0020 01D1     		bne	.L179
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 1475              		.loc 1 1220 0
 1476 0022 6D48     		ldr	r0, .L180+8
 1477              	.LVL145:
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     break;
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     sysclockfreq = HSE_VALUE;
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     break;
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     SYSCLK = PLL_VCO / PLLR
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     */
ARM GAS  /tmp/ccWY3npq.s 			page 51


1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if (pllm != 0U)
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       switch (pllsource)
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           hsivalue= (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         else
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         break;
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         break;
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         break;
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       default:
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         break;
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       sysclockfreq =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       sysclockfreq = 0U;
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     break;
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   default:
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     sysclockfreq = CSI_VALUE;
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     break;
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return sysclockfreq;
 1478              		.loc 1 1286 0
 1479 0024 7047     		bx	lr
 1480              	.LVL146:
 1481              	.L179:
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 1482              		.loc 1 1216 0
 1483 0026 6A4B     		ldr	r3, .L180
 1484 0028 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccWY3npq.s 			page 52


 1485 002a C0F3C100 		ubfx	r0, r0, #3, #2
 1486 002e 6A4B     		ldr	r3, .L180+8
 1487 0030 23FA00F0 		lsr	r0, r3, r0
 1488              	.LVL147:
 1489 0034 7047     		bx	lr
 1490              	.LVL148:
 1491              	.L165:
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue;
 1492              		.loc 1 1203 0
 1493 0036 10B4     		push	{r4}
 1494              	.LCFI8:
 1495              		.cfi_def_cfa_offset 4
 1496              		.cfi_offset 4, -4
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 1497              		.loc 1 1238 0
 1498 0038 654A     		ldr	r2, .L180
 1499 003a 916A     		ldr	r1, [r2, #40]
 1500 003c 01F00301 		and	r1, r1, #3
 1501              	.LVL149:
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 1502              		.loc 1 1239 0
 1503 0040 906A     		ldr	r0, [r2, #40]
 1504 0042 C0F30510 		ubfx	r0, r0, #4, #6
 1505              	.LVL150:
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 1506              		.loc 1 1240 0
 1507 0046 D46A     		ldr	r4, [r2, #44]
 1508 0048 04F00104 		and	r4, r4, #1
 1509              	.LVL151:
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1510              		.loc 1 1241 0
 1511 004c 536B     		ldr	r3, [r2, #52]
 1512 004e C3F3CC03 		ubfx	r3, r3, #3, #13
 1513 0052 03FB04F3 		mul	r3, r3, r4
 1514 0056 07EE903A 		vmov	s15, r3	@ int
 1515 005a F8EE677A 		vcvt.f32.u32	s15, s15
 1516              	.LVL152:
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1517              		.loc 1 1243 0
 1518 005e 0028     		cmp	r0, #0
 1519 0060 00F09480 		beq	.L162
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1520              		.loc 1 1245 0
 1521 0064 0129     		cmp	r1, #1
 1522 0066 66D0     		beq	.L168
 1523 0068 F9B1     		cbz	r1, .L169
 1524 006a 0229     		cmp	r1, #2
 1525 006c 00F09180 		beq	.L170
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         break;
 1526              		.loc 1 1269 0
 1527 0070 07EE100A 		vmov	s14, r0	@ int
 1528 0074 F8EE476A 		vcvt.f32.u32	s13, s14
 1529 0078 9FED586A 		vldr.32	s12, .L180+12
 1530 007c 86EE267A 		vdiv.f32	s14, s12, s13
 1531 0080 534B     		ldr	r3, .L180
 1532 0082 1B6B     		ldr	r3, [r3, #48]
 1533 0084 C3F30803 		ubfx	r3, r3, #0, #9
ARM GAS  /tmp/ccWY3npq.s 			page 53


 1534 0088 06EE903A 		vmov	s13, r3	@ int
 1535 008c F8EE666A 		vcvt.f32.u32	s13, s13
 1536 0090 9FED536A 		vldr.32	s12, .L180+16
 1537 0094 67EE867A 		vmul.f32	s15, s15, s12
 1538              	.LVL153:
 1539 0098 76EEA77A 		vadd.f32	s15, s13, s15
 1540 009c F7EE006A 		vmov.f32	s13, #1.0e+0
 1541 00a0 77EEA67A 		vadd.f32	s15, s15, s13
 1542 00a4 27EE277A 		vmul.f32	s14, s14, s15
 1543              	.LVL154:
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 1544              		.loc 1 1270 0
 1545 00a8 61E0     		b	.L172
 1546              	.LVL155:
 1547              	.L169:
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1548              		.loc 1 1249 0
 1549 00aa 494B     		ldr	r3, .L180
 1550 00ac 1B68     		ldr	r3, [r3]
 1551 00ae 13F0200F 		tst	r3, #32
 1552 00b2 23D0     		beq	.L171
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 1553              		.loc 1 1251 0
 1554 00b4 4649     		ldr	r1, .L180
 1555              	.LVL156:
 1556 00b6 0A68     		ldr	r2, [r1]
 1557 00b8 C2F3C102 		ubfx	r2, r2, #3, #2
 1558 00bc 464B     		ldr	r3, .L180+8
 1559 00be D340     		lsrs	r3, r3, r2
 1560              	.LVL157:
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 1561              		.loc 1 1252 0
 1562 00c0 07EE103A 		vmov	s14, r3	@ int
 1563 00c4 F8EE476A 		vcvt.f32.u32	s13, s14
 1564 00c8 07EE100A 		vmov	s14, r0	@ int
 1565 00cc B8EE476A 		vcvt.f32.u32	s12, s14
 1566 00d0 86EE867A 		vdiv.f32	s14, s13, s12
 1567 00d4 0B6B     		ldr	r3, [r1, #48]
 1568              	.LVL158:
 1569 00d6 C3F30803 		ubfx	r3, r3, #0, #9
 1570 00da 06EE903A 		vmov	s13, r3	@ int
 1571 00de F8EE666A 		vcvt.f32.u32	s13, s13
 1572 00e2 9FED3F6A 		vldr.32	s12, .L180+16
 1573 00e6 67EE867A 		vmul.f32	s15, s15, s12
 1574              	.LVL159:
 1575 00ea 76EEA77A 		vadd.f32	s15, s13, s15
 1576 00ee F7EE006A 		vmov.f32	s13, #1.0e+0
 1577 00f2 77EEA67A 		vadd.f32	s15, s15, s13
 1578 00f6 27EE277A 		vmul.f32	s14, s14, s15
 1579              	.LVL160:
 1580 00fa 38E0     		b	.L172
 1581              	.LVL161:
 1582              	.L171:
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 1583              		.loc 1 1256 0
 1584 00fc 07EE100A 		vmov	s14, r0	@ int
 1585 0100 F8EE476A 		vcvt.f32.u32	s13, s14
ARM GAS  /tmp/ccWY3npq.s 			page 54


 1586 0104 9FED376A 		vldr.32	s12, .L180+20
 1587 0108 86EE267A 		vdiv.f32	s14, s12, s13
 1588 010c 304B     		ldr	r3, .L180
 1589 010e 1B6B     		ldr	r3, [r3, #48]
 1590 0110 C3F30803 		ubfx	r3, r3, #0, #9
 1591 0114 06EE903A 		vmov	s13, r3	@ int
 1592 0118 F8EE666A 		vcvt.f32.u32	s13, s13
 1593 011c 9FED306A 		vldr.32	s12, .L180+16
 1594 0120 67EE867A 		vmul.f32	s15, s15, s12
 1595              	.LVL162:
 1596 0124 76EEA77A 		vadd.f32	s15, s13, s15
 1597 0128 F7EE006A 		vmov.f32	s13, #1.0e+0
 1598 012c 77EEA67A 		vadd.f32	s15, s15, s13
 1599 0130 27EE277A 		vmul.f32	s14, s14, s15
 1600              	.LVL163:
 1601 0134 1BE0     		b	.L172
 1602              	.LVL164:
 1603              	.L168:
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         break;
 1604              		.loc 1 1261 0
 1605 0136 07EE100A 		vmov	s14, r0	@ int
 1606 013a F8EE476A 		vcvt.f32.u32	s13, s14
 1607 013e 9FED276A 		vldr.32	s12, .L180+12
 1608 0142 86EE267A 		vdiv.f32	s14, s12, s13
 1609 0146 224B     		ldr	r3, .L180
 1610 0148 1B6B     		ldr	r3, [r3, #48]
 1611 014a C3F30803 		ubfx	r3, r3, #0, #9
 1612 014e 06EE903A 		vmov	s13, r3	@ int
 1613 0152 F8EE666A 		vcvt.f32.u32	s13, s13
 1614 0156 9FED226A 		vldr.32	s12, .L180+16
 1615 015a 67EE867A 		vmul.f32	s15, s15, s12
 1616              	.LVL165:
 1617 015e 76EEA77A 		vadd.f32	s15, s13, s15
 1618 0162 F7EE006A 		vmov.f32	s13, #1.0e+0
 1619 0166 77EEA67A 		vadd.f32	s15, s15, s13
 1620 016a 27EE277A 		vmul.f32	s14, s14, s15
 1621              	.LVL166:
 1622              	.L172:
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       sysclockfreq =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 1623              		.loc 1 1272 0
 1624 016e 184B     		ldr	r3, .L180
 1625 0170 1B6B     		ldr	r3, [r3, #48]
 1626 0172 C3F34623 		ubfx	r3, r3, #9, #7
 1627 0176 0133     		adds	r3, r3, #1
 1628              	.LVL167:
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 1629              		.loc 1 1273 0
 1630 0178 07EE903A 		vmov	s15, r3	@ int
 1631 017c F8EE677A 		vcvt.f32.u32	s15, s15
 1632 0180 C7EE276A 		vdiv.f32	s13, s14, s15
 1633 0184 FCEEE67A 		vcvt.u32.f32	s15, s13
 1634 0188 17EE900A 		vmov	r0, s15	@ int
 1635              	.LVL168:
 1636              	.L162:
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 1637              		.loc 1 1287 0
 1638 018c 5DF8044B 		ldr	r4, [sp], #4
ARM GAS  /tmp/ccWY3npq.s 			page 55


 1639              	.LCFI9:
 1640              		.cfi_remember_state
 1641              		.cfi_restore 4
 1642              		.cfi_def_cfa_offset 0
 1643              	.LVL169:
 1644 0190 7047     		bx	lr
 1645              	.LVL170:
 1646              	.L170:
 1647              	.LCFI10:
 1648              		.cfi_restore_state
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         break;
 1649              		.loc 1 1265 0
 1650 0192 07EE100A 		vmov	s14, r0	@ int
 1651 0196 F8EE476A 		vcvt.f32.u32	s13, s14
 1652 019a 9FED136A 		vldr.32	s12, .L180+24
 1653 019e 86EE267A 		vdiv.f32	s14, s12, s13
 1654 01a2 0B4B     		ldr	r3, .L180
 1655 01a4 1B6B     		ldr	r3, [r3, #48]
 1656 01a6 C3F30803 		ubfx	r3, r3, #0, #9
 1657 01aa 06EE903A 		vmov	s13, r3	@ int
 1658 01ae F8EE666A 		vcvt.f32.u32	s13, s13
 1659 01b2 9FED0B6A 		vldr.32	s12, .L180+16
 1660 01b6 67EE867A 		vmul.f32	s15, s15, s12
 1661              	.LVL171:
 1662 01ba 76EEA77A 		vadd.f32	s15, s13, s15
 1663 01be F7EE006A 		vmov.f32	s13, #1.0e+0
 1664 01c2 77EEA67A 		vadd.f32	s15, s15, s13
 1665 01c6 27EE277A 		vmul.f32	s14, s14, s15
 1666              	.LVL172:
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1667              		.loc 1 1266 0
 1668 01ca D0E7     		b	.L172
 1669              	.LVL173:
 1670              	.L173:
 1671              	.LCFI11:
 1672              		.cfi_def_cfa_offset 0
 1673              		.cfi_restore 4
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     break;
 1674              		.loc 1 1230 0
 1675 01cc 0748     		ldr	r0, .L180+28
 1676 01ce 7047     		bx	lr
 1677              	.L181:
 1678              		.align	2
 1679              	.L180:
 1680 01d0 00440258 		.word	1476543488
 1681 01d4 00093D00 		.word	4000000
 1682 01d8 0090D003 		.word	64000000
 1683 01dc 0024744A 		.word	1249125376
 1684 01e0 00000039 		.word	956301312
 1685 01e4 0024744C 		.word	1282679808
 1686 01e8 20BCBE4B 		.word	1270791200
 1687 01ec 40787D01 		.word	25000000
 1688              		.cfi_endproc
 1689              	.LFE147:
 1691              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1692              		.align	1
 1693              		.global	HAL_RCC_ClockConfig
ARM GAS  /tmp/ccWY3npq.s 			page 56


 1694              		.syntax unified
 1695              		.thumb
 1696              		.thumb_func
 1697              		.fpu fpv5-d16
 1699              	HAL_RCC_ClockConfig:
 1700              	.LFB143:
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   HAL_StatusTypeDef halstatus;
 1701              		.loc 1 839 0
 1702              		.cfi_startproc
 1703              		@ args = 0, pretend = 0, frame = 0
 1704              		@ frame_needed = 0, uses_anonymous_args = 0
 1705              	.LVL174:
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 1706              		.loc 1 844 0
 1707 0000 0028     		cmp	r0, #0
 1708 0002 00F02B81 		beq	.L203
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   HAL_StatusTypeDef halstatus;
 1709              		.loc 1 839 0
 1710 0006 70B5     		push	{r4, r5, r6, lr}
 1711              	.LCFI12:
 1712              		.cfi_def_cfa_offset 16
 1713              		.cfi_offset 4, -16
 1714              		.cfi_offset 5, -12
 1715              		.cfi_offset 6, -8
 1716              		.cfi_offset 14, -4
 1717 0008 0446     		mov	r4, r0
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 1718              		.loc 1 858 0
 1719 000a 964B     		ldr	r3, .L218
 1720 000c 1B68     		ldr	r3, [r3]
 1721 000e 03F00F03 		and	r3, r3, #15
 1722 0012 8B42     		cmp	r3, r1
 1723 0014 0CD2     		bcs	.L184
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1724              		.loc 1 861 0
 1725 0016 934A     		ldr	r2, .L218
 1726 0018 1368     		ldr	r3, [r2]
 1727 001a 23F00F03 		bic	r3, r3, #15
 1728 001e 0B43     		orrs	r3, r3, r1
 1729 0020 1360     		str	r3, [r2]
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1730              		.loc 1 865 0
 1731 0022 1368     		ldr	r3, [r2]
 1732 0024 03F00F03 		and	r3, r3, #15
 1733 0028 9942     		cmp	r1, r3
 1734 002a 01D0     		beq	.L184
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 1735              		.loc 1 867 0
 1736 002c 0120     		movs	r0, #1
 1737              	.LVL175:
 1738 002e 70BD     		pop	{r4, r5, r6, pc}
 1739              	.LVL176:
 1740              	.L184:
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 1741              		.loc 1 874 0
 1742 0030 2368     		ldr	r3, [r4]
 1743 0032 13F0040F 		tst	r3, #4
ARM GAS  /tmp/ccWY3npq.s 			page 57


 1744 0036 0CD0     		beq	.L185
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1745              		.loc 1 876 0
 1746 0038 2269     		ldr	r2, [r4, #16]
 1747 003a 8B4B     		ldr	r3, .L218+4
 1748 003c 9B69     		ldr	r3, [r3, #24]
 1749 003e 03F07003 		and	r3, r3, #112
 1750 0042 9A42     		cmp	r2, r3
 1751 0044 05D9     		bls	.L185
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 1752              		.loc 1 879 0
 1753 0046 8848     		ldr	r0, .L218+4
 1754              	.LVL177:
 1755 0048 8369     		ldr	r3, [r0, #24]
 1756 004a 23F07003 		bic	r3, r3, #112
 1757 004e 1A43     		orrs	r2, r2, r3
 1758 0050 8261     		str	r2, [r0, #24]
 1759              	.L185:
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 1760              		.loc 1 884 0
 1761 0052 2368     		ldr	r3, [r4]
 1762 0054 13F0080F 		tst	r3, #8
 1763 0058 0CD0     		beq	.L186
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1764              		.loc 1 886 0
 1765 005a 6269     		ldr	r2, [r4, #20]
 1766 005c 824B     		ldr	r3, .L218+4
 1767 005e DB69     		ldr	r3, [r3, #28]
 1768 0060 03F07003 		and	r3, r3, #112
 1769 0064 9A42     		cmp	r2, r3
 1770 0066 05D9     		bls	.L186
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 1771              		.loc 1 889 0
 1772 0068 7F48     		ldr	r0, .L218+4
 1773 006a C369     		ldr	r3, [r0, #28]
 1774 006c 23F07003 		bic	r3, r3, #112
 1775 0070 1A43     		orrs	r2, r2, r3
 1776 0072 C261     		str	r2, [r0, #28]
 1777              	.L186:
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 1778              		.loc 1 894 0
 1779 0074 2368     		ldr	r3, [r4]
 1780 0076 13F0100F 		tst	r3, #16
 1781 007a 0CD0     		beq	.L187
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1782              		.loc 1 896 0
 1783 007c A269     		ldr	r2, [r4, #24]
 1784 007e 7A4B     		ldr	r3, .L218+4
 1785 0080 DB69     		ldr	r3, [r3, #28]
 1786 0082 03F4E063 		and	r3, r3, #1792
 1787 0086 9A42     		cmp	r2, r3
 1788 0088 05D9     		bls	.L187
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 1789              		.loc 1 899 0
 1790 008a 7748     		ldr	r0, .L218+4
 1791 008c C369     		ldr	r3, [r0, #28]
 1792 008e 23F4E063 		bic	r3, r3, #1792
ARM GAS  /tmp/ccWY3npq.s 			page 58


 1793 0092 1A43     		orrs	r2, r2, r3
 1794 0094 C261     		str	r2, [r0, #28]
 1795              	.L187:
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 1796              		.loc 1 904 0
 1797 0096 2368     		ldr	r3, [r4]
 1798 0098 13F0200F 		tst	r3, #32
 1799 009c 0CD0     		beq	.L188
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1800              		.loc 1 906 0
 1801 009e E269     		ldr	r2, [r4, #28]
 1802 00a0 714B     		ldr	r3, .L218+4
 1803 00a2 1B6A     		ldr	r3, [r3, #32]
 1804 00a4 03F07003 		and	r3, r3, #112
 1805 00a8 9A42     		cmp	r2, r3
 1806 00aa 05D9     		bls	.L188
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 1807              		.loc 1 909 0
 1808 00ac 6E48     		ldr	r0, .L218+4
 1809 00ae 036A     		ldr	r3, [r0, #32]
 1810 00b0 23F07003 		bic	r3, r3, #112
 1811 00b4 1A43     		orrs	r2, r2, r3
 1812 00b6 0262     		str	r2, [r0, #32]
 1813              	.L188:
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 1814              		.loc 1 914 0
 1815 00b8 2368     		ldr	r3, [r4]
 1816 00ba 13F0020F 		tst	r3, #2
 1817 00be 0CD0     		beq	.L189
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1818              		.loc 1 916 0
 1819 00c0 E268     		ldr	r2, [r4, #12]
 1820 00c2 694B     		ldr	r3, .L218+4
 1821 00c4 9B69     		ldr	r3, [r3, #24]
 1822 00c6 03F00F03 		and	r3, r3, #15
 1823 00ca 9A42     		cmp	r2, r3
 1824 00cc 05D9     		bls	.L189
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 1825              		.loc 1 920 0
 1826 00ce 6648     		ldr	r0, .L218+4
 1827 00d0 8369     		ldr	r3, [r0, #24]
 1828 00d2 23F00F03 		bic	r3, r3, #15
 1829 00d6 1A43     		orrs	r2, r2, r3
 1830 00d8 8261     		str	r2, [r0, #24]
 1831              	.L189:
 1832 00da 0D46     		mov	r5, r1
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1833              		.loc 1 925 0
 1834 00dc 2368     		ldr	r3, [r4]
 1835 00de 13F0010F 		tst	r3, #1
 1836 00e2 41D0     		beq	.L190
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* HSE is selected as System Clock Source */
 1837              		.loc 1 929 0
 1838 00e4 604A     		ldr	r2, .L218+4
 1839 00e6 9369     		ldr	r3, [r2, #24]
 1840 00e8 23F47063 		bic	r3, r3, #3840
 1841 00ec A168     		ldr	r1, [r4, #8]
ARM GAS  /tmp/ccWY3npq.s 			page 59


 1842              	.LVL178:
 1843 00ee 0B43     		orrs	r3, r3, r1
 1844 00f0 9361     		str	r3, [r2, #24]
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1845              		.loc 1 931 0
 1846 00f2 6368     		ldr	r3, [r4, #4]
 1847 00f4 022B     		cmp	r3, #2
 1848 00f6 23D0     		beq	.L215
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1849              		.loc 1 940 0
 1850 00f8 032B     		cmp	r3, #3
 1851 00fa 27D0     		beq	.L216
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1852              		.loc 1 949 0
 1853 00fc 012B     		cmp	r3, #1
 1854 00fe 2CD0     		beq	.L217
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1855              		.loc 1 961 0
 1856 0100 594A     		ldr	r2, .L218+4
 1857 0102 1268     		ldr	r2, [r2]
 1858 0104 12F0040F 		tst	r2, #4
 1859 0108 00F0AA80 		beq	.L208
 1860              	.L192:
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1861              		.loc 1 966 0
 1862 010c 5649     		ldr	r1, .L218+4
 1863 010e 0A69     		ldr	r2, [r1, #16]
 1864 0110 22F00702 		bic	r2, r2, #7
 1865 0114 1343     		orrs	r3, r3, r2
 1866 0116 0B61     		str	r3, [r1, #16]
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1867              		.loc 1 969 0
 1868 0118 FFF7FEFF 		bl	HAL_GetTick
 1869              	.LVL179:
 1870 011c 0646     		mov	r6, r0
 1871              	.LVL180:
 1872              	.L195:
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1873              		.loc 1 971 0
 1874 011e 524B     		ldr	r3, .L218+4
 1875 0120 1B69     		ldr	r3, [r3, #16]
 1876 0122 03F03803 		and	r3, r3, #56
 1877 0126 6268     		ldr	r2, [r4, #4]
 1878 0128 B3EBC20F 		cmp	r3, r2, lsl #3
 1879 012c 1CD0     		beq	.L190
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 1880              		.loc 1 973 0
 1881 012e FFF7FEFF 		bl	HAL_GetTick
 1882              	.LVL181:
 1883 0132 801B     		subs	r0, r0, r6
 1884 0134 41F28833 		movw	r3, #5000
 1885 0138 9842     		cmp	r0, r3
 1886 013a F0D9     		bls	.L195
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 1887              		.loc 1 975 0
 1888 013c 0320     		movs	r0, #3
 1889 013e 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccWY3npq.s 			page 60


 1890              	.LVL182:
 1891              	.L215:
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1892              		.loc 1 934 0
 1893 0140 1268     		ldr	r2, [r2]
 1894 0142 12F4003F 		tst	r2, #131072
 1895 0146 E1D1     		bne	.L192
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 1896              		.loc 1 936 0
 1897 0148 0120     		movs	r0, #1
 1898 014a 70BD     		pop	{r4, r5, r6, pc}
 1899              	.LVL183:
 1900              	.L216:
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1901              		.loc 1 943 0
 1902 014c 464A     		ldr	r2, .L218+4
 1903 014e 1268     		ldr	r2, [r2]
 1904 0150 12F0007F 		tst	r2, #33554432
 1905 0154 DAD1     		bne	.L192
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 1906              		.loc 1 945 0
 1907 0156 0120     		movs	r0, #1
 1908 0158 70BD     		pop	{r4, r5, r6, pc}
 1909              	.LVL184:
 1910              	.L217:
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1911              		.loc 1 952 0
 1912 015a 434A     		ldr	r2, .L218+4
 1913 015c 1268     		ldr	r2, [r2]
 1914 015e 12F4807F 		tst	r2, #256
 1915 0162 D3D1     		bne	.L192
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 1916              		.loc 1 954 0
 1917 0164 0120     		movs	r0, #1
 1918 0166 70BD     		pop	{r4, r5, r6, pc}
 1919              	.LVL185:
 1920              	.L190:
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 1921              		.loc 1 983 0
 1922 0168 2368     		ldr	r3, [r4]
 1923 016a 13F0020F 		tst	r3, #2
 1924 016e 0CD0     		beq	.L197
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1925              		.loc 1 985 0
 1926 0170 E268     		ldr	r2, [r4, #12]
 1927 0172 3D4B     		ldr	r3, .L218+4
 1928 0174 9B69     		ldr	r3, [r3, #24]
 1929 0176 03F00F03 		and	r3, r3, #15
 1930 017a 9A42     		cmp	r2, r3
 1931 017c 05D2     		bcs	.L197
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 1932              		.loc 1 989 0
 1933 017e 3A49     		ldr	r1, .L218+4
 1934 0180 8B69     		ldr	r3, [r1, #24]
 1935 0182 23F00F03 		bic	r3, r3, #15
 1936 0186 1A43     		orrs	r2, r2, r3
 1937 0188 8A61     		str	r2, [r1, #24]
ARM GAS  /tmp/ccWY3npq.s 			page 61


 1938              	.L197:
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 1939              		.loc 1 994 0
 1940 018a 364B     		ldr	r3, .L218
 1941 018c 1B68     		ldr	r3, [r3]
 1942 018e 03F00F03 		and	r3, r3, #15
 1943 0192 9D42     		cmp	r5, r3
 1944 0194 0CD2     		bcs	.L198
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1945              		.loc 1 997 0
 1946 0196 334A     		ldr	r2, .L218
 1947 0198 1368     		ldr	r3, [r2]
 1948 019a 23F00F03 		bic	r3, r3, #15
 1949 019e 2B43     		orrs	r3, r3, r5
 1950 01a0 1360     		str	r3, [r2]
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1951              		.loc 1 1001 0
 1952 01a2 1368     		ldr	r3, [r2]
 1953 01a4 03F00F03 		and	r3, r3, #15
 1954 01a8 9D42     		cmp	r5, r3
 1955 01aa 01D0     		beq	.L198
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 1956              		.loc 1 1003 0
 1957 01ac 0120     		movs	r0, #1
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 1958              		.loc 1 1054 0
 1959 01ae 70BD     		pop	{r4, r5, r6, pc}
 1960              	.LVL186:
 1961              	.L198:
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  {
 1962              		.loc 1 1008 0
 1963 01b0 2368     		ldr	r3, [r4]
 1964 01b2 13F0040F 		tst	r3, #4
 1965 01b6 0CD0     		beq	.L199
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
 1966              		.loc 1 1010 0
 1967 01b8 2269     		ldr	r2, [r4, #16]
 1968 01ba 2B4B     		ldr	r3, .L218+4
 1969 01bc 9B69     		ldr	r3, [r3, #24]
 1970 01be 03F07003 		and	r3, r3, #112
 1971 01c2 9A42     		cmp	r2, r3
 1972 01c4 05D2     		bcs	.L199
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
 1973              		.loc 1 1013 0
 1974 01c6 2849     		ldr	r1, .L218+4
 1975 01c8 8B69     		ldr	r3, [r1, #24]
 1976 01ca 23F07003 		bic	r3, r3, #112
 1977 01ce 1A43     		orrs	r2, r2, r3
 1978 01d0 8A61     		str	r2, [r1, #24]
 1979              	.L199:
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  {
 1980              		.loc 1 1018 0
 1981 01d2 2368     		ldr	r3, [r4]
 1982 01d4 13F0080F 		tst	r3, #8
 1983 01d8 0CD0     		beq	.L200
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
 1984              		.loc 1 1020 0
ARM GAS  /tmp/ccWY3npq.s 			page 62


 1985 01da 6269     		ldr	r2, [r4, #20]
 1986 01dc 224B     		ldr	r3, .L218+4
 1987 01de DB69     		ldr	r3, [r3, #28]
 1988 01e0 03F07003 		and	r3, r3, #112
 1989 01e4 9A42     		cmp	r2, r3
 1990 01e6 05D2     		bcs	.L200
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
 1991              		.loc 1 1023 0
 1992 01e8 1F49     		ldr	r1, .L218+4
 1993 01ea CB69     		ldr	r3, [r1, #28]
 1994 01ec 23F07003 		bic	r3, r3, #112
 1995 01f0 1A43     		orrs	r2, r2, r3
 1996 01f2 CA61     		str	r2, [r1, #28]
 1997              	.L200:
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  {
 1998              		.loc 1 1028 0
 1999 01f4 2368     		ldr	r3, [r4]
 2000 01f6 13F0100F 		tst	r3, #16
 2001 01fa 0CD0     		beq	.L201
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
 2002              		.loc 1 1030 0
 2003 01fc A269     		ldr	r2, [r4, #24]
 2004 01fe 1A4B     		ldr	r3, .L218+4
 2005 0200 DB69     		ldr	r3, [r3, #28]
 2006 0202 03F4E063 		and	r3, r3, #1792
 2007 0206 9A42     		cmp	r2, r3
 2008 0208 05D2     		bcs	.L201
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
 2009              		.loc 1 1033 0
 2010 020a 1749     		ldr	r1, .L218+4
 2011 020c CB69     		ldr	r3, [r1, #28]
 2012 020e 23F4E063 		bic	r3, r3, #1792
 2013 0212 1A43     		orrs	r2, r2, r3
 2014 0214 CA61     		str	r2, [r1, #28]
 2015              	.L201:
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  {
 2016              		.loc 1 1038 0
 2017 0216 2368     		ldr	r3, [r4]
 2018 0218 13F0200F 		tst	r3, #32
 2019 021c 0CD0     		beq	.L202
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
 2020              		.loc 1 1040 0
 2021 021e E269     		ldr	r2, [r4, #28]
 2022 0220 114B     		ldr	r3, .L218+4
 2023 0222 1B6A     		ldr	r3, [r3, #32]
 2024 0224 03F07003 		and	r3, r3, #112
 2025 0228 9A42     		cmp	r2, r3
 2026 022a 05D2     		bcs	.L202
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
 2027              		.loc 1 1043 0
 2028 022c 0E49     		ldr	r1, .L218+4
 2029 022e 0B6A     		ldr	r3, [r1, #32]
 2030 0230 23F07003 		bic	r3, r3, #112
 2031 0234 1A43     		orrs	r2, r2, r3
 2032 0236 0A62     		str	r2, [r1, #32]
 2033              	.L202:
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccWY3npq.s 			page 63


 2034              		.loc 1 1048 0
 2035 0238 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2036              	.LVL187:
 2037 023c 0A4B     		ldr	r3, .L218+4
 2038 023e 9B69     		ldr	r3, [r3, #24]
 2039 0240 C3F30323 		ubfx	r3, r3, #8, #4
 2040 0244 094A     		ldr	r2, .L218+8
 2041 0246 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2042 0248 03F01F03 		and	r3, r3, #31
 2043 024c D840     		lsrs	r0, r0, r3
 2044 024e 084B     		ldr	r3, .L218+12
 2045 0250 1860     		str	r0, [r3]
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 2046              		.loc 1 1051 0
 2047 0252 084B     		ldr	r3, .L218+16
 2048 0254 1868     		ldr	r0, [r3]
 2049 0256 FFF7FEFF 		bl	HAL_InitTick
 2050              	.LVL188:
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2051              		.loc 1 1053 0
 2052 025a 70BD     		pop	{r4, r5, r6, pc}
 2053              	.LVL189:
 2054              	.L203:
 2055              	.LCFI13:
 2056              		.cfi_def_cfa_offset 0
 2057              		.cfi_restore 4
 2058              		.cfi_restore 5
 2059              		.cfi_restore 6
 2060              		.cfi_restore 14
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2061              		.loc 1 846 0
 2062 025c 0120     		movs	r0, #1
 2063              	.LVL190:
 2064 025e 7047     		bx	lr
 2065              	.LVL191:
 2066              	.L208:
 2067              	.LCFI14:
 2068              		.cfi_def_cfa_offset 16
 2069              		.cfi_offset 4, -16
 2070              		.cfi_offset 5, -12
 2071              		.cfi_offset 6, -8
 2072              		.cfi_offset 14, -4
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2073              		.loc 1 963 0
 2074 0260 0120     		movs	r0, #1
 2075 0262 70BD     		pop	{r4, r5, r6, pc}
 2076              	.LVL192:
 2077              	.L219:
 2078              		.align	2
 2079              	.L218:
 2080 0264 00200052 		.word	1375739904
 2081 0268 00440258 		.word	1476543488
 2082 026c 00000000 		.word	D1CorePrescTable
 2083 0270 00000000 		.word	SystemCoreClock
 2084 0274 00000000 		.word	uwTickPrio
 2085              		.cfi_endproc
 2086              	.LFE143:
ARM GAS  /tmp/ccWY3npq.s 			page 64


 2088              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2089              		.align	1
 2090              		.global	HAL_RCC_GetHCLKFreq
 2091              		.syntax unified
 2092              		.thumb
 2093              		.thumb_func
 2094              		.fpu fpv5-d16
 2096              	HAL_RCC_GetHCLKFreq:
 2097              	.LFB148:
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         and updated within this function
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval HCLK frequency
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2098              		.loc 1 1300 0
 2099              		.cfi_startproc
 2100              		@ args = 0, pretend = 0, frame = 0
 2101              		@ frame_needed = 0, uses_anonymous_args = 0
 2102 0000 08B5     		push	{r3, lr}
 2103              	.LCFI15:
 2104              		.cfi_def_cfa_offset 8
 2105              		.cfi_offset 3, -8
 2106              		.cfi_offset 14, -4
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemD2Clock = (HAL_RCCEx_GetD1SysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HP
 2107              		.loc 1 1301 0
 2108 0002 FFF7FEFF 		bl	HAL_RCCEx_GetD1SysClockFreq
 2109              	.LVL193:
 2110 0006 064B     		ldr	r3, .L222
 2111 0008 9B69     		ldr	r3, [r3, #24]
 2112 000a 03F00F03 		and	r3, r3, #15
 2113 000e 054A     		ldr	r2, .L222+4
 2114 0010 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2115 0012 03F01F03 		and	r3, r3, #31
 2116 0016 D840     		lsrs	r0, r0, r3
 2117 0018 034B     		ldr	r3, .L222+8
 2118 001a 1860     		str	r0, [r3]
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return SystemD2Clock;
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2119              		.loc 1 1303 0
 2120 001c 08BD     		pop	{r3, pc}
 2121              	.L223:
 2122 001e 00BF     		.align	2
 2123              	.L222:
 2124 0020 00440258 		.word	1476543488
 2125 0024 00000000 		.word	D1CorePrescTable
 2126 0028 00000000 		.word	SystemD2Clock
 2127              		.cfi_endproc
 2128              	.LFE148:
 2130              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
ARM GAS  /tmp/ccWY3npq.s 			page 65


 2131              		.align	1
 2132              		.global	HAL_RCC_GetPCLK1Freq
 2133              		.syntax unified
 2134              		.thumb
 2135              		.thumb_func
 2136              		.fpu fpv5-d16
 2138              	HAL_RCC_GetPCLK1Freq:
 2139              	.LFB149:
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval PCLK1 frequency
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2140              		.loc 1 1313 0
 2141              		.cfi_startproc
 2142              		@ args = 0, pretend = 0, frame = 0
 2143              		@ frame_needed = 0, uses_anonymous_args = 0
 2144 0000 08B5     		push	{r3, lr}
 2145              	.LCFI16:
 2146              		.cfi_def_cfa_offset 8
 2147              		.cfi_offset 3, -8
 2148              		.cfi_offset 14, -4
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1)>> RCC_D2CF
 2149              		.loc 1 1315 0
 2150 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2151              	.LVL194:
 2152 0006 054B     		ldr	r3, .L226
 2153 0008 DB69     		ldr	r3, [r3, #28]
 2154 000a C3F30213 		ubfx	r3, r3, #4, #3
 2155 000e 044A     		ldr	r2, .L226+4
 2156 0010 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2157 0012 03F01F03 		and	r3, r3, #31
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2158              		.loc 1 1316 0
 2159 0016 D840     		lsrs	r0, r0, r3
 2160 0018 08BD     		pop	{r3, pc}
 2161              	.L227:
 2162 001a 00BF     		.align	2
 2163              	.L226:
 2164 001c 00440258 		.word	1476543488
 2165 0020 00000000 		.word	D1CorePrescTable
 2166              		.cfi_endproc
 2167              	.LFE149:
 2169              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2170              		.align	1
 2171              		.global	HAL_RCC_GetPCLK2Freq
 2172              		.syntax unified
 2173              		.thumb
 2174              		.thumb_func
 2175              		.fpu fpv5-d16
 2177              	HAL_RCC_GetPCLK2Freq:
ARM GAS  /tmp/ccWY3npq.s 			page 66


 2178              	.LFB150:
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval PCLK1 frequency
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2179              		.loc 1 1326 0
 2180              		.cfi_startproc
 2181              		@ args = 0, pretend = 0, frame = 0
 2182              		@ frame_needed = 0, uses_anonymous_args = 0
 2183 0000 08B5     		push	{r3, lr}
 2184              	.LCFI17:
 2185              		.cfi_def_cfa_offset 8
 2186              		.cfi_offset 3, -8
 2187              		.cfi_offset 14, -4
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2)>> RCC_D2CF
 2188              		.loc 1 1328 0
 2189 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2190              	.LVL195:
 2191 0006 054B     		ldr	r3, .L230
 2192 0008 DB69     		ldr	r3, [r3, #28]
 2193 000a C3F30223 		ubfx	r3, r3, #8, #3
 2194 000e 044A     		ldr	r2, .L230+4
 2195 0010 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2196 0012 03F01F03 		and	r3, r3, #31
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2197              		.loc 1 1329 0
 2198 0016 D840     		lsrs	r0, r0, r3
 2199 0018 08BD     		pop	{r3, pc}
 2200              	.L231:
 2201 001a 00BF     		.align	2
 2202              	.L230:
 2203 001c 00440258 		.word	1476543488
 2204 0020 00000000 		.word	D1CorePrescTable
 2205              		.cfi_endproc
 2206              	.LFE150:
 2208              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2209              		.align	1
 2210              		.global	HAL_RCC_GetOscConfig
 2211              		.syntax unified
 2212              		.thumb
 2213              		.thumb_func
 2214              		.fpu fpv5-d16
 2216              	HAL_RCC_GetOscConfig:
 2217              	.LFB151:
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * RCC configuration registers.
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_OscInitStruct: pointer to an RCC_OscInitTypeDef structure that
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * will be configured.
ARM GAS  /tmp/ccWY3npq.s 			page 67


1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2218              		.loc 1 1339 0
 2219              		.cfi_startproc
 2220              		@ args = 0, pretend = 0, frame = 0
 2221              		@ frame_needed = 0, uses_anonymous_args = 0
 2222              	.LVL196:
 2223 0000 10B5     		push	{r4, lr}
 2224              	.LCFI18:
 2225              		.cfi_def_cfa_offset 8
 2226              		.cfi_offset 4, -8
 2227              		.cfi_offset 14, -4
 2228 0002 0446     		mov	r4, r0
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 2229              		.loc 1 1341 0
 2230 0004 3F23     		movs	r3, #63
 2231 0006 0360     		str	r3, [r0]
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI| RCC_OSCILLAT
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2232              		.loc 1 1345 0
 2233 0008 514B     		ldr	r3, .L255
 2234 000a 1B68     		ldr	r3, [r3]
 2235 000c 13F4802F 		tst	r3, #262144
 2236 0010 6CD0     		beq	.L233
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2237              		.loc 1 1347 0
 2238 0012 4FF4A023 		mov	r3, #327680
 2239 0016 4360     		str	r3, [r0, #4]
 2240              	.L234:
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    /* Get the CSI configuration -----------------------------------------------*/
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_CSION) == RCC_CR_CSION)
 2241              		.loc 1 1359 0
 2242 0018 4D4B     		ldr	r3, .L255
 2243 001a 1B68     		ldr	r3, [r3]
 2244 001c 13F0800F 		tst	r3, #128
 2245 0020 70D0     		beq	.L236
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->CSIState = RCC_CSI_ON;
 2246              		.loc 1 1361 0
 2247 0022 8023     		movs	r3, #128
 2248 0024 E361     		str	r3, [r4, #28]
ARM GAS  /tmp/ccWY3npq.s 			page 68


 2249              	.L237:
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->CSIState = RCC_CSI_OFF;
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(HAL_GetREVID() <= REV_ID_Y)
 2250              		.loc 1 1368 0
 2251 0026 FFF7FEFF 		bl	HAL_GetREVID
 2252              	.LVL197:
 2253 002a 41F20303 		movw	r3, #4099
 2254 002e 9842     		cmp	r0, r3
 2255 0030 6BD8     		bhi	.L238
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->CSICalibrationValue = (uint32_t)(READ_BIT(RCC->HSICFGR, HAL_RCC_REV_Y_CSITRI
 2256              		.loc 1 1370 0
 2257 0032 474B     		ldr	r3, .L255
 2258 0034 5B68     		ldr	r3, [r3, #4]
 2259 0036 C3F38463 		ubfx	r3, r3, #26, #5
 2260 003a 2362     		str	r3, [r4, #32]
 2261              	.L239:
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->CSICalibrationValue = (uint32_t)(READ_BIT(RCC->CSICFGR, RCC_CSICFGR_CSITRIM)
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2262              		.loc 1 1378 0
 2263 003c 444B     		ldr	r3, .L255
 2264 003e 1B68     		ldr	r3, [r3]
 2265 0040 13F0010F 		tst	r3, #1
 2266 0044 67D0     		beq	.L240
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2267              		.loc 1 1380 0
 2268 0046 0123     		movs	r3, #1
 2269 0048 E360     		str	r3, [r4, #12]
 2270              	.L241:
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(HAL_GetREVID() <= REV_ID_Y)
 2271              		.loc 1 1387 0
 2272 004a FFF7FEFF 		bl	HAL_GetREVID
 2273              	.LVL198:
 2274 004e 41F20303 		movw	r3, #4099
 2275 0052 9842     		cmp	r0, r3
 2276 0054 62D8     		bhi	.L242
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSICalibrationValue = (uint32_t)(READ_BIT(RCC->HSICFGR, HAL_RCC_REV_Y_HSITRI
 2277              		.loc 1 1389 0
ARM GAS  /tmp/ccWY3npq.s 			page 69


 2278 0056 3E4B     		ldr	r3, .L255
 2279 0058 5B68     		ldr	r3, [r3, #4]
 2280 005a C3F30533 		ubfx	r3, r3, #12, #6
 2281 005e 2361     		str	r3, [r4, #16]
 2282              	.L243:
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSICalibrationValue = (uint32_t)(READ_BIT(RCC->HSICFGR, RCC_HSICFGR_HSITRIM)
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2283              		.loc 1 1397 0
 2284 0060 3B4B     		ldr	r3, .L255
 2285 0062 1B6F     		ldr	r3, [r3, #112]
 2286 0064 13F0040F 		tst	r3, #4
 2287 0068 5ED0     		beq	.L244
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2288              		.loc 1 1399 0
 2289 006a 0523     		movs	r3, #5
 2290 006c A360     		str	r3, [r4, #8]
 2291              	.L245:
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2292              		.loc 1 1411 0
 2293 006e 384B     		ldr	r3, .L255
 2294 0070 5B6F     		ldr	r3, [r3, #116]
 2295 0072 13F0010F 		tst	r3, #1
 2296 0076 62D0     		beq	.L247
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2297              		.loc 1 1413 0
 2298 0078 0123     		movs	r3, #1
 2299 007a 6361     		str	r3, [r4, #20]
 2300              	.L248:
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the HSI48 configuration ---------------------------------------------*/
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CR & RCC_CR_HSI48ON) == RCC_CR_HSI48ON)
 2301              		.loc 1 1421 0
 2302 007c 344B     		ldr	r3, .L255
ARM GAS  /tmp/ccWY3npq.s 			page 70


 2303 007e 1B68     		ldr	r3, [r3]
 2304 0080 13F4805F 		tst	r3, #4096
 2305 0084 5ED0     		beq	.L249
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_ON;
 2306              		.loc 1 1423 0
 2307 0086 0123     		movs	r3, #1
 2308 0088 A361     		str	r3, [r4, #24]
 2309              	.L250:
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_OFF;
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2310              		.loc 1 1431 0
 2311 008a 314B     		ldr	r3, .L255
 2312 008c 1B68     		ldr	r3, [r3]
 2313 008e 13F0807F 		tst	r3, #16777216
 2314 0092 5AD1     		bne	.L254
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2315              		.loc 1 1437 0
 2316 0094 0123     		movs	r3, #1
 2317 0096 6362     		str	r3, [r4, #36]
 2318              	.L252:
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 2319              		.loc 1 1439 0
 2320 0098 2D4B     		ldr	r3, .L255
 2321 009a 9A6A     		ldr	r2, [r3, #40]
 2322 009c 02F00302 		and	r2, r2, #3
 2323 00a0 A262     		str	r2, [r4, #40]
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> RCC_PLLCKSELR_D
 2324              		.loc 1 1440 0
 2325 00a2 9A6A     		ldr	r2, [r3, #40]
 2326 00a4 C2F30512 		ubfx	r2, r2, #4, #6
 2327 00a8 E262     		str	r2, [r4, #44]
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_N1) >> RCC_PLL1DIVR_N1_Pos
 2328              		.loc 1 1441 0
 2329 00aa 1A6B     		ldr	r2, [r3, #48]
 2330 00ac C2F30802 		ubfx	r2, r2, #0, #9
 2331 00b0 0132     		adds	r2, r2, #1
 2332 00b2 2263     		str	r2, [r4, #48]
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos
 2333              		.loc 1 1442 0
 2334 00b4 1A6B     		ldr	r2, [r3, #48]
 2335 00b6 C2F30662 		ubfx	r2, r2, #24, #7
 2336 00ba 0132     		adds	r2, r2, #1
 2337 00bc E263     		str	r2, [r4, #60]
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos
ARM GAS  /tmp/ccWY3npq.s 			page 71


 2338              		.loc 1 1443 0
 2339 00be 1A6B     		ldr	r2, [r3, #48]
 2340 00c0 C2F34622 		ubfx	r2, r2, #9, #7
 2341 00c4 0132     		adds	r2, r2, #1
 2342 00c6 6263     		str	r2, [r4, #52]
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos
 2343              		.loc 1 1444 0
 2344 00c8 1A6B     		ldr	r2, [r3, #48]
 2345 00ca C2F30642 		ubfx	r2, r2, #16, #7
 2346 00ce 0132     		adds	r2, r2, #1
 2347 00d0 A263     		str	r2, [r4, #56]
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLRGE = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLL1RGE));
 2348              		.loc 1 1445 0
 2349 00d2 DA6A     		ldr	r2, [r3, #44]
 2350 00d4 02F00C02 		and	r2, r2, #12
 2351 00d8 2264     		str	r2, [r4, #64]
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLVCOSEL = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLL1VCOSEL) >> RCC_PLLC
 2352              		.loc 1 1446 0
 2353 00da DA6A     		ldr	r2, [r3, #44]
 2354 00dc C2F34002 		ubfx	r2, r2, #1, #1
 2355 00e0 6264     		str	r2, [r4, #68]
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLFRACN = (uint32_t)(((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1
 2356              		.loc 1 1447 0
 2357 00e2 5B6B     		ldr	r3, [r3, #52]
 2358 00e4 C3F3CC03 		ubfx	r3, r3, #3, #13
 2359 00e8 A364     		str	r3, [r4, #72]
 2360 00ea 10BD     		pop	{r4, pc}
 2361              	.LVL199:
 2362              	.L233:
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 2363              		.loc 1 1349 0
 2364 00ec 184B     		ldr	r3, .L255
 2365 00ee 1B68     		ldr	r3, [r3]
 2366 00f0 13F4803F 		tst	r3, #65536
 2367 00f4 03D0     		beq	.L235
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2368              		.loc 1 1351 0
 2369 00f6 4FF48033 		mov	r3, #65536
 2370 00fa 4360     		str	r3, [r0, #4]
 2371 00fc 8CE7     		b	.L234
 2372              	.L235:
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2373              		.loc 1 1355 0
 2374 00fe 0023     		movs	r3, #0
 2375 0100 4360     		str	r3, [r0, #4]
 2376 0102 89E7     		b	.L234
 2377              	.L236:
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2378              		.loc 1 1365 0
 2379 0104 0023     		movs	r3, #0
 2380 0106 E361     		str	r3, [r4, #28]
 2381 0108 8DE7     		b	.L237
 2382              	.LVL200:
 2383              	.L238:
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2384              		.loc 1 1374 0
 2385 010a 114B     		ldr	r3, .L255
ARM GAS  /tmp/ccWY3npq.s 			page 72


 2386 010c DB68     		ldr	r3, [r3, #12]
 2387 010e C3F30563 		ubfx	r3, r3, #24, #6
 2388 0112 2362     		str	r3, [r4, #32]
 2389 0114 92E7     		b	.L239
 2390              	.L240:
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2391              		.loc 1 1384 0
 2392 0116 0023     		movs	r3, #0
 2393 0118 E360     		str	r3, [r4, #12]
 2394 011a 96E7     		b	.L241
 2395              	.L242:
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2396              		.loc 1 1393 0
 2397 011c 0C4B     		ldr	r3, .L255
 2398 011e 5B68     		ldr	r3, [r3, #4]
 2399 0120 C3F30663 		ubfx	r3, r3, #24, #7
 2400 0124 2361     		str	r3, [r4, #16]
 2401 0126 9BE7     		b	.L243
 2402              	.L244:
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 2403              		.loc 1 1401 0
 2404 0128 094B     		ldr	r3, .L255
 2405 012a 1B6F     		ldr	r3, [r3, #112]
 2406 012c 13F0010F 		tst	r3, #1
 2407 0130 02D0     		beq	.L246
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2408              		.loc 1 1403 0
 2409 0132 0123     		movs	r3, #1
 2410 0134 A360     		str	r3, [r4, #8]
 2411 0136 9AE7     		b	.L245
 2412              	.L246:
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2413              		.loc 1 1407 0
 2414 0138 0023     		movs	r3, #0
 2415 013a A360     		str	r3, [r4, #8]
 2416 013c 97E7     		b	.L245
 2417              	.L247:
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2418              		.loc 1 1417 0
 2419 013e 0023     		movs	r3, #0
 2420 0140 6361     		str	r3, [r4, #20]
 2421 0142 9BE7     		b	.L248
 2422              	.L249:
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2423              		.loc 1 1427 0
 2424 0144 0023     		movs	r3, #0
 2425 0146 A361     		str	r3, [r4, #24]
 2426 0148 9FE7     		b	.L250
 2427              	.L254:
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2428              		.loc 1 1433 0
 2429 014a 0223     		movs	r3, #2
 2430 014c 6362     		str	r3, [r4, #36]
 2431 014e A3E7     		b	.L252
 2432              	.L256:
 2433              		.align	2
 2434              	.L255:
ARM GAS  /tmp/ccWY3npq.s 			page 73


 2435 0150 00440258 		.word	1476543488
 2436              		.cfi_endproc
 2437              	.LFE151:
 2439              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2440              		.align	1
 2441              		.global	HAL_RCC_GetClockConfig
 2442              		.syntax unified
 2443              		.thumb
 2444              		.thumb_func
 2445              		.fpu fpv5-d16
 2447              	HAL_RCC_GetClockConfig:
 2448              	.LFB152:
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * RCC configuration registers.
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct: pointer to an RCC_ClkInitTypeDef structure that
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * will be configured.
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  pFLatency: Pointer on the Flash Latency.
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2449              		.loc 1 1459 0
 2450              		.cfi_startproc
 2451              		@ args = 0, pretend = 0, frame = 0
 2452              		@ frame_needed = 0, uses_anonymous_args = 0
 2453              		@ link register save eliminated.
 2454              	.LVL201:
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 
 2455              		.loc 1 1461 0
 2456 0000 3F23     		movs	r3, #63
 2457 0002 0360     		str	r3, [r0]
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                                  RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2458              		.loc 1 1465 0
 2459 0004 114B     		ldr	r3, .L258
 2460 0006 1A69     		ldr	r2, [r3, #16]
 2461 0008 02F00702 		and	r2, r2, #7
 2462 000c 4260     		str	r2, [r0, #4]
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the SYSCLK configuration ----------------------------------------------*/
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
 2463              		.loc 1 1468 0
 2464 000e 9A69     		ldr	r2, [r3, #24]
 2465 0010 02F47062 		and	r2, r2, #3840
 2466 0014 8260     		str	r2, [r0, #8]
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the D1HCLK configuration ----------------------------------------------*/
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
 2467              		.loc 1 1471 0
 2468 0016 9A69     		ldr	r2, [r3, #24]
 2469 0018 02F00F02 		and	r2, r2, #15
ARM GAS  /tmp/ccWY3npq.s 			page 74


 2470 001c C260     		str	r2, [r0, #12]
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB3 configuration ----------------------------------------------*/
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
 2471              		.loc 1 1474 0
 2472 001e 9A69     		ldr	r2, [r3, #24]
 2473 0020 02F07002 		and	r2, r2, #112
 2474 0024 0261     		str	r2, [r0, #16]
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
 2475              		.loc 1 1477 0
 2476 0026 DA69     		ldr	r2, [r3, #28]
 2477 0028 02F07002 		and	r2, r2, #112
 2478 002c 4261     		str	r2, [r0, #20]
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
 2479              		.loc 1 1480 0
 2480 002e DA69     		ldr	r2, [r3, #28]
 2481 0030 02F4E062 		and	r2, r2, #1792
 2482 0034 8261     		str	r2, [r0, #24]
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB4 configuration ----------------------------------------------*/
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
 2483              		.loc 1 1483 0
 2484 0036 1B6A     		ldr	r3, [r3, #32]
 2485 0038 03F07003 		and	r3, r3, #112
 2486 003c C361     		str	r3, [r0, #28]
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 2487              		.loc 1 1487 0
 2488 003e 044B     		ldr	r3, .L258+4
 2489 0040 1B68     		ldr	r3, [r3]
 2490 0042 03F00F03 		and	r3, r3, #15
 2491 0046 0B60     		str	r3, [r1]
 2492 0048 7047     		bx	lr
 2493              	.L259:
 2494 004a 00BF     		.align	2
 2495              	.L258:
 2496 004c 00440258 		.word	1476543488
 2497 0050 00200052 		.word	1375739904
 2498              		.cfi_endproc
 2499              	.LFE152:
 2501              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2502              		.align	1
 2503              		.weak	HAL_RCC_CSSCallback
 2504              		.syntax unified
 2505              		.thumb
 2506              		.thumb_func
 2507              		.fpu fpv5-d16
 2509              	HAL_RCC_CSSCallback:
 2510              	.LFB154:
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccWY3npq.s 			page 75


1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     HAL_RCC_CCSCallback();
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval none
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** __weak void HAL_RCC_CCSCallback(void)
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2511              		.loc 1 1513 0
 2512              		.cfi_startproc
 2513              		@ args = 0, pretend = 0, frame = 0
 2514              		@ frame_needed = 0, uses_anonymous_args = 0
 2515              		@ link register save eliminated.
 2516 0000 7047     		bx	lr
 2517              		.cfi_endproc
 2518              	.LFE154:
 2520              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2521              		.align	1
 2522              		.global	HAL_RCC_NMI_IRQHandler
 2523              		.syntax unified
 2524              		.thumb
 2525              		.thumb_func
 2526              		.fpu fpv5-d16
 2528              	HAL_RCC_NMI_IRQHandler:
 2529              	.LFB153:
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2530              		.loc 1 1496 0
 2531              		.cfi_startproc
 2532              		@ args = 0, pretend = 0, frame = 0
 2533              		@ frame_needed = 0, uses_anonymous_args = 0
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2534              		.loc 1 1496 0
 2535 0000 08B5     		push	{r3, lr}
 2536              	.LCFI19:
 2537              		.cfi_def_cfa_offset 8
 2538              		.cfi_offset 3, -8
 2539              		.cfi_offset 14, -4
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 2540              		.loc 1 1498 0
 2541 0002 064B     		ldr	r3, .L265
 2542 0004 5B6E     		ldr	r3, [r3, #100]
ARM GAS  /tmp/ccWY3npq.s 			page 76


 2543 0006 13F4806F 		tst	r3, #1024
 2544 000a 00D1     		bne	.L264
 2545              	.L261:
 2546 000c 08BD     		pop	{r3, pc}
 2547              	.L264:
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 2548              		.loc 1 1501 0
 2549 000e FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2550              	.LVL202:
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2551              		.loc 1 1504 0
 2552 0012 4FF48062 		mov	r2, #1024
 2553 0016 014B     		ldr	r3, .L265
 2554 0018 9A66     		str	r2, [r3, #104]
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 2555              		.loc 1 1506 0
 2556 001a F7E7     		b	.L261
 2557              	.L266:
 2558              		.align	2
 2559              	.L265:
 2560 001c 00440258 		.word	1476543488
 2561              		.cfi_endproc
 2562              	.LFE153:
 2564              		.text
 2565              	.Letext0:
 2566              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2567              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2568              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 2569              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 2570              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 2571              		.file 7 "/usr/include/newlib/sys/lock.h"
 2572              		.file 8 "/usr/include/newlib/sys/_types.h"
 2573              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 2574              		.file 10 "/usr/include/newlib/sys/reent.h"
 2575              		.file 11 "/usr/include/newlib/math.h"
 2576              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 2577              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 2578              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 2579              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 2580              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 2581              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
ARM GAS  /tmp/ccWY3npq.s 			page 77


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_rcc.c
     /tmp/ccWY3npq.s:17     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccWY3npq.s:24     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccWY3npq.s:270    .text.HAL_RCC_DeInit:0000000000000150 $d
     /tmp/ccWY3npq.s:282    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccWY3npq.s:289    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccWY3npq.s:764    .text.HAL_RCC_OscConfig:00000000000002b8 $d
     /tmp/ccWY3npq.s:768    .text.HAL_RCC_OscConfig:00000000000002bc $t
     /tmp/ccWY3npq.s:1198   .text.HAL_RCC_OscConfig:0000000000000584 $d
     /tmp/ccWY3npq.s:1205   .text.HAL_RCC_OscConfig:0000000000000594 $t
     /tmp/ccWY3npq.s:1258   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccWY3npq.s:1265   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccWY3npq.s:1380   .text.HAL_RCC_MCOConfig:0000000000000098 $d
     /tmp/ccWY3npq.s:1387   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccWY3npq.s:1394   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccWY3npq.s:1410   .text.HAL_RCC_EnableCSS:000000000000000c $d
     /tmp/ccWY3npq.s:1415   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/ccWY3npq.s:1422   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/ccWY3npq.s:1438   .text.HAL_RCC_DisableCSS:000000000000000c $d
     /tmp/ccWY3npq.s:1443   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccWY3npq.s:1450   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccWY3npq.s:1680   .text.HAL_RCC_GetSysClockFreq:00000000000001d0 $d
     /tmp/ccWY3npq.s:1692   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccWY3npq.s:1699   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccWY3npq.s:2080   .text.HAL_RCC_ClockConfig:0000000000000264 $d
     /tmp/ccWY3npq.s:2089   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccWY3npq.s:2096   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccWY3npq.s:2124   .text.HAL_RCC_GetHCLKFreq:0000000000000020 $d
     /tmp/ccWY3npq.s:2131   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccWY3npq.s:2138   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccWY3npq.s:2164   .text.HAL_RCC_GetPCLK1Freq:000000000000001c $d
     /tmp/ccWY3npq.s:2170   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccWY3npq.s:2177   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccWY3npq.s:2203   .text.HAL_RCC_GetPCLK2Freq:000000000000001c $d
     /tmp/ccWY3npq.s:2209   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccWY3npq.s:2216   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccWY3npq.s:2435   .text.HAL_RCC_GetOscConfig:0000000000000150 $d
     /tmp/ccWY3npq.s:2440   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccWY3npq.s:2447   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccWY3npq.s:2496   .text.HAL_RCC_GetClockConfig:000000000000004c $d
     /tmp/ccWY3npq.s:2502   .text.HAL_RCC_CSSCallback:0000000000000000 $t
     /tmp/ccWY3npq.s:2509   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccWY3npq.s:2521   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccWY3npq.s:2528   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccWY3npq.s:2560   .text.HAL_RCC_NMI_IRQHandler:000000000000001c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
uwTickPrio
HAL_GetREVID
HAL_GPIO_Init
D1CorePrescTable
HAL_RCCEx_GetD1SysClockFreq
ARM GAS  /tmp/ccWY3npq.s 			page 78


SystemD2Clock
