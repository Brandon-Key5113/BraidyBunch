<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [STM32L053R8-Nucleo\STM32L053R8-Nucleo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image STM32L053R8-Nucleo\STM32L053R8-Nucleo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Nov 26 17:21:31 2019
<BR><P>
<H3>Maximum Stack Usage =        224 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
L6474_Init &rArr; L6474_SetDeviceParamsToGivenValues &rArr; L6474_SetRegisterToGivenValues &rArr; L6474_SetAnalogValue &rArr; L6474_CmdSetParam &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[74]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4a]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4a]">ADC1_COMP_IRQHandler</a><BR>
 <LI><a href="#[3a]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3a]">HardFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4a]">ADC1_COMP_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[47]">DMA1_Channel1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[48]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[49]">DMA1_Channel4_5_6_7_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[43]">EXTI0_1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[44]">EXTI2_3_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[45]">EXTI4_15_IRQHandler</a> from stm32l0xx_it.o(i.EXTI4_15_IRQHandler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[5c]">Error_Handler</a> from main.o(i.Error_Handler) referenced from main.o(i.main)
 <LI><a href="#[41]">FLASH_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[3a]">HardFault_Handler</a> from stm32l0xx_it.o(i.HardFault_Handler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[50]">I2C1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[51]">I2C2_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[7]">L6474_AttachErrorHandler</a> from l6474.o(i.L6474_AttachErrorHandler) referenced 2 times from l6474.o(.data)
 <LI><a href="#[8]">L6474_AttachFlagInterrupt</a> from l6474.o(i.L6474_AttachFlagInterrupt) referenced 2 times from l6474.o(.data)
 <LI><a href="#[23]">L6474_CmdDisable</a> from l6474.o(i.L6474_CmdDisable) referenced 2 times from l6474.o(.data)
 <LI><a href="#[24]">L6474_CmdEnable</a> from l6474.o(i.L6474_CmdEnable) referenced 2 times from l6474.o(.data)
 <LI><a href="#[25]">L6474_CmdGetParam</a> from l6474.o(i.L6474_CmdGetParam) referenced 2 times from l6474.o(.data)
 <LI><a href="#[26]">L6474_CmdGetStatus</a> from l6474.o(i.L6474_CmdGetStatus) referenced 2 times from l6474.o(.data)
 <LI><a href="#[27]">L6474_CmdNop</a> from l6474.o(i.L6474_CmdNop) referenced 2 times from l6474.o(.data)
 <LI><a href="#[28]">L6474_CmdSetParam</a> from l6474.o(i.L6474_CmdSetParam) referenced 2 times from l6474.o(.data)
 <LI><a href="#[30]">L6474_ErrorHandler</a> from l6474.o(i.L6474_ErrorHandler) referenced 2 times from l6474.o(.data)
 <LI><a href="#[9]">L6474_FlagInterruptHandler</a> from l6474.o(i.L6474_FlagInterruptHandler) referenced 2 times from l6474.o(.data)
 <LI><a href="#[a]">L6474_GetAcceleration</a> from l6474.o(i.L6474_GetAcceleration) referenced 2 times from l6474.o(.data)
 <LI><a href="#[37]">L6474_GetAnalogValue</a> from l6474.o(i.L6474_GetAnalogValue) referenced 2 times from l6474.o(.data)
 <LI><a href="#[b]">L6474_GetCurrentSpeed</a> from l6474.o(i.L6474_GetCurrentSpeed) referenced 2 times from l6474.o(.data)
 <LI><a href="#[c]">L6474_GetDeceleration</a> from l6474.o(i.L6474_GetDeceleration) referenced 2 times from l6474.o(.data)
 <LI><a href="#[d]">L6474_GetDeviceState</a> from l6474.o(i.L6474_GetDeviceState) referenced 2 times from l6474.o(.data)
 <LI><a href="#[34]">L6474_GetDirection</a> from l6474.o(i.L6474_GetDirection) referenced 2 times from l6474.o(.data)
 <LI><a href="#[e]">L6474_GetFwVersion</a> from l6474.o(i.L6474_GetFwVersion) referenced 2 times from l6474.o(.data)
 <LI><a href="#[f]">L6474_GetMark</a> from l6474.o(i.L6474_GetMark) referenced 2 times from l6474.o(.data)
 <LI><a href="#[10]">L6474_GetMaxSpeed</a> from l6474.o(i.L6474_GetMaxSpeed) referenced 2 times from l6474.o(.data)
 <LI><a href="#[11]">L6474_GetMinSpeed</a> from l6474.o(i.L6474_GetMinSpeed) referenced 2 times from l6474.o(.data)
 <LI><a href="#[2f]">L6474_GetNbDevices</a> from l6474.o(i.L6474_GetNbDevices) referenced 2 times from l6474.o(.data)
 <LI><a href="#[12]">L6474_GetPosition</a> from l6474.o(i.L6474_GetPosition) referenced 2 times from l6474.o(.data)
 <LI><a href="#[33]">L6474_GetStepMode</a> from l6474.o(i.L6474_GetStepMode) referenced 2 times from l6474.o(.data)
 <LI><a href="#[32]">L6474_GetStopMode</a> from l6474.o(i.L6474_GetStopMode) referenced 2 times from l6474.o(.data)
 <LI><a href="#[13]">L6474_GoHome</a> from l6474.o(i.L6474_GoHome) referenced 2 times from l6474.o(.data)
 <LI><a href="#[14]">L6474_GoMark</a> from l6474.o(i.L6474_GoMark) referenced 2 times from l6474.o(.data)
 <LI><a href="#[15]">L6474_GoTo</a> from l6474.o(i.L6474_GoTo) referenced 2 times from l6474.o(.data)
 <LI><a href="#[16]">L6474_HardStop</a> from l6474.o(i.L6474_HardStop) referenced 2 times from l6474.o(.data)
 <LI><a href="#[2e]">L6474_HizStop</a> from l6474.o(i.L6474_HizStop) referenced 2 times from l6474.o(.data)
 <LI><a href="#[5]">L6474_Init</a> from l6474.o(i.L6474_Init) referenced 2 times from l6474.o(.data)
 <LI><a href="#[17]">L6474_Move</a> from l6474.o(i.L6474_Move) referenced 2 times from l6474.o(.data)
 <LI><a href="#[6]">L6474_ReadId</a> from l6474.o(i.L6474_ReadId) referenced 2 times from l6474.o(.data)
 <LI><a href="#[29]">L6474_ReadStatusRegister</a> from l6474.o(i.L6474_ReadStatusRegister) referenced 2 times from l6474.o(.data)
 <LI><a href="#[2a]">L6474_ReleaseReset</a> from l6474.o(i.L6474_ReleaseReset) referenced 2 times from l6474.o(.data)
 <LI><a href="#[2b]">L6474_Reset</a> from l6474.o(i.L6474_Reset) referenced 2 times from l6474.o(.data)
 <LI><a href="#[18]">L6474_ResetAllDevices</a> from l6474.o(i.L6474_ResetAllDevices) referenced 2 times from l6474.o(.data)
 <LI><a href="#[19]">L6474_Run</a> from l6474.o(i.L6474_Run) referenced 2 times from l6474.o(.data)
 <LI><a href="#[2c]">L6474_SelectStepMode</a> from l6474.o(i.L6474_SelectStepMode) referenced 2 times from l6474.o(.data)
 <LI><a href="#[1a]">L6474_SetAcceleration</a> from l6474.o(i.L6474_SetAcceleration) referenced 2 times from l6474.o(.data)
 <LI><a href="#[36]">L6474_SetAnalogValue</a> from l6474.o(i.L6474_SetAnalogValue) referenced 2 times from l6474.o(.data)
 <LI><a href="#[1b]">L6474_SetDeceleration</a> from l6474.o(i.L6474_SetDeceleration) referenced 2 times from l6474.o(.data)
 <LI><a href="#[2d]">L6474_SetDirection</a> from l6474.o(i.L6474_SetDirection) referenced 2 times from l6474.o(.data)
 <LI><a href="#[1c]">L6474_SetHome</a> from l6474.o(i.L6474_SetHome) referenced 2 times from l6474.o(.data)
 <LI><a href="#[1d]">L6474_SetMark</a> from l6474.o(i.L6474_SetMark) referenced 2 times from l6474.o(.data)
 <LI><a href="#[1e]">L6474_SetMaxSpeed</a> from l6474.o(i.L6474_SetMaxSpeed) referenced 2 times from l6474.o(.data)
 <LI><a href="#[1f]">L6474_SetMinSpeed</a> from l6474.o(i.L6474_SetMinSpeed) referenced 2 times from l6474.o(.data)
 <LI><a href="#[35]">L6474_SetNbDevices</a> from l6474.o(i.L6474_SetNbDevices) referenced 2 times from l6474.o(.data)
 <LI><a href="#[31]">L6474_SetStopMode</a> from l6474.o(i.L6474_SetStopMode) referenced 2 times from l6474.o(.data)
 <LI><a href="#[20]">L6474_SoftStop</a> from l6474.o(i.L6474_SoftStop) referenced 2 times from l6474.o(.data)
 <LI><a href="#[21]">L6474_StepClockHandler</a> from l6474.o(i.L6474_StepClockHandler) referenced 2 times from l6474.o(.data)
 <LI><a href="#[22]">L6474_WaitWhileActive</a> from l6474.o(i.L6474_WaitWhileActive) referenced 2 times from l6474.o(.data)
 <LI><a href="#[57]">LCD_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[4b]">LPTIM1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[5b]">MyFlagInterruptHandler</a> from main.o(i.MyFlagInterruptHandler) referenced from main.o(i.main)
 <LI><a href="#[39]">NMI_Handler</a> from stm32l0xx_it.o(i.NMI_Handler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[3f]">PVD_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[3c]">PendSV_Handler</a> from stm32l0xx_it.o(i.PendSV_Handler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[42]">RCC_CRS_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[56]">RNG_LPUART1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[40]">RTC_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[38]">Reset_Handler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[52]">SPI1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[53]">SPI2_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[3b]">SVC_Handler</a> from stm32l0xx_it.o(i.SVC_Handler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[3d]">SysTick_Handler</a> from stm32l0xx_it.o(i.SysTick_Handler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[59]">SystemInit</a> from system_stm32l0xx.o(i.SystemInit) referenced from startup_stm32l053xx.o(.text)
 <LI><a href="#[4e]">TIM21_IRQHandler</a> from stm32l0xx_it.o(i.TIM21_IRQHandler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[4f]">TIM22_IRQHandler</a> from stm32l0xx_it.o(i.TIM22_IRQHandler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[4c]">TIM2_IRQHandler</a> from stm32l0xx_it.o(i.TIM2_IRQHandler) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[4d]">TIM6_DAC_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[46]">TSC_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[54]">USART1_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[55]">USART2_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[58]">USB_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[3e]">WWDG_IRQHandler</a> from startup_stm32l053xx.o(.text) referenced from startup_stm32l053xx.o(RESET)
 <LI><a href="#[5d]">__main</a> from __main.o(!!!main) referenced from startup_stm32l053xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5d]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[5e]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[60]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[f2]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[f3]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[f4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[64]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[f5]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[f6]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[f7]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[f8]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[f9]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[fa]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[fb]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[fc]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[fd]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[fe]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[ff]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[100]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[101]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[102]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[103]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[104]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[105]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[106]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[107]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[108]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[109]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[69]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[10a]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[10b]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[10c]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[10d]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[10e]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[10f]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[110]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[5f]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[111]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[61]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[63]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[112]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[65]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[113]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[76]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[68]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[114]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[6a]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[38]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA1_Channel4_5_6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>RCC_CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>RNG_LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l053xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32l053xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[115]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Pwm3SetFreq
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Pwm2SetFreq
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Pwm1SetFreq
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_StepClockHandler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ComputeSpeedProfile
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[116]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[117]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tval_Current_to_Par
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tmin_Time_to_Par
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetAnalogValue
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Ocd_Th_to_Par
</UL>

<P><STRONG><a name="[11b]"></a>_ffixu</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ffixui.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>__aeabi_i2f_normalise</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[6c]"></a>__aeabi_i2f</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetAnalogValue
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GetAnalogValue
</UL>

<P><STRONG><a name="[11c]"></a>_fflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>__aeabi_ui2f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tval_Par_to_Current
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tmin_Par_to_Time
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Ocd_Par_to_Th
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GetAnalogValue
</UL>

<P><STRONG><a name="[11d]"></a>_ffltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[ea]"></a>__ARM_scalbnf</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, fscalbn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tmin_Time_to_Par
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tmin_Par_to_Time
</UL>

<P><STRONG><a name="[6f]"></a>__fpl_fcmp_InfNaN</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, fcmpin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
</UL>

<P><STRONG><a name="[70]"></a>__fpl_cmpreturn</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, cmpret.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[71]"></a>__fpl_fcheck_NaN2</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fnan2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[62]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[67]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[72]"></a>__fpl_return_NaN</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, retnan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[11e]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[11f]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[120]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[121]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[122]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[123]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[124]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>BSP_MotorControl_AttachErrorHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_AttachErrorHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_AttachErrorHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>BSP_MotorControl_AttachFlagInterrupt</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_AttachFlagInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_AttachFlagInterrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>BSP_MotorControl_CmdGetStatus</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_CmdGetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_CmdGetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFlagInterruptHandler
</UL>

<P><STRONG><a name="[78]"></a>BSP_MotorControl_ErrorHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_ErrorHandler))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_WaitWhileActive
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_StepClockHandler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SoftStop
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetMinSpeed
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetMaxSpeed
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetMark
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetHome
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetDeceleration
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetAcceleration
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SelectStepMode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_Run
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_HardStop
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GoTo
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GoMark
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GoHome
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GetPosition
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GetMinSpeed
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GetMaxSpeed
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GetDeviceState
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GetDeceleration
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GetCurrentSpeed
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GetAcceleration
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_FlagInterruptHandler
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_CmdGetStatus
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_AttachFlagInterrupt
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_AttachErrorHandler
</UL>

<P><STRONG><a name="[7b]"></a>BSP_MotorControl_FlagInterruptHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_FlagInterruptHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_FlagInterruptHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[7c]"></a>BSP_MotorControl_GetAcceleration</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_GetAcceleration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_GetAcceleration
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>BSP_MotorControl_GetCurrentSpeed</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_GetCurrentSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_GetCurrentSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>BSP_MotorControl_GetDeceleration</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_GetDeceleration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_GetDeceleration
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>BSP_MotorControl_GetDeviceState</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_GetDeviceState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_GetDeviceState
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
</UL>

<P><STRONG><a name="[80]"></a>BSP_MotorControl_GetMaxSpeed</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_GetMaxSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_GetMaxSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>BSP_MotorControl_GetMinSpeed</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_GetMinSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_GetMinSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>BSP_MotorControl_GetPosition</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_GetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_GetPosition
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>BSP_MotorControl_GoHome</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_GoHome))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_GoHome
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>BSP_MotorControl_GoMark</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_GoMark))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_GoMark
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[85]"></a>BSP_MotorControl_GoTo</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_GoTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_GoTo
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>BSP_MotorControl_HardStop</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_HardStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_HardStop
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>BSP_MotorControl_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>BSP_MotorControl_Run</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_Run
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>BSP_MotorControl_SelectStepMode</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_SelectStepMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_SelectStepMode
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>BSP_MotorControl_SetAcceleration</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_SetAcceleration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_SetAcceleration
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>BSP_MotorControl_SetDeceleration</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_SetDeceleration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_SetDeceleration
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8c]"></a>BSP_MotorControl_SetHome</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_SetHome))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_SetHome
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>BSP_MotorControl_SetMark</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_SetMark))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_SetMark
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>BSP_MotorControl_SetMaxSpeed</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_SetMaxSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_SetMaxSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>BSP_MotorControl_SetMinSpeed</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_SetMinSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_SetMinSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>BSP_MotorControl_SetNbDevices</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_SetNbDevices))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP_MotorControl_SetNbDevices
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GetMotorHandle
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l648x_GetMotorHandle
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l647x_GetMotorHandle
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stspin240_250_GetMotorHandle
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stspin220_GetMotorHandle
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Powerstep01_GetMotorHandle
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6208_GetMotorHandle
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6206_GetMotorHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[99]"></a>BSP_MotorControl_SoftStop</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_SoftStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_SoftStop
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>BSP_MotorControl_StepClockHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_StepClockHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_StepClockHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
</UL>

<P><STRONG><a name="[9b]"></a>BSP_MotorControl_WaitWhileActive</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, x_nucleo_ihmxx.o(i.BSP_MotorControl_WaitWhileActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_MotorControl_WaitWhileActive
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EXTI4_15_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; BSP_MotorControl_FlagInterruptHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>Error_Handler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[9d]"></a>HAL_Delay</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, stm32l0xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Delay
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32l0xx_hal_msp.o(i.HAL_GPIO_EXTI_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_GPIO_EXTI_Callback &rArr; BSP_MotorControl_FlagInterruptHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_FlagInterruptHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[9c]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; BSP_MotorControl_FlagInterruptHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[ad]"></a>HAL_GPIO_Init</STRONG> (Thumb, 346 bytes, Stack size 24 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_GpioInit
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_MspInit
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>

<P><STRONG><a name="[c0]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
</UL>

<P><STRONG><a name="[bf]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
</UL>

<P><STRONG><a name="[ca]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_SpiWriteBytes
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_SetDirectionGpio
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Reset
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_ReleaseReset
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_GpioInit
</UL>

<P><STRONG><a name="[9e]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[eb]"></a>HAL_IncTick</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[a0]"></a>HAL_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32l0xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>HAL_InitTick</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32l0xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[a2]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[be]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l0xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_GpioInit
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_MspInit
</UL>

<P><STRONG><a name="[a5]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32l0xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_GpioInit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_MspInit
</UL>

<P><STRONG><a name="[a7]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 340 bytes, Stack size 24 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[a8]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Pwm3SetFreq
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Pwm2SetFreq
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Pwm1SetFreq
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[a9]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1106 bytes, Stack size 24 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig &rArr; RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[ab]"></a>HAL_SPI_Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32l0xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_SpiInit
</UL>

<P><STRONG><a name="[ac]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, stm32l0xx_hal_msp.o(i.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[ae]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, stm32l0xx_hal_spi.o(i.HAL_SPI_TransmitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_SpiWriteBytes
</UL>

<P><STRONG><a name="[a4]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32l0xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[cd]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32l0xx_hal_tim_ex.o(i.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_PwmInit
</UL>

<P><STRONG><a name="[b1]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[b0]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 294 bytes, Stack size 16 bytes, stm32l0xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_TIM_IRQHandler &rArr; HAL_TIM_PWM_PulseFinishedCallback &rArr; BSP_MotorControl_StepClockHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM22_IRQHandler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM21_IRQHandler
</UL>

<P><STRONG><a name="[b2]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[b6]"></a>HAL_TIM_PWM_ConfigChannel</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, stm32l0xx_hal_tim.o(i.HAL_TIM_PWM_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_TIM_PWM_ConfigChannel &rArr; TIM_OC4_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4_SetConfig
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3_SetConfig
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2_SetConfig
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_PwmInit
</UL>

<P><STRONG><a name="[bb]"></a>HAL_TIM_PWM_Init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32l0xx_hal_tim.o(i.HAL_TIM_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_TIM_PWM_Init &rArr; HAL_TIM_PWM_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_MspInit
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_PwmInit
</UL>

<P><STRONG><a name="[bc]"></a>HAL_TIM_PWM_MspInit</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, stm32l0xx_hal_msp.o(i.HAL_TIM_PWM_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_TIM_PWM_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
</UL>

<P><STRONG><a name="[b3]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, stm32l0xx_hal_msp.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_PWM_PulseFinishedCallback &rArr; BSP_MotorControl_StepClockHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_StepClockHandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GetDeviceState
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[c1]"></a>HAL_TIM_PWM_Start_IT</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, stm32l0xx_hal_tim.o(i.HAL_TIM_PWM_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_PWM_Start_IT &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Pwm3SetFreq
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Pwm2SetFreq
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Pwm1SetFreq
</UL>

<P><STRONG><a name="[c3]"></a>HAL_TIM_PWM_Stop</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32l0xx_hal_tim.o(i.HAL_TIM_PWM_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_PWM_Stop &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_PwmStop
</UL>

<P><STRONG><a name="[b4]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_tim.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[b5]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[3a]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>L6206_GetMotorHandle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, x_nucleo_ihmxx.o(i.L6206_GetMotorHandle))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetNbDevices
</UL>

<P><STRONG><a name="[94]"></a>L6208_GetMotorHandle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, x_nucleo_ihmxx.o(i.L6208_GetMotorHandle))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetNbDevices
</UL>

<P><STRONG><a name="[c4]"></a>L6474_ApplySpeed</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, l6474.o(i.L6474_ApplySpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = L6474_ApplySpeed &rArr; L6474_Board_Pwm3SetFreq &rArr; HAL_TIM_PWM_Start_IT &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Pwm3SetFreq
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Pwm2SetFreq
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Pwm1SetFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_StepClockHandler
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_StartMovement
</UL>

<P><STRONG><a name="[7]"></a>L6474_AttachErrorHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, l6474.o(i.L6474_AttachErrorHandler))
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>L6474_AttachFlagInterrupt</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, l6474.o(i.L6474_AttachFlagInterrupt))
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[c8]"></a>L6474_Board_Delay</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, x_nucleo_ihm01a1_stm32l0xx.o(i.L6474_Board_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = L6474_Board_Delay &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ResetAllDevices
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Init
</UL>

<P><STRONG><a name="[d5]"></a>L6474_Board_DisableIrq</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, x_nucleo_ihm01a1_stm32l0xx.o(i.L6474_Board_DisableIrq))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SendCommand
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdSetParam
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetStatus
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetParam
</UL>

<P><STRONG><a name="[d4]"></a>L6474_Board_EnableIrq</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, x_nucleo_ihm01a1_stm32l0xx.o(i.L6474_Board_EnableIrq))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SendCommand
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdSetParam
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetStatus
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetParam
</UL>

<P><STRONG><a name="[c9]"></a>L6474_Board_GpioInit</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, x_nucleo_ihm01a1_stm32l0xx.o(i.L6474_Board_GpioInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = L6474_Board_GpioInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Init
</UL>

<P><STRONG><a name="[c6]"></a>L6474_Board_Pwm1SetFreq</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, x_nucleo_ihm01a1_stm32l0xx.o(i.L6474_Board_Pwm1SetFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = L6474_Board_Pwm1SetFreq &rArr; HAL_TIM_PWM_Start_IT &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start_IT
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ApplySpeed
</UL>

<P><STRONG><a name="[c7]"></a>L6474_Board_Pwm2SetFreq</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, x_nucleo_ihm01a1_stm32l0xx.o(i.L6474_Board_Pwm2SetFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = L6474_Board_Pwm2SetFreq &rArr; HAL_TIM_PWM_Start_IT &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start_IT
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ApplySpeed
</UL>

<P><STRONG><a name="[c5]"></a>L6474_Board_Pwm3SetFreq</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, x_nucleo_ihm01a1_stm32l0xx.o(i.L6474_Board_Pwm3SetFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = L6474_Board_Pwm3SetFreq &rArr; HAL_TIM_PWM_Start_IT &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start_IT
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ApplySpeed
</UL>

<P><STRONG><a name="[cc]"></a>L6474_Board_PwmInit</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, x_nucleo_ihm01a1_stm32l0xx.o(i.L6474_Board_PwmInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = L6474_Board_PwmInit &rArr; HAL_TIM_PWM_Init &rArr; HAL_TIM_PWM_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Init
</UL>

<P><STRONG><a name="[ce]"></a>L6474_Board_PwmStop</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, x_nucleo_ihm01a1_stm32l0xx.o(i.L6474_Board_PwmStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = L6474_Board_PwmStop &rArr; HAL_TIM_PWM_Stop &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_HizStop
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_HardStop
</UL>

<P><STRONG><a name="[cf]"></a>L6474_Board_ReleaseReset</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, x_nucleo_ihm01a1_stm32l0xx.o(i.L6474_Board_ReleaseReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = L6474_Board_ReleaseReset
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ResetAllDevices
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ReleaseReset
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Init
</UL>

<P><STRONG><a name="[cb]"></a>L6474_Board_Reset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, x_nucleo_ihm01a1_stm32l0xx.o(i.L6474_Board_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = L6474_Board_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_GpioInit
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ResetAllDevices
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Reset
</UL>

<P><STRONG><a name="[d0]"></a>L6474_Board_SetDirectionGpio</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, x_nucleo_ihm01a1_stm32l0xx.o(i.L6474_Board_SetDirectionGpio))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = L6474_Board_SetDirectionGpio
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetDirection
</UL>

<P><STRONG><a name="[d1]"></a>L6474_Board_SpiInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, x_nucleo_ihm01a1_stm32l0xx.o(i.L6474_Board_SpiInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = L6474_Board_SpiInit &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Init
</UL>

<P><STRONG><a name="[d2]"></a>L6474_Board_SpiWriteBytes</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, x_nucleo_ihm01a1_stm32l0xx.o(i.L6474_Board_SpiWriteBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_WriteBytes
</UL>

<P><STRONG><a name="[23]"></a>L6474_CmdDisable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, l6474.o(i.L6474_CmdDisable))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = L6474_CmdDisable &rArr; L6474_SendCommand &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_HizStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>L6474_CmdEnable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, l6474.o(i.L6474_CmdEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = L6474_CmdEnable &rArr; L6474_SendCommand &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_StartMovement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>L6474_CmdGetParam</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, l6474.o(i.L6474_CmdGetParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = L6474_CmdGetParam &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_EnableIrq
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_DisableIrq
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_WriteBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetHome
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetAnalogValue
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SelectStepMode
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ReadStatusRegister
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Move
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GoTo
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GoMark
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GetStepMode
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GetPosition
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GetMark
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GetAnalogValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>L6474_CmdGetStatus</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, l6474.o(i.L6474_CmdGetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = L6474_CmdGetStatus &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_EnableIrq
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_DisableIrq
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_WriteBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>L6474_CmdNop</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, l6474.o(i.L6474_CmdNop))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = L6474_CmdNop &rArr; L6474_SendCommand &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SendCommand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>L6474_CmdSetParam</STRONG> (Thumb, 186 bytes, Stack size 56 bytes, l6474.o(i.L6474_CmdSetParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = L6474_CmdSetParam &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_EnableIrq
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_DisableIrq
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_WriteBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetRegisterToPredefinedValues
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetRegisterToGivenValues
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetMark
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetHome
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetAnalogValue
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SelectStepMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[d7]"></a>L6474_ComputeSpeedProfile</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, l6474.o(i.L6474_ComputeSpeedProfile))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = L6474_ComputeSpeedProfile
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Move
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GoTo
</UL>

<P><STRONG><a name="[d8]"></a>L6474_ConvertPosition</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, l6474.o(i.L6474_ConvertPosition))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetHome
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Move
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GoTo
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GoMark
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GetPosition
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GetMark
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GetAnalogValue
</UL>

<P><STRONG><a name="[30]"></a>L6474_ErrorHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, l6474.o(i.L6474_ErrorHandler))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_WriteBytes
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>L6474_FlagInterruptHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, l6474.o(i.L6474_FlagInterruptHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = L6474_FlagInterruptHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>L6474_GetAcceleration</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, l6474.o(i.L6474_GetAcceleration))
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[37]"></a>L6474_GetAnalogValue</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, l6474.o(i.L6474_GetAnalogValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = L6474_GetAnalogValue &rArr; L6474_CmdGetParam &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tval_Par_to_Current
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tmin_Par_to_Time
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Ocd_Par_to_Th
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ConvertPosition
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetParam
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>L6474_GetCurrentSpeed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, l6474.o(i.L6474_GetCurrentSpeed))
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>L6474_GetDeceleration</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, l6474.o(i.L6474_GetDeceleration))
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>L6474_GetDeviceState</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, l6474.o(i.L6474_GetDeviceState))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_WaitWhileActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[34]"></a>L6474_GetDirection</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, l6474.o(i.L6474_GetDirection))
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>L6474_GetFwVersion</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, l6474.o(i.L6474_GetFwVersion))
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>L6474_GetMark</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, l6474.o(i.L6474_GetMark))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = L6474_GetMark &rArr; L6474_CmdGetParam &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ConvertPosition
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>L6474_GetMaxSpeed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, l6474.o(i.L6474_GetMaxSpeed))
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>L6474_GetMinSpeed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, l6474.o(i.L6474_GetMinSpeed))
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[91]"></a>L6474_GetMotorHandle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, l6474.o(i.L6474_GetMotorHandle))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetNbDevices
</UL>

<P><STRONG><a name="[2f]"></a>L6474_GetNbDevices</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, l6474.o(i.L6474_GetNbDevices))
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>L6474_GetPosition</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, l6474.o(i.L6474_GetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = L6474_GetPosition &rArr; L6474_CmdGetParam &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ConvertPosition
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>L6474_GetStepMode</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, l6474.o(i.L6474_GetStepMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = L6474_GetStepMode &rArr; L6474_CmdGetParam &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>L6474_GetStopMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, l6474.o(i.L6474_GetStopMode))
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>L6474_GoHome</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, l6474.o(i.L6474_GoHome))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = L6474_GoHome &rArr; L6474_GoTo &rArr; L6474_HardStop &rArr; L6474_HizStop &rArr; L6474_CmdDisable &rArr; L6474_SendCommand &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GoTo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>L6474_GoMark</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, l6474.o(i.L6474_GoMark))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = L6474_GoMark &rArr; L6474_GoTo &rArr; L6474_HardStop &rArr; L6474_HizStop &rArr; L6474_CmdDisable &rArr; L6474_SendCommand &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GoTo
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ConvertPosition
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>L6474_GoTo</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, l6474.o(i.L6474_GoTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = L6474_GoTo &rArr; L6474_HardStop &rArr; L6474_HizStop &rArr; L6474_CmdDisable &rArr; L6474_SendCommand &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_StartMovement
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetDirection
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_HardStop
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ConvertPosition
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ComputeSpeedProfile
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GoMark
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GoHome
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>L6474_HardStop</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, l6474.o(i.L6474_HardStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = L6474_HardStop &rArr; L6474_HizStop &rArr; L6474_CmdDisable &rArr; L6474_SendCommand &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_PwmStop
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_HizStop
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_StepClockHandler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Run
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Move
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GoTo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>L6474_HizStop</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, l6474.o(i.L6474_HizStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = L6474_HizStop &rArr; L6474_CmdDisable &rArr; L6474_SendCommand &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_PwmStop
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SelectStepMode
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ResetAllDevices
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_HardStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>L6474_Init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, l6474.o(i.L6474_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = L6474_Init &rArr; L6474_SetDeviceParamsToGivenValues &rArr; L6474_SetRegisterToGivenValues &rArr; L6474_SetAnalogValue &rArr; L6474_CmdSetParam &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_SpiInit
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_ReleaseReset
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_PwmInit
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_GpioInit
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Delay
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetDeviceParamsToPredefinedValues
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetDeviceParamsToGivenValues
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ErrorHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetStatus
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdDisable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>L6474_Move</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, l6474.o(i.L6474_Move))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = L6474_Move &rArr; L6474_HardStop &rArr; L6474_HizStop &rArr; L6474_CmdDisable &rArr; L6474_SendCommand &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_StartMovement
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetDirection
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_HardStop
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ConvertPosition
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ComputeSpeedProfile
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[da]"></a>L6474_Ocd_Par_to_Th</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, l6474.o(i.L6474_Ocd_Par_to_Th))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = L6474_Ocd_Par_to_Th &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GetAnalogValue
</UL>

<P><STRONG><a name="[e1]"></a>L6474_Ocd_Th_to_Par</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, l6474.o(i.L6474_Ocd_Th_to_Par))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = L6474_Ocd_Th_to_Par &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetAnalogValue
</UL>

<P><STRONG><a name="[6]"></a>L6474_ReadId</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, l6474.o(i.L6474_ReadId))
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>L6474_ReadStatusRegister</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, l6474.o(i.L6474_ReadStatusRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = L6474_ReadStatusRegister &rArr; L6474_CmdGetParam &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>L6474_ReleaseReset</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, l6474.o(i.L6474_ReleaseReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = L6474_ReleaseReset &rArr; L6474_Board_ReleaseReset
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_ReleaseReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>L6474_Reset</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, l6474.o(i.L6474_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = L6474_Reset &rArr; L6474_Board_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>L6474_ResetAllDevices</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, l6474.o(i.L6474_ResetAllDevices))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = L6474_ResetAllDevices &rArr; L6474_HizStop &rArr; L6474_CmdDisable &rArr; L6474_SendCommand &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Reset
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_ReleaseReset
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_Delay
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_HizStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>L6474_Run</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, l6474.o(i.L6474_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = L6474_Run &rArr; L6474_HardStop &rArr; L6474_HizStop &rArr; L6474_CmdDisable &rArr; L6474_SendCommand &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_StartMovement
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetDirection
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_HardStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>L6474_SelectStepMode</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, l6474.o(i.L6474_SelectStepMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = L6474_SelectStepMode &rArr; L6474_CmdSetParam &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_HizStop
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdSetParam
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[d3]"></a>L6474_SendCommand</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, l6474.o(i.L6474_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = L6474_SendCommand &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_EnableIrq
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_DisableIrq
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_WriteBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdNop
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdEnable
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdDisable
</UL>

<P><STRONG><a name="[1a]"></a>L6474_SetAcceleration</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, l6474.o(i.L6474_SetAcceleration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = L6474_SetAcceleration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[36]"></a>L6474_SetAnalogValue</STRONG> (Thumb, 226 bytes, Stack size 24 bytes, l6474.o(i.L6474_SetAnalogValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = L6474_SetAnalogValue &rArr; L6474_CmdSetParam &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tval_Current_to_Par
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tmin_Time_to_Par
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Ocd_Th_to_Par
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdSetParam
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetParam
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetRegisterToGivenValues
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>L6474_SetDeceleration</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, l6474.o(i.L6474_SetDeceleration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = L6474_SetDeceleration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[de]"></a>L6474_SetDeviceParamsToGivenValues</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, l6474.o(i.L6474_SetDeviceParamsToGivenValues))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = L6474_SetDeviceParamsToGivenValues &rArr; L6474_SetRegisterToGivenValues &rArr; L6474_SetAnalogValue &rArr; L6474_CmdSetParam &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetRegisterToGivenValues
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Init
</UL>

<P><STRONG><a name="[df]"></a>L6474_SetDeviceParamsToPredefinedValues</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, l6474.o(i.L6474_SetDeviceParamsToPredefinedValues))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = L6474_SetDeviceParamsToPredefinedValues &rArr; L6474_SetRegisterToPredefinedValues &rArr; L6474_CmdSetParam &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetRegisterToPredefinedValues
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Init
</UL>

<P><STRONG><a name="[2d]"></a>L6474_SetDirection</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, l6474.o(i.L6474_SetDirection))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = L6474_SetDirection &rArr; L6474_Board_SetDirectionGpio
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_SetDirectionGpio
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Run
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Move
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GoTo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>L6474_SetHome</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, l6474.o(i.L6474_SetHome))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = L6474_SetHome &rArr; L6474_CmdSetParam &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ConvertPosition
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdSetParam
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>L6474_SetMark</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, l6474.o(i.L6474_SetMark))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = L6474_SetMark &rArr; L6474_CmdSetParam &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdSetParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>L6474_SetMaxSpeed</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, l6474.o(i.L6474_SetMaxSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = L6474_SetMaxSpeed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>L6474_SetMinSpeed</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, l6474.o(i.L6474_SetMinSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = L6474_SetMinSpeed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>L6474_SetNbDevices</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, l6474.o(i.L6474_SetNbDevices))
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[e8]"></a>L6474_SetRegisterToGivenValues</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, l6474.o(i.L6474_SetRegisterToGivenValues))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = L6474_SetRegisterToGivenValues &rArr; L6474_SetAnalogValue &rArr; L6474_CmdSetParam &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetAnalogValue
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdSetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetDeviceParamsToGivenValues
</UL>

<P><STRONG><a name="[e9]"></a>L6474_SetRegisterToPredefinedValues</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, l6474.o(i.L6474_SetRegisterToPredefinedValues))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = L6474_SetRegisterToPredefinedValues &rArr; L6474_CmdSetParam &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tval_Current_to_Par
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tmin_Time_to_Par
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetStopMode
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdSetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetDeviceParamsToPredefinedValues
</UL>

<P><STRONG><a name="[31]"></a>L6474_SetStopMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, l6474.o(i.L6474_SetStopMode))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetRegisterToPredefinedValues
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>L6474_SoftStop</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, l6474.o(i.L6474_SoftStop))
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[dd]"></a>L6474_StartMovement</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, l6474.o(i.L6474_StartMovement))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = L6474_StartMovement &rArr; L6474_CmdEnable &rArr; L6474_SendCommand &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdEnable
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ApplySpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Run
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Move
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GoTo
</UL>

<P><STRONG><a name="[21]"></a>L6474_StepClockHandler</STRONG> (Thumb, 366 bytes, Stack size 24 bytes, l6474.o(i.L6474_StepClockHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = L6474_StepClockHandler &rArr; L6474_HardStop &rArr; L6474_HizStop &rArr; L6474_CmdDisable &rArr; L6474_SendCommand &rArr; L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_HardStop
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ApplySpeed
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[db]"></a>L6474_Tmin_Par_to_Time</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, l6474.o(i.L6474_Tmin_Par_to_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = L6474_Tmin_Par_to_Time &rArr; __ARM_scalbnf
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GetAnalogValue
</UL>

<P><STRONG><a name="[e7]"></a>L6474_Tmin_Time_to_Par</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, l6474.o(i.L6474_Tmin_Time_to_Par))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = L6474_Tmin_Time_to_Par &rArr; __aeabi_fsub
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetRegisterToPredefinedValues
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetAnalogValue
</UL>

<P><STRONG><a name="[e6]"></a>L6474_Tval_Current_to_Par</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, l6474.o(i.L6474_Tval_Current_to_Par))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = L6474_Tval_Current_to_Par &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetRegisterToPredefinedValues
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetAnalogValue
</UL>

<P><STRONG><a name="[d9]"></a>L6474_Tval_Par_to_Current</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, l6474.o(i.L6474_Tval_Par_to_Current))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = L6474_Tval_Par_to_Current &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GetAnalogValue
</UL>

<P><STRONG><a name="[22]"></a>L6474_WaitWhileActive</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, l6474.o(i.L6474_WaitWhileActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = L6474_WaitWhileActive
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GetDeviceState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l6474.o(.data)
</UL>
<P><STRONG><a name="[d6]"></a>L6474_WriteBytes</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, l6474.o(i.L6474_WriteBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = L6474_WriteBytes &rArr; L6474_Board_SpiWriteBytes &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Board_SpiWriteBytes
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SendCommand
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdSetParam
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetStatus
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_CmdGetParam
</UL>

<P><STRONG><a name="[39]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>Powerstep01_GetMotorHandle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, x_nucleo_ihmxx.o(i.Powerstep01_GetMotorHandle))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetNbDevices
</UL>

<P><STRONG><a name="[3b]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>Stspin220_GetMotorHandle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, x_nucleo_ihmxx.o(i.Stspin220_GetMotorHandle))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetNbDevices
</UL>

<P><STRONG><a name="[98]"></a>Stspin240_250_GetMotorHandle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, x_nucleo_ihmxx.o(i.Stspin240_250_GetMotorHandle))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetNbDevices
</UL>

<P><STRONG><a name="[3d]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[ec]"></a>SystemClock_Config</STRONG> (Thumb, 110 bytes, Stack size 88 bytes, clock_l0.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>SystemInit</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_stm32l0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(.text)
</UL>
<P><STRONG><a name="[4e]"></a>TIM21_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.TIM21_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM21_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PWM_PulseFinishedCallback &rArr; BSP_MotorControl_StepClockHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TIM22_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.TIM22_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM22_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PWM_PulseFinishedCallback &rArr; BSP_MotorControl_StepClockHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIM2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM2_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PWM_PulseFinishedCallback &rArr; BSP_MotorControl_StepClockHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l053xx.o(RESET)
</UL>
<P><STRONG><a name="[dc]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, l6474.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_GetStepMode
</UL>

<P><STRONG><a name="[95]"></a>l647x_GetMotorHandle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, x_nucleo_ihmxx.o(i.l647x_GetMotorHandle))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetNbDevices
</UL>

<P><STRONG><a name="[97]"></a>l648x_GetMotorHandle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, x_nucleo_ihmxx.o(i.l648x_GetMotorHandle))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetNbDevices
</UL>

<P><STRONG><a name="[66]"></a>main</STRONG> (Thumb, 788 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = main &rArr; SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_WaitWhileActive
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SoftStop
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetNbDevices
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetMinSpeed
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetMaxSpeed
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetMark
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetHome
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetDeceleration
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SetAcceleration
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_SelectStepMode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_Run
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_HardStop
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GoTo
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GoMark
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GoHome
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GetPosition
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GetMinSpeed
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GetMaxSpeed
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GetDeceleration
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GetCurrentSpeed
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_GetAcceleration
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_AttachFlagInterrupt
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_AttachErrorHandler
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[e3]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tval_Current_to_Par
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tmin_Time_to_Par
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Ocd_Th_to_Par
</UL>

<P><STRONG><a name="[ed]"></a>_fadd</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[e0]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tval_Par_to_Current
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tval_Current_to_Par
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Ocd_Th_to_Par
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Ocd_Par_to_Th
</UL>

<P><STRONG><a name="[125]"></a>_fmul</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[e5]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_SetAnalogValue
</UL>

<P><STRONG><a name="[ef]"></a>_frcmple</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[e2]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tval_Current_to_Par
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Tmin_Time_to_Par
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L6474_Ocd_Th_to_Par
</UL>

<P><STRONG><a name="[f0]"></a>_fsub</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a6]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32l0xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[aa]"></a>RCC_SetFlashLatencyFromMSIRange</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, stm32l0xx_hal_rcc.o(i.RCC_SetFlashLatencyFromMSIRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[af]"></a>SPI_WaitOnFlagUntilTimeout</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, stm32l0xx_hal_spi.o(i.SPI_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[bd]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32l0xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
</UL>

<P><STRONG><a name="[c2]"></a>TIM_CCxChannelCmd</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32l0xx_hal_tim.o(i.TIM_CCxChannelCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Stop
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start_IT
</UL>

<P><STRONG><a name="[b7]"></a>TIM_OC1_SetConfig</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, stm32l0xx_hal_tim.o(i.TIM_OC1_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[b8]"></a>TIM_OC2_SetConfig</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, stm32l0xx_hal_tim.o(i.TIM_OC2_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[b9]"></a>TIM_OC3_SetConfig</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, stm32l0xx_hal_tim.o(i.TIM_OC3_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC3_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[ba]"></a>TIM_OC4_SetConfig</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, stm32l0xx_hal_tim.o(i.TIM_OC4_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC4_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[5b]"></a>MyFlagInterruptHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(i.MyFlagInterruptHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MyFlagInterruptHandler &rArr; BSP_MotorControl_CmdGetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_MotorControl_CmdGetStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[f1]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[ee]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[75]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
