#ifndef __led_task_H    // header files should include guards
#define __led_task_H

/*******************************************************************************
 * File: led_task.h
 * Author: Brandon Key
 * Created: 01/01/2020
 * 
 * Purpose:
 * Interface and tasks to control LEDs.
 * Just flashes lights at different rates.
 * Not really flushed out. Usefull for detecting hard faults, or FreeRTOS tasks
 * issues. 
 * NOTE: Will have pin conflicts with Ethernet
*******************************************************************************/

#include "cmsis_os.h"
#include "stm32h743xx.h"

// Alternate Mode
//#define LD1_GPIO_PORT (GPIOA)
//#define LD1_GPIO_PIN (GPIO_PIN_5)

#define LD1_GPIO_PORT (GPIOB)
#define LD1_GPIO_PIN (GPIO_PIN_0)

#define LD2_GPIO_PORT (GPIOE)
#define LD2_GPIO_PIN (GPIO_PIN_1)

#define LD3_GPIO_PORT (GPIOB)
#define LD3_GPIO_PIN (GPIO_PIN_14)

enum LED{
    LED_GREEN,
    LED_ORANGE,
    LED_RED,
    LED_MAX
};

typedef struct {
    int id;
    TaskHandle_t handle;  // generated by FreeRTOS, saved for later use (task synchronization, etc.)

    
    uint32_t togglePeriod_ms;
    
    GPIO_TypeDef *GPIOx;
    uint16_t GPIO_Pin;
    
    
} LED_PARAMS_t;

extern LED_PARAMS_t led_params[LED_MAX]; // defined here, allocated in led_task.c

void led_toggle(int id);
void led_task(void *parameters);
void led_task_init(enum LED led);

#endif
